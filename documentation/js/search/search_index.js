var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddToCartDto.html",[0,0.192,1,2.378]],["body/classes/AddToCartDto.html",[0,0.265,1,3.281,2,0.965,3,0.133,4,0.119,5,0.119,6,6.36,7,3.536,8,0.244,9,1.566,10,1,11,3.961,12,4.547,13,2.682,14,3.051,15,3.961,16,0.578,17,0.014,18,3.134,19,1.742,20,4.349,21,5.536,22,7.078,23,0.578,24,4.061,25,4.227,26,4.061,27,4.061,28,1.3,29,4.061,30,4.061,31,4.061,32,4.061,33,4.061,34,0.23,35,2.382,36,2.682,37,2.382,38,0.869,39,3.19,40,4.547,41,3.715,42,3.19,43,3.19,44,2.164,45,2.932,46,2.061,47,2.932,48,0.133,49,4.061,50,4.061,51,2.95,52,1.566,53,5.536,54,5.536,55,4.349,56,0.009,57,0.009]],["title/injectables/AddToCartProvider.html",[58,0.383,59,2.524]],["body/injectables/AddToCartProvider.html",[0,0.138,1,3.43,3,0.095,4,0.084,5,0.084,8,0.174,10,0.77,11,3.639,12,2.086,13,1.23,14,1.4,15,2.728,16,0.425,17,0.014,18,3.018,23,0.425,25,1.939,28,1.001,34,0.212,45,2.086,46,1.466,47,2.086,48,0.095,52,1.755,55,4.09,56,0.007,57,0.007,58,0.414,59,2.728,60,0.789,61,5.039,62,2.086,63,0.864,64,1.281,65,3.407,66,2.523,67,4.337,68,0.663,69,1.093,70,1.581,71,2.889,72,1.114,73,1.001,74,1.761,75,3.776,76,1.195,77,3.495,78,2.889,79,2.047,80,0.864,81,1.339,82,4.337,83,2.889,84,0.427,85,0.977,86,2.086,87,2.086,88,0.877,89,2.37,90,2.889,91,2.889,92,2.889,93,1.114,94,2.889,95,2.889,96,4.337,97,2.889,98,2.086,99,3.639,100,2.023,101,2.889,102,3.22,103,2.921,104,2.889,105,2.523,106,3.407,107,2.086,108,1.698,109,2.889,110,1.067,111,3.776,112,2.413,113,5.671,114,3.776,115,2.413,116,5.787,117,4.337,118,2.889,119,3.776,120,2.889,121,2.889,122,5.207,123,3.407,124,4.337,125,2.516,126,3.776,127,2.889,128,1.621,129,4.337,130,1.4,131,2.516,132,3.776,133,2.516,134,1.4]],["title/modules/AppModule.html",[135,1.218,136,2.897]],["body/modules/AppModule.html",[0,0.165,3,0.113,4,0.101,5,0.101,17,0.014,34,0.289,38,0.737,48,0.113,52,1.632,56,0.008,57,0.008,70,1.894,84,0.509,108,1.61,135,1.751,136,5.929,137,1.467,138,1.467,139,1.597,140,1.597,141,1.467,142,2.672,143,1.597,144,3,145,3,146,3,147,4.653,148,4.653,149,4.653,150,4.653,151,3.213,152,4.36,153,4.36,154,4.653,155,4.653,156,4.36,157,2.287,158,1.597,159,1.467,160,3.446,161,2.63,162,3.446,163,4.935,164,3.446,165,3,166,3,167,3.446,168,3,169,2.313,170,3.446,171,3.446,172,3.446,173,3.446,174,2.287,175,2.505,176,4.297,177,2.287,178,3.446,179,3.446,180,3.446,181,3.446,182,3.446,183,3.446,184,3.446,185,3.446,186,3.446]],["title/injectables/AppService.html",[58,0.383,187,3.152]],["body/injectables/AppService.html",[0,0.273,3,0.188,4,0.167,5,0.167,8,0.343,17,0.013,23,0.466,34,0.209,48,0.188,56,0.011,57,0.011,58,0.657,60,1.559,63,1.372,76,1.581,80,1.136,84,0.843,93,1.22,187,5.411,188,4.967,189,7.686,190,5.705,191,5.705,192,5.705]],["title/modules/AuthModule.html",[135,1.218,147,2.693]],["body/modules/AuthModule.html",[0,0.205,3,0.141,4,0.125,5,0.125,17,0.014,34,0.282,48,0.141,56,0.009,57,0.009,84,0.632,135,1.964,137,1.822,138,1.822,139,1.983,140,1.983,141,1.822,142,2.998,143,2.998,147,5.234,156,3.607,157,2.658,158,1.983,159,1.822,161,3.056,166,3.726,168,5.632,169,2.872,193,3.726,194,3.726,195,3.726,196,4.103,197,4.665,198,4.665,199,4.279,200,4.994,201,3.849,202,2.401,203,5.429,204,3.726,205,4.14,206,4.279,207,4.279,208,2.872,209,4.279,210,4.279,211,3.726,212,4.279,213,3.362,214,4.279,215,4.279,216,3.726,217,3.726]],["title/classes/AuthResolver.html",[0,0.192,205,2.897]],["body/classes/AuthResolver.html",[0,0.191,2,0.948,3,0.131,4,0.117,5,0.117,8,0.24,10,0.992,16,0.548,17,0.014,19,1.536,23,0.548,34,0.246,38,0.853,48,0.131,56,0.009,57,0.009,63,1.09,64,1.891,68,0.916,72,1.436,73,1.29,76,1.432,80,1.243,88,1.211,93,1.335,197,4.569,204,3.474,205,3.949,218,3.474,219,5.526,220,4.762,221,4.762,222,3.99,223,3.99,224,3.474,225,4.505,226,3.99,227,2.549,228,3.474,229,4.222,230,3.99,231,4.762,232,3.474,233,3.979,234,3.99,235,4.762,236,3.068,237,3.979,238,2.365,239,3.474,240,4.506,241,3.474,242,3.99,243,3.99,244,3.99,245,3.99,246,3.99,247,3.99]],["title/injectables/AuthService.html",[58,0.383,197,2.524]],["body/injectables/AuthService.html",[0,0.132,3,0.09,4,0.08,5,0.08,8,0.165,10,0.897,16,0.495,17,0.014,23,0.495,34,0.25,48,0.09,56,0.007,57,0.007,58,0.399,60,0.751,63,0.832,64,1.813,66,3.218,68,0.959,72,1.298,73,1.166,76,1.159,80,1.124,84,0.406,89,2.459,93,1.207,100,2.232,134,3.218,169,1.846,197,2.627,198,4.177,200,2.394,202,1.543,203,5.218,211,2.394,213,3.969,216,3.638,217,2.394,219,4.768,220,3.638,221,3.638,224,3.638,227,2.401,228,3.638,229,3.549,231,2.394,232,3.638,233,3.345,235,3.638,239,2.394,240,1.846,241,2.394,248,2.394,249,4.178,250,2.394,251,3.597,252,5.783,253,2.75,254,3.638,255,4.178,256,2.864,257,2.75,258,2.75,259,2.75,260,2.75,261,1.985,262,2.75,263,2.75,264,1.846,265,2.75,266,3.007,267,4.178,268,2.75,269,2.584,270,2.386,271,2.75,272,2.394,273,2.75,274,3.282,275,2.75,276,2.75,277,2.75,278,1.729,279,5.053,280,2.75,281,4.914,282,4.178,283,4.178,284,2.75,285,2.75,286,2.75,287,2.394,288,3.638,289,2.75,290,4.178,291,2.75,292,4.178,293,3.638,294,2.394,295,2.394,296,1.985,297,1.729,298,2.75,299,3.638,300,2.75,301,4.178,302,2.394,303,2.75]],["title/injectables/BcryptProvider.html",[58,0.383,198,2.524]],["body/injectables/BcryptProvider.html",[0,0.212,3,0.145,4,0.129,5,0.129,8,0.266,10,0.866,16,0.478,17,0.014,23,0.478,34,0.241,48,0.145,56,0.01,57,0.01,58,0.559,60,1.208,63,1.168,64,1.842,72,1.254,73,1.127,76,1.801,80,1.168,84,0.653,89,1.551,93,1.254,100,1.442,198,3.686,227,2.457,274,5.5,278,4.135,304,3.85,305,3.8,306,5.725,307,5.104,308,3.85,309,6.519,310,4.422,311,5.104,312,4.422,313,5.104,314,4.232,315,4.422,316,2.968,317,5.862,318,4.422,319,4.422,320,4.422]],["title/classes/CartEntity.html",[0,0.192,321,2.693]],["body/classes/CartEntity.html",[0,0.198,2,0.985,3,0.136,4,0.121,5,0.121,8,0.249,9,1.588,10,0.83,16,0.613,17,0.014,18,3.161,19,1.849,23,0.613,28,1.311,34,0.233,35,2.578,37,2.408,38,0.887,48,0.136,51,2.991,52,1.588,56,0.009,57,0.009,76,1.288,79,2.502,99,2.607,103,3.571,106,5,110,1.566,134,3.084,256,3.462,264,2.782,321,3.768,322,3.61,323,3.231,324,3.392,325,4.145,326,3.028,327,4.145,328,4.579,329,4.145,330,4.145,331,4.145,332,4.145,333,4.145,334,2.849,335,3.61]],["title/classes/CartItemEntity.html",[0,0.192,328,2.693]],["body/classes/CartItemEntity.html",[0,0.157,2,0.778,3,0.108,4,0.096,5,0.096,8,0.197,9,1.346,10,1.007,11,3.524,12,4.046,13,2.386,14,2.715,15,3.524,16,0.624,17,0.014,18,3.338,19,1.88,20,3.738,23,0.624,25,3.761,28,1.434,34,0.225,35,2.569,37,2.578,38,0.701,45,2.365,46,1.662,47,2.365,48,0.108,51,3.277,52,1.928,56,0.008,57,0.008,99,3.524,108,1.828,110,1.379,128,3.144,130,2.715,321,4.128,323,2.844,324,2.986,326,3.121,328,3.194,334,2.415,336,6.715,337,2.852,338,3.276,339,3.276,340,3.276,341,3.276,342,3.276,343,3.276,344,3.276,345,2.73,346,3.276,347,3.276,348,3.276,349,3.276,350,3.276,351,2.365,352,3.276]],["title/modules/CartModule.html",[135,1.218,148,2.693]],["body/modules/CartModule.html",[0,0.21,3,0.144,4,0.128,5,0.128,17,0.014,34,0.283,48,0.144,56,0.009,57,0.009,59,4.698,84,0.648,135,1.988,137,1.867,138,1.867,139,2.032,140,2.032,141,1.867,142,3.035,143,2.032,148,5.452,151,3.461,157,2.701,158,2.032,159,1.867,161,3.106,201,3.913,202,2.46,353,3.818,354,3.818,355,4.385,356,4.698,357,4.698,358,4.698,359,4.385,360,3.818,361,2.599,362,4.385,363,5.702,364,4.385,365,3.166,366,4.209,367,4.385]],["title/classes/CartResolver.html",[0,0.192,366,2.897]],["body/classes/CartResolver.html",[0,0.152,1,3.59,2,0.754,3,0.104,4,0.093,5,0.093,8,0.191,10,0.895,16,0.526,17,0.014,19,1.354,23,0.494,28,1.057,34,0.275,37,1.758,38,0.678,48,0.104,51,2.476,52,0.897,56,0.008,57,0.008,63,0.926,64,1.792,65,4.321,66,2.252,68,1.066,70,1.655,72,1.295,73,1.164,74,1.86,77,3.692,80,1.096,81,2.549,84,0.469,85,1.073,86,2.29,87,2.29,89,1.113,93,1.177,100,1.034,110,0.78,128,3.086,134,2.252,196,1.69,208,2.129,236,2.607,237,3.26,238,1.88,266,1.69,269,1.35,270,1.247,321,4.065,328,3.119,335,2.761,356,4.237,360,2.761,366,3.355,368,2.761,369,4.046,370,4.321,371,3.171,372,3.171,373,3.171,374,4.447,375,3.651,376,3.971,377,3.171,378,3.171,379,2.129,380,3.171,381,3.171,382,3.171,383,3.171,384,2.754,385,3.171,386,1.69,387,2.29,388,2.29,389,3.171,390,2.29,391,3.459,392,2.29,393,2.29,394,3.171,395,3.171,396,3.971,397,2.761,398,3.171,399,3.171,400,2.491,401,2.761,402,2.761,403,1.61,404,3.171,405,3.171,406,3.171]],["title/injectables/CartService.html",[58,0.383,356,2.524]],["body/injectables/CartService.html",[0,0.186,1,3.934,3,0.128,4,0.113,5,0.113,8,0.234,10,0.981,16,0.542,17,0.014,23,0.542,28,1.182,34,0.255,48,0.128,56,0.009,57,0.009,58,0.587,59,4.531,60,1.061,63,1.069,64,1.88,65,4.217,66,2.981,68,1.232,72,1.42,73,1.276,75,4.674,76,1.753,77,4.455,79,2.419,80,1.226,81,2.851,84,0.574,86,2.803,87,2.803,93,1.316,356,3.376,357,4.645,358,4.645,363,5.357,369,4.674,370,4.217,407,3.381,408,3.883,409,3.883,410,3.883,411,5.368,412,3.883,413,4.674,414,5.779,415,3.883,416,3.883,417,3.05,418,2.803,419,3.883,420,3.883,421,3.883]],["title/guards/CartValidationGuard.html",[376,2.897,422,3.152]],["body/guards/CartValidationGuard.html",[0,0.108,1,3.011,3,0.074,4,0.066,5,0.066,8,0.136,10,0.914,11,2.257,12,4.001,13,2.632,14,2.685,15,2.807,16,0.504,17,0.014,18,2.354,23,0.504,25,3.41,28,1.27,34,0.226,38,0.484,45,1.633,46,1.148,47,1.633,48,0.074,52,1.263,55,2.82,56,0.006,57,0.006,58,0.342,63,0.715,64,1.798,66,3.54,68,0.519,69,0.855,70,1.388,72,1.322,73,1.188,74,1.214,76,1.024,77,2.409,79,1.411,80,1.175,81,1.048,84,0.334,85,0.765,86,1.633,87,1.633,88,0.687,89,2.25,93,0.768,99,1.422,100,1.923,102,1.663,103,2.014,107,1.633,108,2.154,110,0.557,111,1.969,112,1.048,113,3.125,114,1.969,115,1.048,119,1.969,123,1.777,131,1.969,159,0.963,174,1.048,177,1.048,227,1.259,269,2.882,270,2.763,272,1.969,316,1.518,374,2.504,376,2.591,390,1.633,403,1.148,423,1.777,424,5.584,425,1.969,426,4.424,427,3.589,428,3.589,429,3.589,430,3.589,431,3.589,432,2.262,433,3.125,434,3.991,435,2.262,436,1.777,437,3.589,438,2.262,439,3.589,440,2.262,441,2.262,442,3.589,443,2.262,444,3.589,445,2.262,446,3.589,447,2.262,448,4.463,449,1.969,450,1.422,451,2.262,452,1.777,453,1.777,454,2.262,455,1.969,456,2.262,457,2.262,458,2.262,459,2.262,460,2.262,461,2.262,462,1.777,463,5.541,464,4.353,465,2.262,466,3.589,467,2.262,468,1.969,469,2.262,470,3.125,471,2.262,472,2.262,473,3.011,474,1.633,475,2.591,476,2.262,477,2.262,478,3.125,479,1.633,480,2.262,481,2.262,482,2.262,483,2.262,484,2.262,485,1.969,486,2.262,487,2.262,488,2.262,489,1.969]],["title/modules/CategoriesModule.html",[135,1.218,149,2.693]],["body/modules/CategoriesModule.html",[0,0.215,3,0.148,4,0.131,5,0.131,17,0.014,34,0.275,48,0.148,56,0.01,57,0.01,84,0.665,135,2.013,137,1.915,138,1.915,139,2.084,140,2.084,141,1.915,142,3.072,143,3.072,149,5.444,151,3.486,157,2.747,158,2.084,159,1.915,161,3.158,361,2.665,365,3.246,490,3.915,491,3.915,492,4.497,493,3.915,494,5.072,495,4.731,496,4.731,497,4.497,498,3.915,499,4.279,500,4.497,501,5.161,502,4.497]],["title/classes/CategoriesResolver.html",[0,0.192,499,2.897]],["body/classes/CategoriesResolver.html",[0,0.156,2,0.777,3,0.107,4,0.095,5,0.095,8,0.197,10,0.965,16,0.573,17,0.014,19,1.606,23,0.556,28,1.452,34,0.239,38,0.699,48,0.107,56,0.008,57,0.008,63,0.947,64,1.926,68,0.75,72,1.396,73,1.254,80,1.3,88,0.993,93,1.396,110,1.676,225,4.041,227,2.616,236,1.834,237,3.642,238,1.937,266,1.742,379,3.189,384,3.317,494,4.283,498,2.846,499,3.43,503,2.846,504,4.874,505,4.874,506,5.35,507,4.137,508,4.874,509,3.269,510,3.269,511,2.846,512,4.036,513,3.269,514,2.846,515,3.269,516,3.269,517,2.846,518,3.269,519,2.846,520,4.528,521,3.269,522,1.937,523,3.43,524,2.056,525,4.381,526,3.269,527,3.269,528,3.269,529,3.269,530,3.269,531,3.269,532,3.269,533,4.751,534,3.269,535,3.269,536,2.846,537,3.269]],["title/injectables/CategoriesService.html",[58,0.383,494,2.524]],["body/injectables/CategoriesService.html",[0,0.161,3,0.111,4,0.098,5,0.098,8,0.203,10,0.977,16,0.539,17,0.014,23,0.562,28,1.422,34,0.252,48,0.111,56,0.008,57,0.008,58,0.464,60,0.922,63,0.968,64,1.936,66,2.355,68,1.115,72,1.413,73,1.27,80,1.316,84,0.498,93,1.413,100,2.155,110,1.534,227,2.634,266,2.59,305,3.992,418,2.435,494,3.056,495,4.329,496,4.462,501,4.232,504,4.961,505,4.232,506,5.428,507,4.232,508,4.961,511,2.937,512,4.08,514,4.232,517,4.232,519,2.937,520,4.566,522,1.999,523,3.509,524,2.121,538,2.937,539,3.373,540,3.373,541,3.373,542,3.373,543,3.373,544,3.373,545,3.373,546,1.892,547,1.892,548,3.373,549,3.373,550,3.373,551,3.373,552,3.373,553,3.373]],["title/classes/CategoryEntity.html",[0,0.192,525,2.693]],["body/classes/CategoryEntity.html",[0,0.238,2,1.182,3,0.163,4,0.145,5,0.145,8,0.299,9,1.79,16,0.598,17,0.013,18,3.394,19,1.802,23,0.598,28,1.216,34,0.182,35,2.593,37,2.393,38,1.064,48,0.163,56,0.01,57,0.01,73,1.337,76,1.452,110,1.712,323,3.532,324,3.708,326,2.208,334,3.211,525,4.247,554,4.331,555,4.974,556,4.974,557,4.974,558,4.974]],["title/classes/CreateCategoryInput.html",[0,0.192,512,2.378]],["body/classes/CreateCategoryInput.html",[0,0.27,2,1.341,3,0.186,4,0.165,5,0.165,8,0.339,9,1.937,16,0.461,17,0.013,19,1.389,23,0.461,34,0.207,35,2.232,36,3.316,38,1.207,48,0.186,56,0.011,57,0.011,73,1.416,76,1.69,326,2.505,512,4.056,559,5.959,560,4.434,561,5.644]],["title/classes/CreateOrderDto.html",[0,0.192,562,2.897]],["body/classes/CreateOrderDto.html",[0,0.323,2,1.309,3,0.181,4,0.161,5,0.161,8,0.331,9,1.908,16,0.449,17,0.013,19,1.355,23,0.449,28,1.296,34,0.247,35,2.199,36,3.267,38,1.178,40,4.868,44,2.935,48,0.181,56,0.011,57,0.011,128,4.088,562,4.868,563,5.871,564,4.795,565,5.507,566,5.507,567,3.996]],["title/injectables/CreateOrderProvider.html",[58,0.383,568,2.524]],["body/injectables/CreateOrderProvider.html",[0,0.165,3,0.113,4,0.1,5,0.1,8,0.207,10,0.728,11,2.162,13,1.464,14,2.79,15,2.162,16,0.402,17,0.014,23,0.402,28,1.107,34,0.18,46,2.501,48,0.113,52,0.973,56,0.008,57,0.008,58,0.47,60,0.939,63,0.982,64,1.417,68,0.789,69,1.301,70,1.719,72,1.054,73,0.947,74,1.948,76,1.322,79,2.617,80,0.685,81,1.593,84,0.508,85,1.163,88,1.044,89,2.336,93,0.735,98,2.482,99,3.622,100,2.051,102,2.283,103,1.929,105,2.79,108,1.878,110,1.213,125,2.994,128,3.529,130,1.666,269,2.452,270,2.264,386,1.832,403,1.745,470,4.291,473,2.038,568,3.099,569,5.015,570,2.994,571,3.871,572,3.438,573,3.871,574,3.438,575,3.438,576,2.994,577,3.438,578,3.438,579,2.701,580,2.482,581,3.438,582,2.994,583,3.438,584,6.29,585,2.994,586,3.438,587,3.438,588,4.928,589,5.759,590,4.291,591,4.291,592,3.871,593,4.928,594,3.871,595,6.29,596,3.871,597,3.438,598,2.482,599,3.438,600,3.438,601,3.438,602,2.701,603,3.438,604,3.438,605,3.438,606,3.438,607,2.994]],["title/classes/CreateProductsDto.html",[0,0.192,608,2.524]],["body/classes/CreateProductsDto.html",[0,0.266,2,0.766,3,0.106,4,0.094,5,0.094,8,0.194,9,1.331,10,0.902,14,2.69,16,0.606,17,0.014,19,1.722,23,0.571,28,1.173,34,0.237,35,2.339,36,2.278,37,2.1,38,0.689,39,2.532,40,3.395,41,3.726,43,4.361,44,1.717,48,0.106,51,3.252,52,1.331,56,0.008,57,0.008,76,1.401,108,1.811,112,2.573,115,2.573,174,2.828,177,2.828,326,2.087,450,4.4,464,4.794,473,3.29,474,2.327,475,3.395,478,5.314,479,2.327,485,5.314,567,4.016,608,2.957,609,6.244,610,2.532,611,3.114,612,3.29,613,3.726,614,3.223,615,3.223,616,3.223,617,3.223,618,2.532,619,3.223,620,2.806,621,3.223,622,4.909,623,4.094,624,4.702,625,5.314,626,3.223,627,3.223,628,3.223,629,3.223,630,4.094,631,2.806,632,2.327,633,4.834,634,2.532,635,2.532,636,2.806,637,2.806,638,2.806,639,2.806,640,4.702]],["title/injectables/CreateProductsProvider.html",[58,0.383,641,2.524]],["body/injectables/CreateProductsProvider.html",[0,0.168,3,0.115,4,0.102,5,0.102,8,0.211,10,0.739,14,1.699,16,0.408,17,0.014,23,0.408,34,0.245,48,0.115,52,1.414,56,0.008,57,0.008,58,0.477,60,0.958,63,0.996,64,1.433,68,0.805,69,1.326,70,1.734,72,1.069,73,0.96,74,1.69,77,3.354,79,1.379,80,0.699,84,0.518,85,1.186,88,1.065,89,1.23,93,0.75,100,1.144,102,2.316,105,2.421,110,0.863,112,2.316,115,2.316,123,2.755,130,2.421,134,3.617,227,1.753,269,1.493,270,1.379,296,3.608,345,2.218,450,2.205,473,2.078,474,3.608,475,4.582,479,3.608,522,2.078,546,2.803,547,1.967,608,3.991,611,3.266,612,2.078,613,2.353,641,3.143,642,5.07,643,2.353,644,5.822,645,3.507,646,3.507,647,2.755,648,2.205,649,2.532,650,3.053,651,4.997,652,3.507,653,3.507,654,3.507,655,6.708,656,2.955,657,3.507,658,3.053,659,3.053,660,3.507,661,3.507,662,3.507,663,3.507,664,2.353,665,3.507,666,2.532]],["title/injectables/DeleteProductsProvider.html",[58,0.383,667,2.524]],["body/injectables/DeleteProductsProvider.html",[0,0.198,3,0.136,4,0.121,5,0.121,8,0.249,10,0.828,13,3.198,16,0.457,17,0.014,23,0.457,28,1.222,34,0.205,48,0.136,52,1.17,56,0.009,57,0.009,58,0.535,60,1.13,63,1.116,64,1.564,68,0.949,69,1.564,70,1.862,72,1.199,73,1.077,74,2.15,76,1.459,79,2.679,80,0.824,84,0.611,85,1.398,88,1.255,89,1.451,93,0.884,98,2.985,100,2.395,108,1.348,110,1.379,227,1.966,261,2.985,269,2.386,270,2.203,305,3.226,386,2.203,403,2.098,462,3.248,579,3.248,643,2.775,647,3.248,667,3.524,668,5.535,669,4.994,670,3.6,671,3.248,672,4.879,673,3.6,674,3.6,675,3.6,676,4.135,677,4.135,678,4.135,679,4.135]],["title/injectables/FetchAllCategoriesProvider.html",[58,0.383,495,2.524]],["body/injectables/FetchAllCategoriesProvider.html",[0,0.21,3,0.144,4,0.128,5,0.128,8,0.264,10,0.862,16,0.476,17,0.014,23,0.534,28,1.259,34,0.24,48,0.144,56,0.009,57,0.009,58,0.556,60,1.198,63,1.161,64,1.838,68,1.006,69,1.659,70,1.907,72,1.247,73,1.12,74,1.972,80,1.161,84,0.648,85,1.483,88,1.331,89,1.539,93,1.247,100,1.43,110,1.717,227,2.449,266,2.337,269,1.867,270,1.724,305,3.791,386,2.337,403,2.226,495,3.666,546,3.915,547,2.46,680,6.077,681,3.445,682,4.684,683,3.913,684,4.385,685,4.385,686,3.913,687,4.385,688,4.385,689,3.818,690,3.818]],["title/injectables/FetchAllProductsProvider.html",[58,0.383,691,2.524]],["body/injectables/FetchAllProductsProvider.html",[0,0.221,3,0.152,4,0.135,5,0.135,8,0.278,10,0.682,16,0.377,17,0.014,23,0.492,34,0.246,48,0.152,52,2.014,56,0.01,57,0.01,58,0.575,60,1.261,63,1.201,64,1.652,68,1.059,69,1.745,70,1.945,72,0.987,73,0.887,74,2.039,80,0.919,84,0.682,85,1.56,88,1.401,89,1.619,93,0.987,100,1.505,102,2.793,108,1.505,112,2.138,115,2.138,227,2.115,305,3.408,345,2.676,546,2.588,611,3.382,643,3.097,648,2.902,664,3.097,666,3.331,670,4.017,691,3.791,692,5.274,693,6.199,694,4.614,695,3.097,696,4.017,697,4.017,698,4.017]],["title/injectables/FetchCartProvider.html",[58,0.383,357,2.524]],["body/injectables/FetchCartProvider.html",[0,0.225,3,0.154,4,0.137,5,0.137,8,0.282,10,0.901,16,0.498,17,0.014,23,0.498,34,0.223,48,0.154,52,1.725,56,0.01,57,0.01,58,0.582,60,1.283,62,3.39,63,1.215,64,1.666,68,1.078,69,1.776,70,1.958,72,1.304,73,1.172,74,2.062,76,1.554,79,2.397,80,0.935,81,2.176,84,0.694,85,1.588,88,1.426,93,1.004,102,3.138,103,2.634,108,1.531,112,2.176,115,2.176,305,3.437,357,3.835,468,4.088,699,5.896,700,6.097,701,4.088,702,6.097,703,4.088]],["title/injectables/FetchOrdersProvider.html",[58,0.383,704,2.524]],["body/injectables/FetchOrdersProvider.html",[0,0.142,3,0.098,4,0.087,5,0.087,8,0.179,10,0.927,16,0.512,17,0.014,23,0.512,28,1.017,34,0.162,48,0.098,52,2.233,56,0.007,57,0.007,58,0.422,60,0.812,63,0.882,64,1.843,68,0.682,69,1.123,70,1.603,72,1.342,73,1.206,74,1.497,76,1.643,79,2.68,80,1.169,81,2.719,84,0.439,85,1.005,88,0.902,89,1.042,93,1.255,100,0.969,102,3.318,103,3.691,108,1.913,110,1.09,112,1.376,115,1.376,269,1.265,270,1.168,323,2.686,386,1.583,403,1.507,580,3.822,592,2.333,594,2.333,596,2.333,598,3.822,704,2.784,705,5.729,706,2.586,707,3.855,708,3.855,709,3.855,710,3.855,711,2.97,712,3.855,713,2.97,714,3.855,715,2.97,716,3.855,717,2.97,718,3.855,719,2.97,720,2.97,721,4.609,722,4.609,723,5.108,724,5.108,725,2.97,726,5.293,727,5.293,728,5.293]],["title/injectables/FetchProductsByUserProvider.html",[58,0.383,729,2.524]],["body/injectables/FetchProductsByUserProvider.html",[0,0.202,3,0.138,4,0.123,5,0.123,8,0.253,10,0.839,16,0.463,17,0.014,23,0.463,34,0.251,48,0.138,52,1.943,56,0.009,57,0.009,58,0.541,60,1.151,63,1.13,64,1.579,68,0.966,69,1.593,70,1.876,72,1.214,73,1.09,74,1.919,79,1.656,80,0.839,84,0.622,85,1.424,88,1.279,89,1.478,93,0.901,100,1.373,102,2.629,105,2.04,108,1.373,112,1.951,115,1.951,134,3.656,227,1.991,269,1.793,270,1.656,296,4.096,305,3.257,345,2.519,546,2.362,547,2.362,611,3.183,648,2.648,650,3.667,664,2.826,666,3.04,692,5.041,695,4.608,696,3.667,697,3.667,698,3.667,729,3.568,730,3.667,731,4.94,732,4.211,733,4.94,734,4.211]],["title/injectables/HashingProvider.html",[58,0.383,314,2.897]],["body/injectables/HashingProvider.html",[0,0.232,3,0.159,4,0.141,5,0.141,8,0.291,10,0.919,16,0.507,17,0.014,23,0.507,34,0.177,48,0.159,56,0.01,57,0.01,58,0.593,60,1.322,63,1.238,72,1.33,73,1.195,76,1.833,80,1.238,84,0.715,227,2.543,274,5.396,278,4.32,306,5.981,307,5.413,308,4.213,309,6.682,311,5.413,314,4.488,735,4.213,736,7.804,737,4.838,738,4.838]],["title/guards/JwtAuthGuard.html",[196,2.138,422,3.152]],["body/guards/JwtAuthGuard.html",[0,0.188,3,0.129,4,0.114,5,0.114,8,0.236,10,0.799,16,0.441,17,0.014,23,0.441,34,0.256,38,0.839,48,0.129,52,1.109,56,0.009,57,0.009,58,0.516,63,1.077,64,1.522,66,2.618,68,1.24,72,1.156,73,1.039,80,0.781,84,0.799,89,2.453,93,0.839,100,1.279,169,2.632,196,2.88,202,2.2,203,5.817,213,3.08,227,1.896,252,6.293,261,2.831,269,2.633,270,2.431,281,4.706,287,3.414,288,4.706,293,6.087,294,3.414,302,3.414,316,2.632,388,4.465,423,3.08,426,5.803,433,4.706,434,5.236,436,3.08,449,3.414,452,3.08,453,3.08,585,3.414,739,3.414,740,3.921,741,3.921,742,3.921,743,3.921,744,3.921,745,5.404,746,3.921,747,3.921,748,3.921,749,6.184,750,3.921,751,3.921,752,3.921,753,3.921,754,3.921]],["title/interfaces/JwtPayload.html",[374,2.251,755,2.897]],["body/interfaces/JwtPayload.html",[3,0.178,4,0.158,5,0.158,8,0.326,9,1.888,16,0.616,17,0.013,28,1.517,48,0.178,56,0.011,57,0.011,76,1.812,295,6.574,297,4.748,374,3.743,755,3.909,756,5.414,757,4.714,758,7.55,759,7.55]],["title/injectables/MutateCategoriesProvider.html",[58,0.383,496,2.524]],["body/injectables/MutateCategoriesProvider.html",[0,0.166,3,0.114,4,0.101,5,0.101,8,0.208,10,0.932,16,0.515,17,0.014,23,0.515,28,1.334,34,0.244,48,0.114,52,0.979,56,0.008,57,0.008,58,0.472,60,0.946,63,0.986,64,1.831,68,0.794,69,1.309,70,1.724,72,1.349,73,1.334,74,1.674,80,1.152,84,0.511,85,1.17,88,1.051,89,1.737,93,1.236,100,1.885,105,2.399,110,1.881,227,2.436,266,1.844,269,2.108,270,1.946,305,3.524,386,1.844,403,2.513,496,3.113,512,4.115,520,4.496,522,2.051,523,3.574,524,2.176,546,3.744,547,1.942,656,2.933,681,2.719,689,4.311,690,4.311,760,5.812,761,3.889,762,3.879,763,3.461,764,3.461,765,3.461,766,4.951,767,3.461,768,3.461,769,3.461,770,3.461,771,3.461,772,3.461,773,3.461,774,3.461]],["title/classes/OrderEntity.html",[0,0.192,775,2.897]],["body/classes/OrderEntity.html",[0,0.206,2,1.022,3,0.141,4,0.126,5,0.126,8,0.259,9,1.629,16,0.619,17,0.014,18,3.209,19,1.867,23,0.619,28,1.331,34,0.211,35,2.613,37,2.453,38,0.92,46,2.183,48,0.141,56,0.009,57,0.009,76,1.589,79,2.55,103,3.639,110,1.596,323,3.292,324,3.456,326,2.879,334,2.921,580,3.106,582,5.648,775,4.155,776,3.746,777,6.486,778,4.302,779,4.302,780,5,781,4.302,782,4.302,783,4.302,784,4.302,785,4.302,786,4.302]],["title/classes/OrderItemDetailEntity.html",[0,0.192,780,2.897]],["body/classes/OrderItemDetailEntity.html",[0,0.112,2,0.554,3,0.077,4,0.068,5,0.068,8,0.14,9,1.04,10,1.13,11,2.863,13,1.938,14,2.205,15,2.863,16,0.62,17,0.014,18,3.165,19,1.87,23,0.62,28,1.312,34,0.189,35,2.522,37,2.26,38,0.499,46,3.882,48,0.077,51,4.076,52,2.164,56,0.006,57,0.006,76,1.625,108,1.485,110,1.12,130,2.205,256,3.646,264,1.565,323,2.31,324,2.426,326,3.325,334,1.866,345,2.294,351,1.683,580,1.683,591,3.963,592,3.576,594,3.576,596,3.576,598,3.286,602,4.913,721,3.963,722,3.963,723,3.963,724,3.963,780,2.654,787,6.009,788,2.03,789,2.331,790,2.331,791,2.331,792,2.331,793,2.331,794,2.331,795,2.331,796,2.331,797,2.331,798,2.331,799,2.331,800,2.331,801,2.331,802,2.331,803,2.331,804,2.331,805,2.331,806,2.331,807,2.331,808,2.331]],["title/modules/OrdersModule.html",[135,1.218,150,2.693]],["body/modules/OrdersModule.html",[0,0.218,3,0.15,4,0.133,5,0.133,17,0.014,34,0.282,48,0.15,56,0.01,57,0.01,84,0.674,135,2.027,137,1.942,138,1.942,139,2.114,140,2.114,141,1.942,142,3.094,143,2.114,150,5.425,151,3.5,157,2.772,158,2.114,159,1.942,161,3.188,201,4.016,202,2.559,361,2.703,365,3.293,568,4.75,704,4.75,809,3.971,810,3.971,811,4.561,812,4.75,813,4.561,814,3.971,815,4.319,816,4.561,817,3.971,818,3.971,819,3.971]],["title/classes/OrdersResolver.html",[0,0.192,815,2.897]],["body/classes/OrdersResolver.html",[0,0.163,2,0.812,3,0.112,4,0.1,5,0.1,8,0.205,10,0.981,16,0.542,17,0.014,19,1.543,23,0.542,34,0.267,38,0.731,48,0.112,56,0.008,57,0.008,63,0.977,64,1.895,68,0.784,72,1.421,73,1.276,79,2.864,80,1.249,81,2.906,84,0.505,88,1.037,93,1.341,128,3.219,196,1.82,208,2.293,236,2.752,237,2.907,238,2.025,266,1.82,374,4.359,375,2.684,384,3.717,387,2.466,390,2.466,391,3.085,393,2.466,396,4.528,397,2.975,522,2.025,562,4.528,571,4.508,573,2.684,775,4.991,812,3.944,814,2.975,815,3.541,820,2.975,821,4.905,822,4.905,823,4.905,824,3.416,825,3.416,826,4.905,827,3.416,828,3.416,829,4.508,830,3.416,831,3.416,832,3.416,833,3.416,834,3.416,835,2.975,836,2.975,837,3.416,838,3.416,839,3.416,840,3.416,841,3.416,842,3.416,843,3.416,844,3.416,845,3.416,846,3.416]],["title/injectables/OrdersService.html",[58,0.383,812,2.524]],["body/injectables/OrdersService.html",[0,0.176,3,0.121,4,0.107,5,0.107,8,0.221,10,1.047,16,0.578,17,0.014,23,0.578,28,1.361,34,0.219,48,0.121,56,0.008,57,0.008,58,0.493,60,1.005,63,1.029,64,1.961,66,2.504,68,1.186,72,1.515,73,1.361,76,1.791,79,2.548,80,1.361,81,3.165,84,0.543,93,1.461,128,3.636,418,2.654,568,4.454,571,4.059,573,4.059,598,2.654,656,1.866,704,4.575,707,4.499,708,4.499,709,4.499,710,4.499,712,4.499,714,4.499,716,4.499,718,4.499,812,3.25,818,3.201,819,3.201,847,3.201,848,3.677,849,3.677,850,3.677,851,3.677,852,3.677,853,3.677,854,3.677,855,3.677,856,3.677,857,3.677,858,3.677,859,3.677]],["title/modules/PrismaModule.html",[135,1.218,151,1.86]],["body/modules/PrismaModule.html",[0,0.252,3,0.173,4,0.154,5,0.154,17,0.013,34,0.24,48,0.173,56,0.011,57,0.011,70,2.253,84,0.779,135,2.17,137,2.244,138,2.244,139,2.442,140,2.442,141,2.244,142,3.311,143,3.311,151,3.686,157,3.041,158,2.442,159,2.244,860,4.589,861,5.27,862,4.589,863,5.27,864,5.27]],["title/injectables/PrismaService.html",[58,0.383,70,1.096]],["body/injectables/PrismaService.html",[0,0.262,3,0.18,4,0.16,5,0.16,8,0.329,17,0.013,23,0.446,34,0.246,48,0.18,56,0.011,57,0.011,58,0.641,60,1.494,63,1.338,64,1.788,70,1.835,80,1.09,84,0.808,100,1.784,316,3.671,547,3.068,865,4.762,866,5.846,867,7.266,868,6.892,869,5.47,870,5.47]],["title/classes/ProductDetailsDto.html",[0,0.192,622,2.693]],["body/classes/ProductDetailsDto.html",[0,0.269,2,1.337,3,0.185,4,0.164,5,0.164,8,0.338,9,1.932,16,0.459,17,0.013,19,1.384,23,0.459,28,1.313,34,0.206,35,2.227,36,3.309,37,2.583,38,1.203,48,0.185,56,0.011,57,0.011,130,3.563,326,2.497,622,4.584,871,5.947,872,4.897,873,5.624]],["title/classes/ProductEntity.html",[0,0.192,345,1.781]],["body/classes/ProductEntity.html",[0,0.158,2,0.783,3,0.108,4,0.096,5,0.096,8,0.198,9,1.352,10,0.912,14,2.725,16,0.624,17,0.014,18,2.858,19,1.882,23,0.624,28,1.313,34,0.25,35,2.599,37,2.333,38,0.705,48,0.108,51,3.287,52,1.745,56,0.008,57,0.008,76,1.415,110,1.384,112,2.606,115,2.606,174,1.527,175,2.426,177,1.527,256,3.13,264,2.212,323,2.854,324,2.997,326,3.127,334,2.426,345,2.122,450,3.537,473,3.333,525,4.14,611,3.155,612,3.333,613,3.774,634,2.589,664,3.774,874,2.87,875,5.624,876,3.296,877,3.296,878,3.296,879,3.296,880,3.296,881,3.296,882,3.296,883,3.296,884,4.14,885,3.296,886,4.14,887,3.296,888,3.296,889,3.296,890,3.296,891,2.122,892,2.87,893,2.87]],["title/modules/ProductRentDetailsModule.html",[135,1.218,152,2.524]],["body/modules/ProductRentDetailsModule.html",[0,0.243,3,0.167,4,0.148,5,0.148,17,0.013,34,0.257,48,0.167,56,0.01,57,0.01,84,0.752,135,2.135,137,2.165,138,2.165,139,2.357,140,2.357,141,2.165,142,3.258,143,2.357,151,3.602,152,5.022,157,2.973,158,2.357,159,2.165,161,3.419,175,2.581,177,3.258,361,3.014,891,2.257,894,4.428,895,5.085,896,4.428,897,4.889,898,4.428,899,3.671,900,3.671]],["title/injectables/ProductRentDetailsService.html",[58,0.383,897,2.524]],["body/injectables/ProductRentDetailsService.html",[0,0.183,3,0.125,4,0.111,5,0.111,8,0.23,10,0.974,16,0.538,17,0.014,23,0.565,28,1.377,34,0.223,48,0.125,52,1.725,56,0.009,57,0.009,58,0.506,60,1.043,63,1.057,68,0.876,69,1.444,70,1.8,72,1.409,73,1.266,74,1.794,80,1.313,84,0.564,85,1.291,88,1.159,93,1.409,102,2.825,105,1.85,108,1.989,110,1.621,177,3.641,417,4.168,656,2.692,682,4.422,683,3.561,686,3.561,891,3.182,897,3.336,901,5.63,902,2.999,903,3.324,904,5.305,905,4.422,906,3.324,907,4.619,908,3.324,909,3.324,910,4.619,911,3.324,912,2.756,913,3.324,914,3.818,915,3.818,916,3.818,917,3.818]],["title/classes/ProductRentDto.html",[0,0.192,905,2.693]],["body/classes/ProductRentDto.html",[0,0.305,2,1.197,3,0.166,4,0.147,5,0.147,8,0.303,9,1.805,13,2.981,16,0.521,17,0.013,19,1.57,23,0.521,28,1.414,34,0.233,35,2.283,36,3.09,37,2.647,38,1.077,42,3.957,44,2.684,48,0.166,56,0.01,57,0.01,130,3.391,177,3.243,567,3.78,891,3.107,905,4.281,918,5.498,919,4.386,920,4.386,921,5.037,922,4.386,923,5.037,924,5.554,925,4.386]],["title/classes/ProductRentEntity.html",[0,0.192,884,2.693]],["body/classes/ProductRentEntity.html",[0,0.198,2,0.985,3,0.136,4,0.121,5,0.121,8,0.249,9,1.588,10,0.83,13,2.711,16,0.6,17,0.014,18,3.406,19,1.808,23,0.6,28,1.412,34,0.205,35,2.451,37,2.58,38,0.887,48,0.136,56,0.009,57,0.009,108,2.076,110,1.566,130,3.084,175,3.814,177,3.482,323,3.231,324,3.392,326,3.262,334,2.849,345,3.028,351,2.993,884,3.768,891,3.336,926,3.61,927,4.145,928,4.145,929,4.145,930,4.145,931,4.145,932,4.145]],["title/classes/ProductRentResolver.html",[0,0.192,933,3.152]],["body/classes/ProductRentResolver.html",[0,0.166,2,0.826,3,0.114,4,0.102,5,0.102,8,0.209,10,0.934,16,0.567,17,0.014,19,1.555,23,0.546,28,1.336,34,0.231,37,2.192,38,0.743,48,0.114,56,0.008,57,0.008,63,0.989,68,0.798,72,1.352,73,1.407,80,1.259,88,1.055,93,1.352,108,1.134,110,1.555,175,3.529,177,3.611,225,3.585,236,2.786,237,3.434,238,2.06,266,1.852,379,3.333,384,3.434,682,4.242,683,3.333,686,2.333,884,4.667,891,3.087,892,3.027,897,3.975,899,2.509,900,2.509,905,4.242,907,4.324,912,2.509,913,3.027,933,3.901,934,2.731,935,5.794,936,4.966,937,3.476,938,3.027,939,4.966,940,3.476,941,3.027,942,4.966,943,3.027,944,4.966,945,3.027,946,3.476,947,3.027,948,3.476,949,3.476,950,3.476,951,3.027,952,3.476,953,3.476,954,3.476]],["title/modules/ProductSaleDetailsModule.html",[135,1.218,153,2.524]],["body/modules/ProductSaleDetailsModule.html",[0,0.243,3,0.167,4,0.148,5,0.148,17,0.013,34,0.257,48,0.167,56,0.01,57,0.01,84,0.752,135,2.135,137,2.165,138,2.165,139,2.357,140,2.357,141,2.165,142,3.258,143,2.357,151,3.602,153,5.022,157,2.973,158,2.357,159,2.165,161,3.419,174,3.258,175,2.581,361,3.014,891,2.257,898,4.428,899,3.671,900,3.671,955,4.428,956,5.085,957,4.428,958,4.889]],["title/injectables/ProductSaleDetailsService.html",[58,0.383,958,2.524]],["body/injectables/ProductSaleDetailsService.html",[0,0.183,3,0.125,4,0.111,5,0.111,8,0.23,10,0.974,16,0.538,17,0.014,23,0.565,28,1.377,34,0.223,48,0.125,52,1.725,56,0.009,57,0.009,58,0.506,60,1.043,63,1.057,68,0.876,69,1.444,70,1.8,72,1.409,73,1.266,74,1.794,80,1.313,84,0.564,85,1.291,88,1.159,93,1.409,102,2.825,105,1.85,108,1.989,110,1.621,174,3.641,417,4.168,656,2.692,682,4.422,683,3.561,686,3.561,891,3.182,901,5.63,902,2.999,903,3.324,906,3.324,908,3.324,909,3.324,910,4.619,911,3.324,912,2.756,958,3.336,959,5.305,960,4.422,961,4.619,962,3.324,963,3.818,964,3.818,965,3.818,966,3.818]],["title/classes/ProductSaleDto.html",[0,0.192,960,2.693]],["body/classes/ProductSaleDto.html",[0,0.305,2,1.197,3,0.166,4,0.147,5,0.147,8,0.303,9,1.805,13,2.981,16,0.521,17,0.013,19,1.57,23,0.521,28,1.414,34,0.233,35,2.283,36,3.09,37,2.647,38,1.077,42,3.957,44,2.684,48,0.166,56,0.01,57,0.01,130,3.391,174,3.243,567,3.78,891,3.107,918,5.498,920,4.386,922,4.386,924,5.554,925,4.386,960,4.281,967,4.386,968,5.037,969,5.037]],["title/classes/ProductSaleEntity.html",[0,0.192,886,2.693]],["body/classes/ProductSaleEntity.html",[0,0.198,2,0.985,3,0.136,4,0.121,5,0.121,8,0.249,9,1.588,10,0.83,13,2.711,16,0.6,17,0.014,18,3.406,19,1.808,23,0.6,28,1.412,34,0.205,35,2.451,37,2.58,38,0.887,48,0.136,56,0.009,57,0.009,108,2.076,110,1.566,130,3.084,174,3.482,175,3.814,323,3.231,324,3.392,326,3.262,334,2.849,345,3.028,351,2.993,886,3.768,891,3.336,970,3.61,971,4.145,972,4.145,973,4.145,974,4.145,975,4.145,976,4.145]],["title/classes/ProductSaleResolver.html",[0,0.192,977,3.152]],["body/classes/ProductSaleResolver.html",[0,0.166,2,0.826,3,0.114,4,0.102,5,0.102,8,0.209,10,0.934,16,0.567,17,0.014,19,1.555,23,0.546,28,1.336,34,0.231,37,2.192,38,0.743,48,0.114,56,0.008,57,0.008,63,0.989,68,0.798,72,1.352,73,1.407,80,1.259,88,1.055,93,1.352,108,1.134,110,1.555,174,3.611,175,3.529,225,3.585,236,2.786,237,3.434,238,2.06,266,1.852,379,3.333,384,3.434,682,4.242,683,3.333,686,2.333,886,4.667,891,3.087,893,3.027,899,2.509,900,2.509,912,2.509,934,2.731,938,3.027,941,3.027,943,3.027,945,3.027,947,3.027,951,3.027,958,3.975,960,4.242,961,4.324,962,3.027,977,3.901,978,5.794,979,4.966,980,3.476,981,4.966,982,3.476,983,4.966,984,4.966,985,3.476,986,3.476,987,3.476,988,3.476,989,3.476,990,3.476,991,3.476]],["title/modules/ProductsModule.html",[135,1.218,154,2.693]],["body/modules/ProductsModule.html",[0,0.178,3,0.122,4,0.109,5,0.109,17,0.014,34,0.286,48,0.122,56,0.008,57,0.008,84,0.55,135,1.826,137,1.584,138,1.584,139,1.724,140,1.724,141,1.584,142,2.786,143,1.724,151,3.294,152,4.471,153,4.471,154,5.5,157,2.414,158,1.724,159,1.584,161,2.776,174,2.414,175,2.644,176,4.536,177,2.414,201,3.497,202,2.087,361,2.204,365,3.761,641,4.471,667,4.471,691,4.471,695,2.496,729,4.471,817,3.239,891,2.313,992,3.239,993,3.239,994,3.719,995,4.471,996,4.471,997,3.719,998,3.239,999,5.673,1000,3.761,1001,3.719,1002,3.239,1003,3.719,1004,3.719]],["title/classes/ProductsResolver.html",[0,0.192,1000,2.897]],["body/classes/ProductsResolver.html",[0,0.124,2,0.617,3,0.085,4,0.076,5,0.076,8,0.156,10,0.874,13,2.519,16,0.483,17,0.014,19,1.456,23,0.51,28,1.201,34,0.258,38,0.556,48,0.085,56,0.007,57,0.007,63,0.797,64,1.85,66,1.938,68,0.918,70,1.497,72,1.265,73,1.137,74,1.649,80,1.179,84,0.384,85,0.878,89,1.922,93,1.265,100,1.787,110,1.348,134,3.341,196,1.384,208,1.743,227,2.47,236,2.244,237,3.247,238,1.539,269,2.333,270,2.154,296,2.887,345,2.774,374,4.442,375,3.831,379,1.743,384,2.891,386,1.384,387,1.875,388,1.875,390,1.875,391,3.72,392,1.875,393,1.875,396,3.955,400,4.304,401,4.77,402,4.77,403,2.78,522,1.539,524,1.633,536,2.261,608,3.445,648,1.633,649,2.887,669,3.831,671,2.04,829,2.04,995,3.445,998,2.261,1000,2.887,1005,2.261,1006,4.877,1007,3.831,1008,5.478,1009,4.877,1010,2.597,1011,2.597,1012,4,1013,2.597,1014,2.597,1015,4,1016,2.597,1017,2.04,1018,5.478,1019,3.445,1020,2.597,1021,2.597,1022,2.597,1023,2.597,1024,2.597,1025,2.597,1026,4,1027,2.597,1028,2.597,1029,2.597,1030,2.597,1031,2.597]],["title/injectables/ProductsService.html",[58,0.383,995,2.524]],["body/injectables/ProductsService.html",[0,0.141,3,0.097,4,0.086,5,0.086,8,0.178,10,0.925,13,2.666,16,0.511,17,0.014,23,0.536,28,1.262,34,0.266,48,0.097,56,0.007,57,0.007,58,0.421,60,0.807,63,0.878,64,1.894,66,3.033,68,1.012,72,1.339,73,1.203,76,1.507,79,2.75,80,1.247,81,1.369,84,0.437,93,1.339,100,2.042,134,3.625,227,2.454,305,3.906,345,1.311,418,3.183,522,1.751,524,1.858,547,1.657,608,4.13,641,4.13,648,1.858,649,3.183,656,2.678,667,4.279,669,4.144,671,2.32,691,4.279,693,5.094,695,1.982,729,4.279,731,3.839,733,3.839,761,2.32,762,1.982,995,2.773,996,4.279,999,5.094,1002,2.572,1007,4.144,1017,2.32,1019,4.399,1032,2.572,1033,2.954,1034,2.954,1035,4.409,1036,2.954,1037,2.954,1038,2.954,1039,2.954,1040,2.954,1041,2.954,1042,2.954,1043,2.954,1044,2.954,1045,2.954]],["title/injectables/RemoveFromCartProvider.html",[58,0.383,358,2.524]],["body/injectables/RemoveFromCartProvider.html",[0,0.16,3,0.11,4,0.097,5,0.097,8,0.201,10,0.713,16,0.394,17,0.014,23,0.394,28,1.088,34,0.176,46,2.448,48,0.11,52,1.755,56,0.008,57,0.008,58,0.46,60,0.912,62,2.41,63,0.961,64,1.394,68,0.766,69,1.262,70,1.695,72,1.032,73,0.927,74,1.915,76,1.3,79,2.439,80,0.665,81,1.547,84,0.493,85,1.129,88,1.013,89,1.987,93,1.408,98,2.41,99,4.139,100,2.146,102,3.277,103,3.848,105,1.617,106,3.789,107,3.482,108,1.573,110,1.619,112,2.235,115,2.235,126,4.2,128,1.872,132,4.2,133,2.906,269,1.421,270,1.312,358,3.033,370,3.789,386,1.778,403,1.694,413,4.2,414,5.73,576,2.906,607,2.906,701,2.906,703,2.906,761,3.789,762,2.24,1046,4.931,1047,3.338,1048,3.338,1049,3.338,1050,3.338,1051,2.906,1052,5.664,1053,3.338,1054,3.338,1055,4.823,1056,3.338,1057,6.204,1058,3.338,1059,3.338,1060,3.338,1061,3.338]],["title/modules/SeedModule.html",[135,1.218,155,2.693]],["body/modules/SeedModule.html",[0,0.246,3,0.169,4,0.15,5,0.15,17,0.013,34,0.258,48,0.169,56,0.011,57,0.011,70,2.129,84,0.759,85,1.736,135,2.144,137,2.186,138,2.186,139,2.379,140,2.379,141,2.186,142,3.272,143,2.379,155,5.456,157,2.992,158,2.379,159,2.186,1062,4.471,1063,4.471,1064,5.417,1065,5.134,1066,5.134]],["title/injectables/SeedService.html",[58,0.383,1064,2.693]],["body/injectables/SeedService.html",[0,0.192,3,0.132,4,0.117,5,0.117,8,0.242,9,1.556,10,0.594,16,0.449,17,0.014,23,0.511,34,0.201,48,0.132,56,0.009,57,0.009,58,0.525,60,1.098,63,1.095,64,1.542,66,3.035,68,0.922,69,1.52,70,1.84,72,0.86,73,1.543,74,1.859,80,0.801,84,0.594,85,1.36,88,1.221,89,1.41,100,1.311,316,2.698,546,3.084,611,3.084,656,2.04,762,2.698,868,6.341,1064,3.69,1067,3.5,1068,6.265,1069,4.02,1070,4.02,1071,4.319,1072,2.902,1073,5.498,1074,5.498,1075,5.498,1076,5.498,1077,5.498,1078,5.498,1079,5.498,1080,5.498,1081,4.02,1082,4.02,1083,4.02,1084,4.02,1085,4.02,1086,4.02,1087,4.02]],["title/classes/SignInDto.html",[0,0.192,229,2.524]],["body/classes/SignInDto.html",[0,0.329,2,1.15,3,0.159,4,0.141,5,0.141,8,0.291,9,1.759,16,0.507,17,0.013,19,1.53,23,0.507,34,0.227,35,2.545,36,3.328,38,1.035,41,4.865,44,2.578,48,0.204,56,0.01,57,0.01,76,1.833,229,3.909,233,2.867,278,4.559,297,4.559,567,4.296,618,3.801,632,3.493,1088,3.801,1089,4.838,1090,4.838,1091,4.838,1092,5.981,1093,3.801,1094,3.801,1095,4.213]],["title/classes/SignUpDto.html",[0,0.192,233,2.378]],["body/classes/SignUpDto.html",[0,0.319,2,1.084,3,0.15,4,0.133,5,0.133,8,0.274,9,1.693,16,0.578,17,0.014,19,1.744,23,0.578,34,0.219,35,2.51,36,3.235,38,0.976,41,4.757,44,2.43,48,0.197,56,0.01,57,0.01,76,1.843,229,2.868,233,3.546,278,4.457,297,4.457,567,4.201,618,3.583,632,3.293,1088,3.583,1092,5.813,1093,5.245,1094,5.245,1095,3.971,1096,4.561,1097,4.561,1098,4.561,1099,4.561,1100,4.561,1101,4.561,1102,4.561]],["title/classes/TokenModel.html",[0,0.192,240,2.693]],["body/classes/TokenModel.html",[0,0.246,2,1.224,3,0.169,4,0.15,5,0.15,8,0.31,9,1.83,16,0.577,17,0.013,19,1.74,23,0.577,34,0.237,35,2.581,38,1.102,48,0.169,56,0.011,57,0.011,76,1.702,134,3.426,219,5.555,240,4.342,256,3.589,264,3.457,299,6.158,334,3.283,1103,4.485,1104,5.151,1105,5.151,1106,5.151]],["title/classes/UpdateCategoryInput.html",[0,0.192,520,2.524]],["body/classes/UpdateCategoryInput.html",[0,0.255,2,1.265,3,0.175,4,0.155,5,0.155,8,0.32,9,1.868,10,0.976,16,0.434,17,0.013,19,1.31,23,0.434,34,0.242,35,2.153,36,3.199,38,1.139,48,0.175,51,3.518,52,1.868,56,0.011,57,0.011,73,1.38,76,1.647,326,2.363,512,3.155,520,4.153,523,3.843,560,4.182,656,2.702,866,4.635,1107,5.749,1108,5.323,1109,5.323,1110,5.323]],["title/classes/UpdateProductDto.html",[0,0.192,1019,2.524]],["body/classes/UpdateProductDto.html",[0,0.258,2,0.726,3,0.1,4,0.089,5,0.089,8,0.184,9,1.28,10,1.135,14,2.608,16,0.608,17,0.014,19,1.738,20,4.229,23,0.576,28,1.278,34,0.232,35,2.353,36,2.191,37,2.25,38,0.654,39,2.4,40,3.886,41,3.613,43,4.229,44,1.628,48,0.1,51,3.967,52,1.947,56,0.007,57,0.007,76,1.365,108,1.756,110,1.325,112,2.494,115,2.494,326,2.641,450,3.385,464,4.673,473,3.19,474,2.206,475,3.265,479,2.206,567,2.68,610,2.4,611,3.02,612,3.19,613,3.613,620,2.661,622,4.842,623,3.937,630,3.937,631,2.661,632,2.206,633,4.687,634,2.4,635,2.4,636,2.661,637,2.661,638,2.661,639,2.661,1019,2.844,1111,6.281,1112,3.056,1113,3.056,1114,3.056,1115,3.056,1116,3.056,1117,3.056,1118,3.056,1119,3.056,1120,3.056,1121,4.522,1122,3.056,1123,3.056,1124,3.056,1125,3.056,1126,7.064]],["title/injectables/UpdateProductsProvider.html",[58,0.383,996,2.524]],["body/injectables/UpdateProductsProvider.html",[0,0.154,3,0.106,4,0.094,5,0.094,8,0.193,10,0.694,13,2.596,14,1.558,16,0.383,17,0.014,23,0.383,28,1.066,34,0.223,48,0.106,52,1.978,56,0.008,57,0.008,58,0.448,60,0.879,63,0.935,64,1.365,68,0.738,69,1.216,70,1.666,72,1.004,73,0.902,74,1.588,76,1.273,79,2.397,80,0.641,84,0.475,85,1.088,88,0.977,89,1.647,93,0.688,100,1.531,102,2.57,105,1.558,108,1.049,110,1.365,112,2.57,115,2.57,130,2.954,227,1.647,261,2.322,269,1.999,270,1.846,305,2.814,345,2.084,386,1.714,403,1.632,462,2.527,473,1.906,524,2.023,546,2.634,579,2.527,611,3.42,612,1.906,613,2.159,643,2.159,647,2.527,648,2.023,649,2.322,656,2.814,658,2.8,659,2.8,664,2.159,666,2.322,672,4.088,673,2.8,674,2.8,675,2.8,762,3.151,996,2.953,1007,4.356,1017,2.527,1019,4.397,1127,4.828,1128,3.216,1129,4.695,1130,3.216,1131,3.216,1132,6.097,1133,3.216,1134,3.216,1135,3.216,1136,3.216,1137,3.216,1138,3.216,1139,3.216,1140,4.695,1141,4.695,1142,3.216,1143,4.695,1144,3.216]],["title/classes/UserEntity.html",[0,0.192,256,2.037]],["body/classes/UserEntity.html",[0,0.201,2,0.998,3,0.138,4,0.123,5,0.123,8,0.253,9,1.603,16,0.615,17,0.014,18,3.553,19,1.815,23,0.615,34,0.207,35,2.62,38,0.898,48,0.138,56,0.009,57,0.009,76,1.802,110,1.577,256,2.874,270,2.696,278,4.03,297,4.03,323,3.252,324,3.414,334,2.874,1071,5.034,1072,4.626,1093,5.034,1094,5.034,1145,3.657,1146,4.2,1147,4.2,1148,4.2,1149,6.408,1150,4.2,1151,4.2,1152,4.2,1153,4.2,1154,4.2]],["title/modules/UsersModule.html",[135,1.218,156,2.524]],["body/modules/UsersModule.html",[0,0.231,3,0.159,4,0.141,5,0.141,17,0.014,34,0.274,48,0.159,56,0.01,57,0.01,84,0.713,135,2.083,137,2.054,138,2.054,139,2.235,140,2.235,141,2.054,142,3.178,143,3.178,151,3.553,156,5.019,157,2.875,158,2.235,159,2.054,161,3.306,201,4.164,202,2.706,251,4.829,361,2.859,1155,4.2,1156,4.2,1157,4.823,1158,4.2,1159,4.823,1160,4.2,1161,4.479,1162,4.823]],["title/classes/UsersResolver.html",[0,0.192,1161,2.897]],["body/classes/UsersResolver.html",[0,0.223,2,1.106,3,0.153,4,0.136,5,0.136,8,0.28,10,0.896,16,0.495,17,0.014,19,1.145,23,0.495,34,0.278,38,0.996,48,0.153,56,0.01,57,0.01,63,1.208,64,1.659,68,1.068,72,1.297,73,1.165,80,0.927,84,0.688,88,1.413,93,0.996,134,2.937,196,2.48,208,3.124,227,2.127,236,3.401,250,4.053,251,4.234,254,5.279,256,3.854,384,3.593,387,3.36,391,2.927,393,3.36,396,3.36,829,3.656,835,4.053,836,4.053,1160,4.053,1161,4.377,1163,4.053,1164,4.654,1165,4.654,1166,4.654,1167,4.053,1168,4.654,1169,4.654]],["title/injectables/UsersService.html",[58,0.383,251,2.378]],["body/injectables/UsersService.html",[0,0.198,3,0.136,4,0.121,5,0.121,8,0.249,10,1.008,16,0.557,17,0.014,23,0.557,34,0.25,48,0.136,56,0.009,57,0.009,58,0.536,60,1.133,63,1.118,64,1.907,68,0.951,69,1.568,70,1.864,72,1.459,73,1.311,74,1.899,76,1.686,80,1.268,84,0.613,85,1.402,88,1.259,93,1.362,105,2.008,110,1.381,227,2.578,233,4.043,251,3.327,256,2.104,297,3.53,400,4.41,656,2.849,1167,3.61,1170,3.61,1171,5.614,1172,5.614,1173,4.145,1174,5.614,1175,4.145,1176,5.614,1177,5.614,1178,4.145,1179,5.614,1180,4.145,1181,4.145,1182,4.145]],["title/coverage.html",[1183,4.313]],["body/coverage.html",[0,0.382,1,1.428,5,0.07,6,2.097,7,2.097,16,0.197,17,0.014,46,1.222,56,0.006,57,0.006,58,0.751,59,1.515,61,2.097,62,3.357,70,0.658,107,6.01,141,1.026,174,2.807,175,2.67,177,2.807,187,1.892,188,2.097,196,1.283,197,1.515,198,1.515,205,1.739,218,2.097,229,1.515,233,1.428,240,1.617,248,2.097,251,1.428,256,1.222,270,0.947,304,2.097,314,1.739,321,1.617,322,2.097,328,1.617,336,2.097,337,2.097,345,1.069,356,1.515,357,1.515,358,1.515,366,1.739,368,2.097,374,1.351,376,1.739,388,1.739,391,1.515,392,1.739,407,2.097,422,2.963,424,2.097,425,2.097,494,1.515,495,1.515,496,1.515,499,1.739,503,2.097,512,1.428,520,1.515,525,1.617,538,2.097,554,2.097,559,2.097,560,2.963,562,1.739,563,2.097,564,2.097,568,1.515,569,2.097,570,2.097,608,1.515,609,2.097,610,2.963,622,1.617,641,1.515,642,2.097,643,3.531,667,1.515,668,2.097,680,2.097,681,2.963,691,1.515,692,2.963,695,1.617,699,2.097,704,1.515,705,2.097,706,2.097,729,1.515,730,2.097,735,2.097,739,2.097,755,1.739,757,2.097,760,2.097,775,1.739,776,2.097,780,1.739,787,1.892,788,2.097,812,1.515,815,1.739,820,2.097,847,2.097,865,2.097,871,2.097,872,2.097,874,2.097,884,1.617,886,1.617,891,2.91,897,1.515,901,2.963,902,2.963,905,1.617,918,2.963,919,2.097,926,2.097,933,1.892,934,2.963,958,1.515,960,1.617,967,2.097,970,2.097,977,1.892,995,1.515,996,1.515,1000,1.739,1005,2.097,1019,1.515,1032,2.097,1046,2.097,1064,1.617,1067,2.097,1088,2.963,1103,2.097,1107,2.097,1111,2.097,1127,2.097,1145,2.097,1161,1.739,1163,2.097,1170,2.097,1183,1.892,1184,2.097,1185,2.409,1186,2.409,1187,6.058,1188,6.555,1189,2.097,1190,2.409,1191,3.772,1192,7.405,1193,5.261,1194,6.555,1195,3.772,1196,5.712,1197,6.333,1198,2.097,1199,2.409,1200,2.409,1201,2.409,1202,2.409,1203,2.409]],["title/dependencies.html",[138,2.057,1204,2.912]],["body/dependencies.html",[0,0.313,17,0.014,38,1.12,44,2.79,56,0.011,57,0.011,74,1.771,84,0.774,138,2.23,165,4.559,169,3.514,202,2.937,313,4.559,547,2.937,635,4.113,1205,5.236,1206,5.236,1207,5.236,1208,5.236,1209,6.535,1210,7.125,1211,5.236,1212,5.236,1213,5.236,1214,5.236,1215,5.236,1216,6.535,1217,5.236,1218,5.236,1219,5.236,1220,5.236,1221,5.236,1222,5.236,1223,5.236,1224,5.236,1225,5.236,1226,5.236,1227,5.236,1228,5.236,1229,5.236]],["title/miscellaneous/enumerations.html",[1230,2.103,1231,4.206]],["body/miscellaneous/enumerations.html",[8,0.322,17,0.013,25,4.45,46,3.365,56,0.011,57,0.011,174,3.073,177,3.65,450,4.17,590,6.55,602,5.209,625,5.773,787,4.21,1072,5.823,1230,3.37,1231,4.666,1232,5.359,1233,5.359,1234,6.63,1235,5.359,1236,6.63,1237,5.359,1238,6.63,1239,5.359]],["title/miscellaneous/functions.html",[1230,2.103,1240,4.206]],["body/miscellaneous/functions.html",[8,0.38,17,0.012,56,0.012,57,0.012,141,3.289,1198,5.499,1230,3.972,1240,5.499,1241,6.315]],["title/index.html",[8,0.201,1242,3.344,1243,3.344]],["body/index.html",[4,0.096,17,0.013,56,0.008,57,0.008,159,2.906,489,2.864,612,1.949,1051,5.942,1183,2.584,1184,4.156,1244,3.289,1245,3.289,1246,5.617,1247,4.773,1248,3.289,1249,3.289,1250,3.289,1251,3.289,1252,4.773,1253,5.617,1254,3.289,1255,3.289,1256,3.289,1257,6.162,1258,3.289,1259,6.162,1260,7.212,1261,3.289,1262,7.04,1263,3.289,1264,3.289,1265,4.773,1266,3.289,1267,4.773,1268,3.289,1269,5.617,1270,3.289,1271,4.773,1272,3.289,1273,3.289,1274,3.289,1275,3.289,1276,3.289,1277,6.162,1278,7.212,1279,6.824,1280,3.289,1281,4.773,1282,3.289,1283,3.289,1284,3.289,1285,3.289,1286,3.289,1287,4.773,1288,6.162,1289,3.289,1290,4.773,1291,3.289,1292,3.289,1293,4.773,1294,6.824,1295,6.162,1296,3.289,1297,4.773,1298,3.289,1299,3.289,1300,3.289,1301,3.289,1302,6.162,1303,3.289,1304,3.289,1305,3.289,1306,3.289,1307,4.773,1308,3.289,1309,3.289,1310,3.289,1311,3.289,1312,3.289,1313,4.773,1314,3.289,1315,3.289,1316,3.289,1317,4.773,1318,3.289,1319,3.289,1320,5.365,1321,4.773,1322,3.289,1323,3.289,1324,3.289,1325,3.289,1326,3.289,1327,3.289,1328,3.289,1329,3.289,1330,4.773,1331,3.289,1332,3.289,1333,3.289,1334,3.289,1335,5.617,1336,3.289,1337,3.289,1338,3.289,1339,3.289,1340,3.289,1341,3.289,1342,4.773,1343,3.289,1344,3.289,1345,3.289,1346,3.289,1347,3.289,1348,4.773,1349,3.289,1350,3.289,1351,3.289,1352,4.773,1353,4.773,1354,3.289,1355,3.289,1356,3.289,1357,3.289,1358,3.289,1359,3.289,1360,3.289,1361,3.289,1362,3.289,1363,3.289,1364,3.289,1365,2.864,1366,3.289,1367,3.289,1368,3.289,1369,3.289,1370,3.289,1371,3.289,1372,2.864]],["title/modules.html",[137,2.338]],["body/modules.html",[17,0.011,56,0.011,57,0.011,136,3.83,137,2.259,147,3.561,148,3.561,149,3.561,150,3.561,151,2.459,152,3.337,153,3.337,154,3.561,155,3.561,156,3.337,1320,7.154,1373,8.216,1374,8.216,1375,8.216]],["title/overview.html",[1376,4.781]],["body/overview.html",[2,0.671,17,0.014,56,0.007,57,0.007,59,3.229,60,0.771,70,1.929,135,0.857,136,5.775,137,1.202,138,1.202,139,1.308,140,1.308,141,1.202,142,1.308,143,1.308,144,2.458,145,2.458,146,2.458,147,4.631,148,5.03,149,4.973,150,4.907,151,3.473,152,4.339,153,4.339,154,5.309,155,4.739,156,4.339,157,1.975,158,1.308,159,1.202,193,2.458,194,2.458,195,2.458,196,3.048,197,3.229,198,3.229,251,3.972,353,2.458,354,2.458,356,3.229,357,3.229,358,3.229,423,2.218,490,2.458,491,2.458,493,2.458,494,4.215,495,3.229,496,3.229,568,3.229,641,3.229,667,3.229,691,3.229,704,3.229,729,3.229,755,2.038,809,2.458,810,2.458,812,3.229,860,2.458,862,2.458,894,2.458,896,2.458,897,3.229,955,2.458,957,2.458,958,3.229,992,2.458,993,2.458,995,3.229,996,3.229,1062,2.458,1063,2.458,1064,3.839,1155,2.458,1156,2.458,1158,2.458,1376,2.458,1377,2.823,1378,2.823,1379,2.823,1380,2.823,1381,2.823]],["title/properties.html",[9,1.367,1204,2.912]],["body/properties.html",[9,1.766,17,0.013,56,0.012,57,0.012,612,3.699,1365,5.434,1372,5.434,1382,6.241,1383,6.241,1384,6.241]],["title/miscellaneous/variables.html",[1230,2.103,1385,4.206]],["body/miscellaneous/variables.html",[8,0.347,17,0.013,56,0.011,57,0.011,81,2.672,89,2.433,93,1.233,105,2.794,134,3.359,374,3.235,391,4.36,392,4.163,434,4.53,436,4.53,452,4.53,453,4.53,455,5.021,1071,4.53,1072,4.163,1189,6.037,1230,3.627,1385,5.021,1386,5.767,1387,5.767]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":107,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{},"injectables/RemoveFromCartProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1383,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1381,"title":{},"body":{"overview.html":{}}}],["1.1.26",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":95,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["11",{"_index":1377,"title":{},"body":{"overview.html":{}}}],["12.2.2",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["16.10.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1380,"title":{},"body":{"overview.html":{}}}],["24",{"_index":97,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["25",{"_index":1378,"title":{},"body":{"overview.html":{}}}],["29",{"_index":1379,"title":{},"body":{"overview.html":{}}}],["3.3.0",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["30d",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["30m",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["4.11.3",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":96,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["7.8.1",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":736,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["access",{"_index":579,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["accesstoken",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenModel.html":{}}}],["add",{"_index":416,"title":{},"body":{"injectables/CartService.html":{}}}],["addtocart",{"_index":65,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{}}}],["addtocart(input",{"_index":373,"title":{},"body":{"classes/CartResolver.html":{}}}],["addtocart(userid",{"_index":75,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/CartService.html":{}}}],["addtocartdto",{"_index":1,"title":{"classes/AddToCartDto.html":{}},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"coverage.html":{}}}],["addtocartprovider",{"_index":59,"title":{"injectables/AddToCartProvider.html":{}},"body":{"injectables/AddToCartProvider.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{},"overview.html":{}}}],["allowing",{"_index":1308,"title":{},"body":{"index.html":{}}}],["already",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"guards/CartValidationGuard.html":{}}}],["amazing",{"_index":1358,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["apollodriver",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["appliances",{"_index":1076,"title":{},"body":{"injectables/SeedService.html":{}}}],["application",{"_index":1279,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1252,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":136,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":187,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["args",{"_index":238,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{}}}],["args('cartid",{"_index":399,"title":{},"body":{"classes/CartResolver.html":{}}}],["args('createcategory",{"_index":531,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["args('createproduct",{"_index":1024,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["args('createproductrentinput",{"_index":948,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["args('createproductsaleinput",{"_index":986,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["args('id",{"_index":533,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["args('input",{"_index":397,"title":{},"body":{"classes/CartResolver.html":{},"classes/OrdersResolver.html":{}}}],["args('productid",{"_index":1026,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["args('refreshtoken",{"_index":246,"title":{},"body":{"classes/AuthResolver.html":{}}}],["args('updatecategory",{"_index":534,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["args('updateproduct",{"_index":1027,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["async",{"_index":64,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/PrismaService.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["auth.guard",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"classes/CartResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{}}}],["auth.guard.ts",{"_index":739,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":741,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":742,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.resolver",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorators/current",{"_index":836,"title":{},"body":{"classes/OrdersResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/jwt",{"_index":835,"title":{},"body":{"classes/OrdersResolver.html":{},"classes/UsersResolver.html":{}}}],["authheader",{"_index":745,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["authheader.split",{"_index":750,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["authmodule",{"_index":147,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1365,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authresolver",{"_index":205,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":197,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["availability",{"_index":450,"title":{},"body":{"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/ProductEntity.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["availability.both",{"_index":475,"title":{},"body":{"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/UpdateProductDto.html":{}}}],["availability.outofstock",{"_index":465,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["availability.rent",{"_index":479,"title":{},"body":{"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/UpdateProductDto.html":{}}}],["availability.sale",{"_index":474,"title":{},"body":{"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/UpdateProductDto.html":{}}}],["available",{"_index":473,"title":{},"body":{"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/ProductEntity.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["averagerating",{"_index":875,"title":{},"body":{"classes/ProductEntity.html":{}}}],["await",{"_index":100,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/PrismaService.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["aws",{"_index":1297,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1359,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":448,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["badrequestexception('end",{"_index":488,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["badrequestexception('product",{"_index":463,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["badrequestexception('start",{"_index":483,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["badrequestexception('this",{"_index":480,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["based",{"_index":1292,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":313,"title":{},"body":{"injectables/BcryptProvider.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":320,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.gensalt",{"_index":318,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.hash(password",{"_index":319,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["bcrypt.provider",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcryptprovider",{"_index":198,"title":{"injectables/BcryptProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"coverage.html":{},"overview.html":{}}}],["bearer",{"_index":749,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["board",{"_index":1351,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":536,"title":{},"body":{"classes/CategoriesResolver.html":{},"classes/ProductsResolver.html":{}}}],["bootstrap",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":625,"title":{},"body":{"classes/CreateProductsDto.html":{},"miscellaneous/enumerations.html":{}}}],["browse",{"_index":1375,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1373,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":309,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["building",{"_index":1247,"title":{},"body":{"index.html":{}}}],["buy",{"_index":590,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"miscellaneous/enumerations.html":{}}}],["buyer",{"_index":721,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["buyerid",{"_index":591,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["calculatedays",{"_index":67,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["calculatedays(startdate",{"_index":82,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["canactivate",{"_index":426,"title":{},"body":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":433,"title":{},"body":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{}}}],["cart",{"_index":99,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["cart.dto",{"_index":87,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{}}}],["cart.dto.ts",{"_index":7,"title":{},"body":{"classes/AddToCartDto.html":{},"coverage.html":{}}}],["cart.dto.ts:16",{"_index":30,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["cart.dto.ts:21",{"_index":27,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["cart.dto.ts:26",{"_index":32,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["cart.dto.ts:31",{"_index":33,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["cart.dto.ts:36",{"_index":24,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["cart.entity",{"_index":352,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["cart.id",{"_index":129,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["cart.items",{"_index":583,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["cart.provider",{"_index":363,"title":{},"body":{"modules/CartModule.html":{},"injectables/CartService.html":{}}}],["cart.provider.ts",{"_index":62,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/RemoveFromCartProvider.html":{},"coverage.html":{}}}],["cart.provider.ts:10",{"_index":83,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["cart.provider.ts:15",{"_index":78,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["cart.provider.ts:5",{"_index":701,"title":{},"body":{"injectables/FetchCartProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["cart.provider.ts:7",{"_index":71,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["cart.provider.ts:8",{"_index":703,"title":{},"body":{"injectables/FetchCartProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["cart.resolver",{"_index":367,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.totalprice",{"_index":125,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/CreateOrderProvider.html":{}}}],["cart.userid",{"_index":577,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["cart/cart.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["cartentity",{"_index":321,"title":{"classes/CartEntity.html":{}},"body":{"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"coverage.html":{}}}],["cartid",{"_index":128,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["cartid.cartid",{"_index":840,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["cartitem",{"_index":126,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["cartitem.cart.id",{"_index":1057,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["cartitem.cart.userid",{"_index":1048,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["cartitem.itemtype",{"_index":54,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["cartitem.price",{"_index":1061,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["cartitementity",{"_index":328,"title":{"classes/CartItemEntity.html":{}},"body":{"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"coverage.html":{}}}],["cartitemid",{"_index":414,"title":{},"body":{"injectables/CartService.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["cartitemtypes",{"_index":25,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"miscellaneous/enumerations.html":{}}}],["cartitemtypes.buy",{"_index":114,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{}}}],["cartitemtypes.rent",{"_index":55,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{}}}],["cartmodule",{"_index":148,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules.html":{},"overview.html":{}}}],["cartresolver",{"_index":366,"title":{"classes/CartResolver.html":{}},"body":{"modules/CartModule.html":{},"classes/CartResolver.html":{},"coverage.html":{}}}],["cartservice",{"_index":356,"title":{"injectables/CartService.html":{}},"body":{"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"coverage.html":{},"overview.html":{}}}],["cartvalidationguard",{"_index":376,"title":{"guards/CartValidationGuard.html":{}},"body":{"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"coverage.html":{}}}],["catch",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["categories",{"_index":611,"title":{},"body":{"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/ProductEntity.html":{},"injectables/SeedService.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["categories.provider",{"_index":501,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["categories.provider.ts",{"_index":681,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"coverage.html":{}}}],["categories.provider.ts:11",{"_index":765,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["categories.provider.ts:13",{"_index":687,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{}}}],["categories.provider.ts:21",{"_index":769,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["categories.provider.ts:38",{"_index":767,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["categories.provider.ts:6",{"_index":684,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{}}}],["categories.provider.ts:8",{"_index":763,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["categories.provider.ts:9",{"_index":685,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{}}}],["categories.resolver",{"_index":500,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriesmodule",{"_index":149,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesresolver",{"_index":499,"title":{"classes/CategoriesResolver.html":{}},"body":{"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"coverage.html":{}}}],["categoriesservice",{"_index":494,"title":{"injectables/CategoriesService.html":{}},"body":{"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":546,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["category.dto",{"_index":523,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/UpdateCategoryInput.html":{}}}],["category.dto.ts",{"_index":560,"title":{},"body":{"classes/CreateCategoryInput.html":{},"classes/UpdateCategoryInput.html":{},"coverage.html":{}}}],["category.dto.ts:6",{"_index":561,"title":{},"body":{"classes/CreateCategoryInput.html":{}}}],["category.dto.ts:7",{"_index":1108,"title":{},"body":{"classes/UpdateCategoryInput.html":{}}}],["category.entity",{"_index":526,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["category.name",{"_index":1085,"title":{},"body":{"injectables/SeedService.html":{}}}],["categoryentity",{"_index":525,"title":{"classes/CategoryEntity.html":{}},"body":{"classes/CategoriesResolver.html":{},"classes/CategoryEntity.html":{},"classes/ProductEntity.html":{},"coverage.html":{}}}],["categoryid",{"_index":659,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["channel",{"_index":1323,"title":{},"body":{"index.html":{}}}],["check",{"_index":1051,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{},"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddToCartDto.html":{},"classes/AuthResolver.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/OrdersResolver.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"classes/UserEntity.html":{},"classes/UsersResolver.html":{}},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/AuthResolver.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/OrdersResolver.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"classes/UserEntity.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["clicks",{"_index":1307,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1291,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":353,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_imports",{"_index":355,"title":{},"body":{"modules/CartModule.html":{}}}],["cluster_cartmodule_providers",{"_index":354,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":490,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":493,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_imports",{"_index":492,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["cluster_categoriesmodule_providers",{"_index":491,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":809,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_imports",{"_index":811,"title":{},"body":{"modules/OrdersModule.html":{}}}],["cluster_ordersmodule_providers",{"_index":810,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":860,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":862,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":861,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_productrentdetailsmodule",{"_index":894,"title":{},"body":{"modules/ProductRentDetailsModule.html":{},"overview.html":{}}}],["cluster_productrentdetailsmodule_imports",{"_index":895,"title":{},"body":{"modules/ProductRentDetailsModule.html":{}}}],["cluster_productrentdetailsmodule_providers",{"_index":896,"title":{},"body":{"modules/ProductRentDetailsModule.html":{},"overview.html":{}}}],["cluster_productsaledetailsmodule",{"_index":955,"title":{},"body":{"modules/ProductSaleDetailsModule.html":{},"overview.html":{}}}],["cluster_productsaledetailsmodule_imports",{"_index":956,"title":{},"body":{"modules/ProductSaleDetailsModule.html":{}}}],["cluster_productsaledetailsmodule_providers",{"_index":957,"title":{},"body":{"modules/ProductSaleDetailsModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":992,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":994,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":993,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_seedmodule",{"_index":1062,"title":{},"body":{"modules/SeedModule.html":{},"overview.html":{}}}],["cluster_seedmodule_providers",{"_index":1063,"title":{},"body":{"modules/SeedModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1155,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1156,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1157,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1158,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":1314,"title":{},"body":{"index.html":{}}}],["comparepassword",{"_index":306,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["comparepassword(password",{"_index":308,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["compodoc/compodoc",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["configmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["configservice.get('jwt_access_secret",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["connect",{"_index":658,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["console.log('default",{"_index":1086,"title":{},"body":{"injectables/SeedService.html":{}}}],["console.log('seeding",{"_index":1082,"title":{},"body":{"injectables/SeedService.html":{}}}],["console.log(error",{"_index":754,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["const",{"_index":89,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(addtocartprovider",{"_index":408,"title":{},"body":{"injectables/CartService.html":{}}}],["constructor(authservice",{"_index":222,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(cartservice",{"_index":371,"title":{},"body":{"classes/CartResolver.html":{}}}],["constructor(categoriesservice",{"_index":509,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["constructor(createorderprovider",{"_index":848,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(createproductsprovider",{"_index":1033,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(fetchallcategoriesprovider",{"_index":539,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(jwtservice",{"_index":740,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["constructor(orderservice",{"_index":824,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["constructor(prisma",{"_index":69,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/AuthResolver.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(productrentservice",{"_index":937,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["constructor(productsaleservice",{"_index":980,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["constructor(productservice",{"_index":1010,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["constructor(userservice",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersResolver.html":{}}}],["context",{"_index":436,"title":{},"body":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["cookie",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["courses",{"_index":1329,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1183,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":656,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/OrdersService.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"injectables/ProductsService.html":{},"injectables/SeedService.html":{},"classes/UpdateCategoryInput.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{}}}],["create(createcategoryinput",{"_index":764,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["create(createproductrentinput",{"_index":904,"title":{},"body":{"injectables/ProductRentDetailsService.html":{}}}],["create(createproductsaleinput",{"_index":959,"title":{},"body":{"injectables/ProductSaleDetailsService.html":{}}}],["create(createproductsdto",{"_index":1035,"title":{},"body":{"injectables/ProductsService.html":{}}}],["create(userdata",{"_index":1174,"title":{},"body":{"injectables/UsersService.html":{}}}],["createcategory",{"_index":504,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["createcategory(createcategoryinput",{"_index":511,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["createcategoryinput",{"_index":512,"title":{"classes/CreateCategoryInput.html":{}},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryInput.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/UpdateCategoryInput.html":{},"coverage.html":{}}}],["createcategoryinput.name",{"_index":771,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["createdat",{"_index":323,"title":{},"body":{"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CategoryEntity.html":{},"injectables/FetchOrdersProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleEntity.html":{},"classes/UserEntity.html":{}}}],["createdproduct",{"_index":651,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["createdproduct.categories.map((pc",{"_index":665,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["createorder",{"_index":571,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{}}}],["createorder(userid",{"_index":573,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{}}}],["createorderdto",{"_index":562,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/OrdersResolver.html":{},"coverage.html":{}}}],["createorderprovider",{"_index":568,"title":{"injectables/CreateOrderProvider.html":{}},"body":{"injectables/CreateOrderProvider.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["createparamdecorator",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":644,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["createproduct(input",{"_index":646,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["createproductinput",{"_index":1015,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["createproductrent",{"_index":935,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["createproductrent(createproductrentinput",{"_index":940,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["createproductrentinput",{"_index":907,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{}}}],["createproducts",{"_index":1006,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["createproducts(createproductinput",{"_index":1013,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["createproductsale",{"_index":978,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["createproductsale(createproductsaleinput",{"_index":982,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["createproductsaleinput",{"_index":961,"title":{},"body":{"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{}}}],["createproductsdto",{"_index":608,"title":{"classes/CreateProductsDto.html":{}},"body":{"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createproductsprovider",{"_index":641,"title":{"injectables/CreateProductsProvider.html":{}},"body":{"injectables/CreateProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["credentials",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":452,"title":{},"body":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ctx.getargs",{"_index":454,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["ctx.getcontext",{"_index":744,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["ctx.getcontext().product",{"_index":459,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["ctx.getcontext().req.user",{"_index":455,"title":{},"body":{"guards/CartValidationGuard.html":{},"miscellaneous/variables.html":{}}}],["currentuser",{"_index":391,"title":{},"body":{"classes/CartResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":105,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1054,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["date",{"_index":18,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"classes/CategoryEntity.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleEntity.html":{},"classes/UserEntity.html":{}}}],["date(input.enddate",{"_index":487,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["date(input.startdate",{"_index":486,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["declarations",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":19,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/AuthResolver.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/OrdersResolver.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"classes/UserEntity.html":{},"classes/UsersResolver.html":{}}}],["decrement",{"_index":607,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["deeper",{"_index":1325,"title":{},"body":{"index.html":{}}}],["default",{"_index":1071,"title":{},"body":{"injectables/SeedService.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["defaultcategories",{"_index":1068,"title":{},"body":{"injectables/SeedService.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":761,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["delete(id",{"_index":766,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["deletecategory",{"_index":505,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["deletecategory(id",{"_index":514,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["deletemany",{"_index":1137,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["deleteproduct",{"_index":669,"title":{},"body":{"injectables/DeleteProductsProvider.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(productid",{"_index":671,"title":{},"body":{"injectables/DeleteProductsProvider.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{}}}],["deleteproductsprovider",{"_index":667,"title":{"injectables/DeleteProductsProvider.html":{}},"body":{"injectables/DeleteProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":138,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1277,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1296,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1287,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1306,"title":{},"body":{"index.html":{}}}],["desc",{"_index":728,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["description",{"_index":612,"title":{},"body":{"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/ProductEntity.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"index.html":{},"properties.html":{}}}],["detail.entity",{"_index":786,"title":{},"body":{"classes/OrderEntity.html":{}}}],["detail.entity.ts",{"_index":788,"title":{},"body":{"classes/OrderItemDetailEntity.html":{},"coverage.html":{}}}],["detail.entity.ts:12",{"_index":796,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:15",{"_index":800,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:18",{"_index":790,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:21",{"_index":805,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:24",{"_index":803,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:27",{"_index":795,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:30",{"_index":798,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:33",{"_index":797,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:36",{"_index":801,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:39",{"_index":806,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:42",{"_index":792,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:45",{"_index":791,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:48",{"_index":807,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:51",{"_index":799,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:54",{"_index":789,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:57",{"_index":804,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:60",{"_index":802,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:63",{"_index":794,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["detail.entity.ts:9",{"_index":793,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["details",{"_index":478,"title":{},"body":{"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{}}}],["details.dto",{"_index":636,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["details.dto.ts",{"_index":872,"title":{},"body":{"classes/ProductDetailsDto.html":{},"coverage.html":{}}}],["details.dto.ts:6",{"_index":873,"title":{},"body":{"classes/ProductDetailsDto.html":{}}}],["details.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{}}}],["details.module.ts",{"_index":898,"title":{},"body":{"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{}}}],["details.resolver.ts",{"_index":934,"title":{},"body":{"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{},"coverage.html":{}}}],["details.resolver.ts:11",{"_index":941,"title":{},"body":{"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{}}}],["details.resolver.ts:19",{"_index":943,"title":{},"body":{"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{}}}],["details.resolver.ts:24",{"_index":945,"title":{},"body":{"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{}}}],["details.resolver.ts:29",{"_index":947,"title":{},"body":{"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{}}}],["details.resolver.ts:7",{"_index":938,"title":{},"body":{"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{}}}],["details.service",{"_index":900,"title":{},"body":{"modules/ProductRentDetailsModule.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"classes/ProductSaleResolver.html":{}}}],["details.service.ts",{"_index":902,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"coverage.html":{}}}],["details.service.ts:18",{"_index":908,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{}}}],["details.service.ts:26",{"_index":909,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{}}}],["details.service.ts:35",{"_index":911,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{}}}],["details.service.ts:6",{"_index":903,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{}}}],["details.service.ts:9",{"_index":906,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{}}}],["details/dtos/product",{"_index":918,"title":{},"body":{"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{},"coverage.html":{}}}],["details/product",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["details/providers/product",{"_index":901,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"coverage.html":{}}}],["development",{"_index":1263,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1337,"title":{},"body":{"index.html":{}}}],["difftime",{"_index":90,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["directly",{"_index":1053,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["discord",{"_index":1322,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1324,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1184,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["driver",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/add",{"_index":86,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{}}}],["dtos/auth.dto",{"_index":239,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["dtos/create",{"_index":522,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateProductsProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{}}}],["dtos/product",{"_index":912,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{}}}],["dtos/token.dto",{"_index":241,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["dtos/update",{"_index":524,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["e2e",{"_index":1272,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1248,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1285,"title":{},"body":{"index.html":{}}}],["electronics",{"_index":1073,"title":{},"body":{"injectables/SeedService.html":{}}}],["email",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["empty",{"_index":1059,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["end",{"_index":484,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["enddate",{"_index":11,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["ensure",{"_index":1283,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":1341,"title":{},"body":{"index.html":{}}}],["entities/cart",{"_index":389,"title":{},"body":{"classes/CartResolver.html":{}}}],["entities/cart.entity",{"_index":385,"title":{},"body":{"classes/CartResolver.html":{}}}],["entities/order.entity",{"_index":837,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["enumerations",{"_index":1231,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/availability.enum",{"_index":634,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/ProductEntity.html":{},"classes/UpdateProductDto.html":{}}}],["enums/cart",{"_index":45,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{}}}],["error",{"_index":585,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"guards/JwtAuthGuard.html":{}}}],["error('invalid",{"_index":650,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{}}}],["error('unauthorized",{"_index":578,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["example",{"_index":1259,"title":{},"body":{"index.html":{}}}],["exceeds",{"_index":472,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["executioncontext",{"_index":434,"title":{},"body":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["existingcartitem",{"_index":467,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["existingcartitem?.items.length",{"_index":469,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["existingproduct",{"_index":672,"title":{},"body":{"injectables/DeleteProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["existingproduct.userid",{"_index":674,"title":{},"body":{"injectables/DeleteProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["existinguser",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["exp",{"_index":758,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["experience",{"_index":1327,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":866,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateCategoryInput.html":{}}}],["fast",{"_index":1300,"title":{},"body":{"index.html":{}}}],["features",{"_index":1310,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":418,"title":{},"body":{"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["fetchallcategories",{"_index":506,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["fetchallcategoriesprovider",{"_index":495,"title":{"injectables/FetchAllCategoriesProvider.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/FetchAllCategoriesProvider.html":{},"coverage.html":{},"overview.html":{}}}],["fetchallproducts",{"_index":693,"title":{},"body":{"injectables/FetchAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["fetchallproductsprovider",{"_index":691,"title":{"injectables/FetchAllProductsProvider.html":{}},"body":{"injectables/FetchAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["fetchcart",{"_index":700,"title":{},"body":{"injectables/FetchCartProvider.html":{}}}],["fetchcart(userid",{"_index":702,"title":{},"body":{"injectables/FetchCartProvider.html":{}}}],["fetchcartprovider",{"_index":357,"title":{"injectables/FetchCartProvider.html":{}},"body":{"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/FetchCartProvider.html":{},"coverage.html":{},"overview.html":{}}}],["fetchonecategory",{"_index":507,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["fetchonecategory(@args('id",{"_index":529,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["fetchonecategory(id",{"_index":517,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["fetchordersprovider",{"_index":704,"title":{"injectables/FetchOrdersProvider.html":{}},"body":{"injectables/FetchOrdersProvider.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["fetchproductsbyuser",{"_index":731,"title":{},"body":{"injectables/FetchProductsByUserProvider.html":{},"injectables/ProductsService.html":{}}}],["fetchproductsbyuser(user",{"_index":733,"title":{},"body":{"injectables/FetchProductsByUserProvider.html":{},"injectables/ProductsService.html":{}}}],["fetchproductsbyuserprovider",{"_index":729,"title":{"injectables/FetchProductsByUserProvider.html":{}},"body":{"injectables/FetchProductsByUserProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["few",{"_index":1302,"title":{},"body":{"index.html":{}}}],["field",{"_index":35,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"classes/UserEntity.html":{}}}],["field()@isemail",{"_index":1089,"title":{},"body":{"classes/SignInDto.html":{}}}],["field()@isemail()@isnotempty",{"_index":1096,"title":{},"body":{"classes/SignUpDto.html":{}}}],["field()@isnotempty()@isenum(availability",{"_index":614,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["field()@isnotempty()@isint",{"_index":565,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["field()@isstring",{"_index":618,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["field()@isstring()@isenum(cartitemtypes",{"_index":26,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["field()@isstring()@minlength(2)@maxlength(512)@isnotempty",{"_index":628,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["field()@minlength(8)@isnotempty",{"_index":1101,"title":{},"body":{"classes/SignUpDto.html":{}}}],["field(undefined",{"_index":326,"title":{},"body":{"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateProductsDto.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleEntity.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{}}}],["field(undefined)@isarray",{"_index":616,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["field(undefined)@isint",{"_index":29,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["field(undefined)@isint()@isnotempty",{"_index":620,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["field(undefined)@isint()@min(1",{"_index":31,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["field(undefined)@isnotempty",{"_index":922,"title":{},"body":{"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{}}}],["field(undefined)@isnumber()@min(0",{"_index":920,"title":{},"body":{"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{}}}],["field(undefined)@isstring()@isnotempty",{"_index":1098,"title":{},"body":{"classes/SignUpDto.html":{}}}],["field({nullable",{"_index":20,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CartItemEntity.html":{},"classes/UpdateProductDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":682,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{}}}],["findbyemail",{"_index":1171,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":1177,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":1172,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":1179,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":683,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{}}}],["findone(@args('id",{"_index":951,"title":{},"body":{"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{}}}],["findone(id",{"_index":686,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{}}}],["findorderbyid",{"_index":707,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["findorderbyid(orderid",{"_index":712,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["finduserorders",{"_index":708,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["finduserorders(userid",{"_index":714,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["finduserrentals",{"_index":709,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["finduserrentals(userid",{"_index":716,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["findusersales",{"_index":710,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["findusersales(userid",{"_index":718,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["first",{"_index":1049,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["firstname",{"_index":1093,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{}}}],["focus",{"_index":1309,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1345,"title":{},"body":{"index.html":{}}}],["format",{"_index":751,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["forwardref",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["found",{"_index":403,"title":{},"body":{"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["framework",{"_index":1246,"title":{},"body":{"index.html":{}}}],["full",{"_index":1340,"title":{},"body":{"index.html":{}}}],["function",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1240,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furniture",{"_index":1074,"title":{},"body":{"injectables/SeedService.html":{}}}],["g",{"_index":1305,"title":{},"body":{"index.html":{}}}],["generatetokens",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokens(user",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcart",{"_index":369,"title":{},"body":{"classes/CartResolver.html":{},"injectables/CartService.html":{}}}],["getcart(@currentuser",{"_index":405,"title":{},"body":{"classes/CartResolver.html":{}}}],["getcart(jwtpayload",{"_index":378,"title":{},"body":{"classes/CartResolver.html":{}}}],["getcart(userid",{"_index":411,"title":{},"body":{"injectables/CartService.html":{}}}],["gethello",{"_index":189,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":1242,"title":{"index.html":{}},"body":{}}],["getuserorders",{"_index":821,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["getuserorders(@currentuser",{"_index":841,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["getuserorders(userid",{"_index":828,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["getuserrentals",{"_index":822,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["getuserrentals(@currentuser",{"_index":845,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["getuserrentals(userid",{"_index":831,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["getusersales",{"_index":823,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["getusersales(@currentuser",{"_index":843,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["getusersales(userid",{"_index":833,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["goods",{"_index":1078,"title":{},"body":{"injectables/SeedService.html":{}}}],["gqlexecutioncontext",{"_index":449,"title":{},"body":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":453,"title":{},"body":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1332,"title":{},"body":{"index.html":{}}}],["graphql",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["grow",{"_index":1355,"title":{},"body":{"index.html":{}}}],["guard",{"_index":422,"title":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":423,"title":{},"body":{"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{},"overview.html":{}}}],["guards/cart",{"_index":394,"title":{},"body":{"classes/CartResolver.html":{}}}],["guards/jwt",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["hands",{"_index":1326,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1315,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashing.provider",{"_index":315,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["hashingprovider",{"_index":314,"title":{"injectables/HashingProvider.html":{}},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{},"coverage.html":{}}}],["hashpassword",{"_index":307,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hashpassword(password",{"_index":311,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{}}}],["hello",{"_index":191,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1330,"title":{},"body":{"index.html":{}}}],["here",{"_index":1363,"title":{},"body":{"index.html":{}}}],["home",{"_index":1075,"title":{},"body":{"injectables/SeedService.html":{}}}],["https://nestjs.com",{"_index":1369,"title":{},"body":{"index.html":{}}}],["iat",{"_index":759,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["id",{"_index":110,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":316,"title":{},"body":{"injectables/BcryptProvider.html":{},"guards/CartValidationGuard.html":{},"guards/JwtAuthGuard.html":{},"injectables/PrismaService.html":{},"injectables/SeedService.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["include",{"_index":102,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":1289,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":1312,"title":{},"body":{"index.html":{}}}],["inject",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["inject(forwardref",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":58,"title":{"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/OrdersService.html":{},"injectables/PrismaService.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/OrdersService.html":{},"injectables/PrismaService.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":60,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/OrdersService.html":{},"injectables/PrismaService.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":77,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateProductsProvider.html":{}}}],["input.available",{"_index":655,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["input.categories.map((categoryid",{"_index":657,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["input.description",{"_index":654,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["input.enddate",{"_index":119,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{}}}],["input.itemtype",{"_index":113,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{}}}],["input.productid",{"_index":111,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{}}}],["input.quantity",{"_index":123,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateProductsProvider.html":{}}}],["input.rentdetails",{"_index":662,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["input.rentdetails.price",{"_index":663,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["input.saledetails",{"_index":660,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["input.saledetails.price",{"_index":661,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["input.startdate",{"_index":131,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{}}}],["input.title",{"_index":653,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["inputtype",{"_index":36,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{}}}],["install",{"_index":1304,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1261,"title":{},"body":{"index.html":{}}}],["insufficient",{"_index":586,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["int",{"_index":37,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"classes/CategoryEntity.html":{},"classes/CreateProductsDto.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/UpdateProductDto.html":{}}}],["interact",{"_index":1333,"title":{},"body":{"index.html":{}}}],["interface",{"_index":755,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":756,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["isarray",{"_index":630,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["isdate",{"_index":22,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["isemail",{"_index":1092,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isenum",{"_index":39,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(availability",{"_index":639,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(cartitemtypes",{"_index":49,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["isglobal",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":40,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["isnotempty",{"_index":567,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProductDto.html":{}}}],["isnumber",{"_index":924,"title":{},"body":{"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{}}}],["isoptional",{"_index":1126,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["ispasswordvalid",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":41,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CreateProductsDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProductDto.html":{}}}],["item",{"_index":46,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"injectables/RemoveFromCartProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["item.enddate",{"_index":604,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["item.entity",{"_index":335,"title":{},"body":{"classes/CartEntity.html":{},"classes/CartResolver.html":{}}}],["item.entity.ts",{"_index":337,"title":{},"body":{"classes/CartItemEntity.html":{},"coverage.html":{}}}],["item.entity.ts:12",{"_index":339,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:15",{"_index":347,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:18",{"_index":344,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:21",{"_index":348,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:24",{"_index":343,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:27",{"_index":349,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:30",{"_index":341,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:33",{"_index":338,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:36",{"_index":346,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:39",{"_index":340,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:42",{"_index":350,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.entity.ts:9",{"_index":342,"title":{},"body":{"classes/CartItemEntity.html":{}}}],["item.itemtype",{"_index":589,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["item.price",{"_index":601,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["item.productid",{"_index":600,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["item.quantity",{"_index":584,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["item.startdate",{"_index":603,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["items",{"_index":103,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartEntity.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"classes/OrderEntity.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["itemtotalprice",{"_index":122,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["itemtype",{"_index":12,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{}}}],["job",{"_index":1348,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1350,"title":{},"body":{"index.html":{}}}],["join",{"_index":1361,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":196,"title":{"guards/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"classes/CartResolver.html":{},"guards/JwtAuthGuard.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"overview.html":{}}}],["jwtmodule",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.registerasync",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":374,"title":{"interfaces/JwtPayload.html":{}},"body":{"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"interfaces/JwtPayload.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload.sub",{"_index":401,"title":{},"body":{"classes/CartResolver.html":{},"classes/ProductsResolver.html":{}}}],["jwtservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["kamil",{"_index":1366,"title":{},"body":{"index.html":{}}}],["key",{"_index":1280,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":1094,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{}}}],["learn",{"_index":1318,"title":{},"body":{"index.html":{}}}],["legend",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lender",{"_index":724,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["lenderid",{"_index":596,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"injectables/FetchOrdersProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["license",{"_index":1372,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1353,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1347,"title":{},"body":{"index.html":{}}}],["looking",{"_index":1290,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1343,"title":{},"body":{"index.html":{}}}],["makes",{"_index":1298,"title":{},"body":{"index.html":{}}}],["managing",{"_index":1311,"title":{},"body":{"index.html":{}}}],["matching",{"_index":57,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.abs(enddate.gettime",{"_index":91,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["math.ceil(difftime",{"_index":94,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["mau",{"_index":1294,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":631,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["maxlength(512",{"_index":638,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["me(@currentuser",{"_index":1168,"title":{},"body":{"classes/UsersResolver.html":{}}}],["me(user",{"_index":1165,"title":{},"body":{"classes/UsersResolver.html":{}}}],["message",{"_index":640,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["metadata",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":63,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/PrismaService.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":42,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{}}}],["min(0",{"_index":925,"title":{},"body":{"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{}}}],["min(1",{"_index":50,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["minlength",{"_index":632,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProductDto.html":{}}}],["minlength(2",{"_index":637,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["minlength(8",{"_index":1095,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":1230,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1352,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1265,"title":{},"body":{"index.html":{}}}],["module",{"_index":135,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":137,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1288,"title":{},"body":{"index.html":{}}}],["mutate",{"_index":548,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["mutatecategoriesprovider",{"_index":496,"title":{"injectables/MutateCategoriesProvider.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/MutateCategoriesProvider.html":{},"coverage.html":{},"overview.html":{}}}],["mutation",{"_index":237,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{}}}],["mutation(undefined",{"_index":225,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CategoriesResolver.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{}}}],["mutation(undefined)@useguards(jwtauthguard",{"_index":375,"title":{},"body":{"classes/CartResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{}}}],["myśliwiec",{"_index":1367,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"classes/UpdateCategoryInput.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":1338,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1253,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1371,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1278,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":84,"title":{},"body":{"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":38,"title":{},"body":{"classes/AddToCartDto.html":{},"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"guards/JwtAuthGuard.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/OrdersResolver.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"classes/UserEntity.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CartModule.html":{},"guards/JwtAuthGuard.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["newcarttotal",{"_index":124,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["node.js",{"_index":1245,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":386,"title":{},"body":{"classes/CartResolver.html":{},"injectables/CreateOrderProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["notfoundexception('cart",{"_index":576,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["notfoundexception('product",{"_index":673,"title":{},"body":{"injectables/DeleteProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["notfoundexception('user",{"_index":402,"title":{},"body":{"classes/CartResolver.html":{},"classes/ProductsResolver.html":{}}}],["notfoundexception(`category",{"_index":690,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{},"injectables/MutateCategoriesProvider.html":{}}}],["notfoundexception(`order",{"_index":725,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["null",{"_index":595,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["nullable",{"_index":51,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"classes/CreateProductsDto.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{}}}],["number",{"_index":28,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchOrdersProvider.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"injectables/OrdersService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["numberofdays",{"_index":117,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["objecttype",{"_index":334,"title":{},"body":{"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CategoryEntity.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleEntity.html":{},"classes/TokenModel.html":{},"classes/UserEntity.html":{}}}],["offer",{"_index":1349,"title":{},"body":{"index.html":{}}}],["official",{"_index":1295,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":868,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/SeedService.html":{}}}],["open",{"_index":1354,"title":{},"body":{"index.html":{}}}],["optional",{"_index":10,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderItemDetailEntity.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"classes/ProductEntity.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":580,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"injectables/FetchOrdersProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{}}}],["order.dto",{"_index":838,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["order.dto.ts",{"_index":564,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:9",{"_index":566,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.id",{"_index":599,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["order.provider",{"_index":818,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["order.provider.ts",{"_index":570,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"coverage.html":{}}}],["order.provider.ts:5",{"_index":572,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["order.provider.ts:8",{"_index":574,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["orderby",{"_index":727,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["orderentity",{"_index":775,"title":{"classes/OrderEntity.html":{}},"body":{"classes/OrderEntity.html":{},"classes/OrdersResolver.html":{},"coverage.html":{}}}],["orderid",{"_index":598,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"injectables/FetchOrdersProvider.html":{},"classes/OrderItemDetailEntity.html":{},"injectables/OrdersService.html":{}}}],["orderitemdetailentity",{"_index":780,"title":{"classes/OrderItemDetailEntity.html":{}},"body":{"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"coverage.html":{}}}],["orderparticipants",{"_index":588,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["orders.provider",{"_index":819,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["orders.provider.ts",{"_index":706,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"coverage.html":{}}}],["orders.provider.ts:29",{"_index":715,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["orders.provider.ts:47",{"_index":719,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["orders.provider.ts:5",{"_index":711,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["orders.provider.ts:76",{"_index":717,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["orders.provider.ts:8",{"_index":713,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["orders.resolver",{"_index":816,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["orderservice",{"_index":826,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["ordersmodule",{"_index":150,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersresolver",{"_index":815,"title":{"classes/OrdersResolver.html":{}},"body":{"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"coverage.html":{}}}],["ordersservice",{"_index":812,"title":{"injectables/OrdersService.html":{}},"body":{"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["ordertype",{"_index":602,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"classes/OrderItemDetailEntity.html":{},"miscellaneous/enumerations.html":{}}}],["out",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["outdoor",{"_index":1079,"title":{},"body":{"injectables/SeedService.html":{}}}],["outofstock",{"_index":1238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overview",{"_index":1376,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":664,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/ProductEntity.html":{},"injectables/UpdateProductsProvider.html":{}}}],["package",{"_index":1204,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":72,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["parser",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1339,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1109,"title":{},"body":{"classes/UpdateCategoryInput.html":{}}}],["partialtype(createcategoryinput",{"_index":1110,"title":{},"body":{"classes/UpdateCategoryInput.html":{}}}],["password",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"injectables/HashingProvider.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{}}}],["payload",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["pc.category",{"_index":666,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["platform",{"_index":1293,"title":{},"body":{"index.html":{}}}],["playground",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":1321,"title":{},"body":{"index.html":{}}}],["possible",{"_index":1286,"title":{},"body":{"index.html":{}}}],["price",{"_index":130,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"injectables/UpdateProductsProvider.html":{}}}],["prisma",{"_index":74,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma.cart.create",{"_index":104,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["prisma.cart.delete",{"_index":1058,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["prisma.cart.findfirst",{"_index":101,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["prisma.cart.update",{"_index":133,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["prisma.cartitem.count",{"_index":1056,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["prisma.cartitem.create",{"_index":127,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["prisma.cartitem.delete",{"_index":1050,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["prisma.order.create",{"_index":581,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["prisma.orderitemdetails.create",{"_index":597,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["prisma.product.delete",{"_index":679,"title":{},"body":{"injectables/DeleteProductsProvider.html":{}}}],["prisma.product.findunique",{"_index":109,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["prisma.product.update",{"_index":605,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["prisma.productcategory.deletemany",{"_index":676,"title":{},"body":{"injectables/DeleteProductsProvider.html":{}}}],["prisma.productrentdetails.deletemany",{"_index":678,"title":{},"body":{"injectables/DeleteProductsProvider.html":{}}}],["prisma.productsaledetails.deletemany",{"_index":677,"title":{},"body":{"injectables/DeleteProductsProvider.html":{}}}],["prisma.service",{"_index":864,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":547,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":867,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":151,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":70,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":66,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AuthService.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"injectables/CategoriesService.html":{},"guards/JwtAuthGuard.html":{},"injectables/OrdersService.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/SeedService.html":{}}}],["product",{"_index":108,"title":{},"body":{"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/OrderItemDetailEntity.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["product.available",{"_index":464,"title":{},"body":{"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.categories.map((pc",{"_index":698,"title":{},"body":{"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{}}}],["product.dto",{"_index":649,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["product.dto.ts",{"_index":610,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:23",{"_index":1118,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:24",{"_index":629,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["product.dto.ts:28",{"_index":619,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["product.dto.ts:30",{"_index":1125,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:33",{"_index":615,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["product.dto.ts:35",{"_index":1117,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:38",{"_index":621,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["product.dto.ts:40",{"_index":1113,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:42",{"_index":617,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["product.dto.ts:45",{"_index":1120,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:50",{"_index":1115,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:55",{"_index":627,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["product.dto.ts:61",{"_index":1123,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:68",{"_index":626,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["product.dto.ts:72",{"_index":1122,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.entity",{"_index":648,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["product.id",{"_index":606,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["product.quantity",{"_index":470,"title":{},"body":{"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{}}}],["product.rentdetails",{"_index":481,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["product.rentdetails.price",{"_index":120,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["product.saledetails",{"_index":477,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["product.saledetails.price",{"_index":121,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["product.title",{"_index":587,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["product.userid",{"_index":593,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["productdetailsdto",{"_index":622,"title":{"classes/ProductDetailsDto.html":{}},"body":{"classes/CreateProductsDto.html":{},"classes/ProductDetailsDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["productentity",{"_index":345,"title":{"classes/ProductEntity.html":{}},"body":{"classes/CartItemEntity.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{},"coverage.html":{}}}],["productid",{"_index":13,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/DeleteProductsProvider.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["production",{"_index":1267,"title":{},"body":{"index.html":{}}}],["productrent",{"_index":944,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["productrentdetailsmodule",{"_index":152,"title":{"modules/ProductRentDetailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productrentdetailsservice",{"_index":897,"title":{"injectables/ProductRentDetailsService.html":{}},"body":{"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"coverage.html":{},"overview.html":{}}}],["productrentdto",{"_index":905,"title":{"classes/ProductRentDto.html":{}},"body":{"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentResolver.html":{},"coverage.html":{}}}],["productrententity",{"_index":884,"title":{"classes/ProductRentEntity.html":{}},"body":{"classes/ProductEntity.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"coverage.html":{}}}],["productrentresolver",{"_index":933,"title":{"classes/ProductRentResolver.html":{}},"body":{"classes/ProductRentResolver.html":{},"coverage.html":{}}}],["productrents",{"_index":942,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["productrentservice",{"_index":939,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["products",{"_index":695,"title":{},"body":{"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["products.map((product",{"_index":697,"title":{},"body":{"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{}}}],["products.provider",{"_index":999,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.provider.ts",{"_index":643,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{},"coverage.html":{}}}],["products.provider.ts:11",{"_index":647,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["products.provider.ts:13",{"_index":1128,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["products.provider.ts:6",{"_index":694,"title":{},"body":{"injectables/FetchAllProductsProvider.html":{}}}],["products.provider.ts:8",{"_index":645,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["products.provider.ts:9",{"_index":670,"title":{},"body":{"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{}}}],["products.resolver",{"_index":1001,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["productsale",{"_index":984,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["productsaledetailsmodule",{"_index":153,"title":{"modules/ProductSaleDetailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsaledetailsservice",{"_index":958,"title":{"injectables/ProductSaleDetailsService.html":{}},"body":{"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{},"coverage.html":{},"overview.html":{}}}],["productsaledto",{"_index":960,"title":{"classes/ProductSaleDto.html":{}},"body":{"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleResolver.html":{},"coverage.html":{}}}],["productsaleentity",{"_index":886,"title":{"classes/ProductSaleEntity.html":{}},"body":{"classes/ProductEntity.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"coverage.html":{}}}],["productsaleresolver",{"_index":977,"title":{"classes/ProductSaleResolver.html":{}},"body":{"classes/ProductSaleResolver.html":{},"coverage.html":{}}}],["productsales",{"_index":983,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["productsaleservice",{"_index":981,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["productservice",{"_index":1012,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["productsmodule",{"_index":154,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsresolver",{"_index":1000,"title":{"classes/ProductsResolver.html":{}},"body":{"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"coverage.html":{}}}],["productsservice",{"_index":995,"title":{"injectables/ProductsService.html":{}},"body":{"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":1244,"title":{},"body":{"index.html":{}}}],["project",{"_index":1257,"title":{},"body":{"index.html":{}}}],["promise",{"_index":227,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["promise.all",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AddToCartDto.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"interfaces/JwtPayload.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"classes/UserEntity.html":{},"properties.html":{}}}],["provided",{"_index":748,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["providers",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/add",{"_index":362,"title":{},"body":{"modules/CartModule.html":{}}}],["providers/auth.service",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["providers/bcrypt.provider",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/cart.service",{"_index":360,"title":{},"body":{"modules/CartModule.html":{},"classes/CartResolver.html":{}}}],["providers/categories.service",{"_index":498,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{}}}],["providers/create",{"_index":817,"title":{},"body":{"modules/OrdersModule.html":{},"modules/ProductsModule.html":{}}}],["providers/delete",{"_index":1004,"title":{},"body":{"modules/ProductsModule.html":{}}}],["providers/fetch",{"_index":365,"title":{},"body":{"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{}}}],["providers/mutate",{"_index":502,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["providers/orders.service",{"_index":814,"title":{},"body":{"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{}}}],["providers/product",{"_index":899,"title":{},"body":{"modules/ProductRentDetailsModule.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"classes/ProductSaleResolver.html":{}}}],["providers/products.service",{"_index":998,"title":{},"body":{"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{}}}],["providers/remove",{"_index":364,"title":{},"body":{"modules/CartModule.html":{}}}],["providers/update",{"_index":1003,"title":{},"body":{"modules/ProductsModule.html":{}}}],["providers/users.service",{"_index":1160,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["public",{"_index":305,"title":{},"body":{"injectables/BcryptProvider.html":{},"injectables/CategoriesService.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["purchase",{"_index":476,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["quantity",{"_index":14,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["query",{"_index":384,"title":{},"body":{"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":379,"title":{},"body":{"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{}}}],["query(undefined)@useguards(jwtauthguard",{"_index":829,"title":{},"body":{"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{}}}],["questions",{"_index":1319,"title":{},"body":{"index.html":{}}}],["read",{"_index":1362,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{}}}],["ready",{"_index":1276,"title":{},"body":{"index.html":{}}}],["real",{"_index":1334,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":219,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/TokenModel.html":{}}}],["refreshtoken(refreshtoken",{"_index":224,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["remaining",{"_index":1052,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["remainingitemscount",{"_index":1055,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["remove",{"_index":417,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{}}}],["remove(id",{"_index":910,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{}}}],["removefromcart",{"_index":370,"title":{},"body":{"classes/CartResolver.html":{},"injectables/CartService.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["removefromcart(cartid",{"_index":382,"title":{},"body":{"classes/CartResolver.html":{}}}],["removefromcart(userid",{"_index":413,"title":{},"body":{"injectables/CartService.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["removefromcartprovider",{"_index":358,"title":{"injectables/RemoveFromCartProvider.html":{}},"body":{"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/RemoveFromCartProvider.html":{},"coverage.html":{},"overview.html":{}}}],["removeproductrent",{"_index":936,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["removeproductrent(@args('id",{"_index":953,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["removeproductrent(id",{"_index":946,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["removeproductsale",{"_index":979,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["removeproductsale(@args('id",{"_index":990,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["removeproductsale(id",{"_index":985,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["rent",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rent.dto",{"_index":913,"title":{},"body":{"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{}}}],["rent.dto.ts",{"_index":919,"title":{},"body":{"classes/ProductRentDto.html":{},"coverage.html":{}}}],["rent.dto.ts:13",{"_index":921,"title":{},"body":{"classes/ProductRentDto.html":{}}}],["rent.dto.ts:8",{"_index":923,"title":{},"body":{"classes/ProductRentDto.html":{}}}],["rent.entity",{"_index":892,"title":{},"body":{"classes/ProductEntity.html":{},"classes/ProductRentResolver.html":{}}}],["rent.entity.ts",{"_index":926,"title":{},"body":{"classes/ProductRentEntity.html":{},"coverage.html":{}}}],["rent.entity.ts:10",{"_index":931,"title":{},"body":{"classes/ProductRentEntity.html":{}}}],["rent.entity.ts:13",{"_index":929,"title":{},"body":{"classes/ProductRentEntity.html":{}}}],["rent.entity.ts:16",{"_index":927,"title":{},"body":{"classes/ProductRentEntity.html":{}}}],["rent.entity.ts:19",{"_index":932,"title":{},"body":{"classes/ProductRentEntity.html":{}}}],["rent.entity.ts:22",{"_index":930,"title":{},"body":{"classes/ProductRentEntity.html":{}}}],["rent.entity.ts:7",{"_index":928,"title":{},"body":{"classes/ProductRentEntity.html":{}}}],["rental",{"_index":482,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["rentdetails",{"_index":115,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/ProductEntity.html":{},"injectables/RemoveFromCartProvider.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["renter",{"_index":723,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["renterid",{"_index":594,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"injectables/FetchOrdersProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["repository",{"_index":1256,"title":{},"body":{"index.html":{}}}],["req",{"_index":743,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["req.headers.authorization",{"_index":746,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["req.user",{"_index":753,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["requested",{"_index":471,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["required",{"_index":485,"title":{},"body":{"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{}}}],["requiring",{"_index":1301,"title":{},"body":{"index.html":{}}}],["reset",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":236,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CartResolver.html":{},"classes/CategoriesResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductRentResolver.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{}}}],["resolver('category",{"_index":527,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["resources",{"_index":1313,"title":{},"body":{"index.html":{}}}],["results",{"_index":56,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":93,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":80,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/PrismaService.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":1262,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1284,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["sale",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["sale.dto",{"_index":962,"title":{},"body":{"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleResolver.html":{}}}],["sale.dto.ts",{"_index":967,"title":{},"body":{"classes/ProductSaleDto.html":{},"coverage.html":{}}}],["sale.dto.ts:13",{"_index":968,"title":{},"body":{"classes/ProductSaleDto.html":{}}}],["sale.dto.ts:8",{"_index":969,"title":{},"body":{"classes/ProductSaleDto.html":{}}}],["sale.entity",{"_index":893,"title":{},"body":{"classes/ProductEntity.html":{},"classes/ProductSaleResolver.html":{}}}],["sale.entity.ts",{"_index":970,"title":{},"body":{"classes/ProductSaleEntity.html":{},"coverage.html":{}}}],["sale.entity.ts:10",{"_index":975,"title":{},"body":{"classes/ProductSaleEntity.html":{}}}],["sale.entity.ts:13",{"_index":973,"title":{},"body":{"classes/ProductSaleEntity.html":{}}}],["sale.entity.ts:16",{"_index":971,"title":{},"body":{"classes/ProductSaleEntity.html":{}}}],["sale.entity.ts:19",{"_index":976,"title":{},"body":{"classes/ProductSaleEntity.html":{}}}],["sale.entity.ts:22",{"_index":974,"title":{},"body":{"classes/ProductSaleEntity.html":{}}}],["sale.entity.ts:7",{"_index":972,"title":{},"body":{"classes/ProductSaleEntity.html":{}}}],["saledetails",{"_index":112,"title":{},"body":{"injectables/AddToCartProvider.html":{},"guards/CartValidationGuard.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/ProductEntity.html":{},"injectables/RemoveFromCartProvider.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["salt",{"_index":317,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["scalable",{"_index":1249,"title":{},"body":{"index.html":{}}}],["secret",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["seed.service",{"_index":1066,"title":{},"body":{"modules/SeedModule.html":{}}}],["seed/seed.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["seeded",{"_index":1087,"title":{},"body":{"injectables/SeedService.html":{}}}],["seedmodule",{"_index":155,"title":{"modules/SeedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{},"modules.html":{},"overview.html":{}}}],["seedservice",{"_index":1064,"title":{"injectables/SeedService.html":{}},"body":{"modules/SeedModule.html":{},"injectables/SeedService.html":{},"coverage.html":{},"overview.html":{}}}],["seller",{"_index":722,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["sellerid",{"_index":592,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"injectables/FetchOrdersProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["server",{"_index":1250,"title":{},"body":{"index.html":{}}}],["setup",{"_index":1258,"title":{},"body":{"index.html":{}}}],["side",{"_index":1251,"title":{},"body":{"index.html":{}}}],["signin",{"_index":220,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signin(@args('input",{"_index":244,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(signininput",{"_index":228,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signindto",{"_index":229,"title":{"classes/SignInDto.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["signininput",{"_index":231,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signininput.password",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":221,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signup(@args('input",{"_index":242,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(signupinput",{"_index":232,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":233,"title":{"classes/SignUpDto.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["signupinput",{"_index":235,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signupinput.password",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["simple",{"_index":1303,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"modules/CartModule.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"modules/OrdersModule.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1357,"title":{},"body":{"index.html":{}}}],["sporting",{"_index":1077,"title":{},"body":{"injectables/SeedService.html":{}}}],["src/.../availability.enum.ts",{"_index":1232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../cart",{"_index":1233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../current",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order",{"_index":1235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":190,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":218,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:11",{"_index":234,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":230,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:21",{"_index":226,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:7",{"_index":223,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/decorators/current",{"_index":392,"title":{},"body":{"classes/CartResolver.html":{},"classes/ProductsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/auth.dto",{"_index":1181,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/dtos/auth.dto.ts",{"_index":1088,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/auth/dtos/auth.dto.ts:13",{"_index":1100,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dtos/auth.dto.ts:18",{"_index":1097,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dtos/auth.dto.ts:23",{"_index":1102,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dtos/auth.dto.ts:30",{"_index":1090,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dtos/auth.dto.ts:34",{"_index":1091,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dtos/auth.dto.ts:9",{"_index":1099,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dtos/token.dto.ts",{"_index":1103,"title":{},"body":{"classes/TokenModel.html":{},"coverage.html":{}}}],["src/auth/dtos/token.dto.ts:10",{"_index":1105,"title":{},"body":{"classes/TokenModel.html":{}}}],["src/auth/dtos/token.dto.ts:13",{"_index":1106,"title":{},"body":{"classes/TokenModel.html":{}}}],["src/auth/dtos/token.dto.ts:7",{"_index":1104,"title":{},"body":{"classes/TokenModel.html":{}}}],["src/auth/guards/jwt",{"_index":388,"title":{},"body":{"classes/CartResolver.html":{},"guards/JwtAuthGuard.html":{},"classes/ProductsResolver.html":{},"coverage.html":{}}}],["src/auth/interfaces/payload.interface",{"_index":390,"title":{},"body":{"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{}}}],["src/auth/interfaces/payload.interface.ts",{"_index":757,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:16",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:25",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:42",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:59",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:76",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/bcrypt.provider.ts",{"_index":304,"title":{},"body":{"injectables/BcryptProvider.html":{},"coverage.html":{}}}],["src/auth/providers/bcrypt.provider.ts:12",{"_index":310,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/providers/bcrypt.provider.ts:7",{"_index":312,"title":{},"body":{"injectables/BcryptProvider.html":{}}}],["src/auth/providers/hashing.provider.ts",{"_index":735,"title":{},"body":{"injectables/HashingProvider.html":{},"coverage.html":{}}}],["src/auth/providers/hashing.provider.ts:5",{"_index":738,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/auth/providers/hashing.provider.ts:7",{"_index":737,"title":{},"body":{"injectables/HashingProvider.html":{}}}],["src/cart/cart.module.ts",{"_index":359,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.resolver.ts",{"_index":368,"title":{},"body":{"classes/CartResolver.html":{},"coverage.html":{}}}],["src/cart/cart.resolver.ts:14",{"_index":372,"title":{},"body":{"classes/CartResolver.html":{}}}],["src/cart/cart.resolver.ts:22",{"_index":377,"title":{},"body":{"classes/CartResolver.html":{}}}],["src/cart/cart.resolver.ts:31",{"_index":383,"title":{},"body":{"classes/CartResolver.html":{}}}],["src/cart/cart.resolver.ts:47",{"_index":381,"title":{},"body":{"classes/CartResolver.html":{}}}],["src/cart/dto/add",{"_index":6,"title":{},"body":{"classes/AddToCartDto.html":{},"coverage.html":{}}}],["src/cart/entities/cart",{"_index":336,"title":{},"body":{"classes/CartItemEntity.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts",{"_index":322,"title":{},"body":{"classes/CartEntity.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts:11",{"_index":333,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/entities/cart.entity.ts:14",{"_index":332,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/entities/cart.entity.ts:17",{"_index":330,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/entities/cart.entity.ts:20",{"_index":329,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/entities/cart.entity.ts:23",{"_index":325,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/entities/cart.entity.ts:26",{"_index":331,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/entities/cart.entity.ts:8",{"_index":327,"title":{},"body":{"classes/CartEntity.html":{}}}],["src/cart/enums/cart",{"_index":1239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/cart/guards/cart",{"_index":424,"title":{},"body":{"guards/CartValidationGuard.html":{},"coverage.html":{}}}],["src/cart/providers/add",{"_index":61,"title":{},"body":{"injectables/AddToCartProvider.html":{},"coverage.html":{}}}],["src/cart/providers/cart.service.ts",{"_index":407,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/cart/providers/cart.service.ts:16",{"_index":410,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/providers/cart.service.ts:20",{"_index":412,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/providers/cart.service.ts:24",{"_index":415,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/providers/cart.service.ts:9",{"_index":409,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/providers/fetch",{"_index":699,"title":{},"body":{"injectables/FetchCartProvider.html":{},"coverage.html":{}}}],["src/cart/providers/remove",{"_index":1046,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{},"coverage.html":{}}}],["src/categories/categories.module.ts",{"_index":497,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.resolver.ts",{"_index":503,"title":{},"body":{"classes/CategoriesResolver.html":{},"coverage.html":{}}}],["src/categories/categories.resolver.ts:12",{"_index":516,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["src/categories/categories.resolver.ts:17",{"_index":518,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["src/categories/categories.resolver.ts:22",{"_index":513,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["src/categories/categories.resolver.ts:29",{"_index":521,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["src/categories/categories.resolver.ts:37",{"_index":515,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["src/categories/categories.resolver.ts:8",{"_index":510,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["src/categories/category.entity",{"_index":890,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/categories/category.entity.ts",{"_index":554,"title":{},"body":{"classes/CategoryEntity.html":{},"coverage.html":{}}}],["src/categories/category.entity.ts:12",{"_index":555,"title":{},"body":{"classes/CategoryEntity.html":{}}}],["src/categories/category.entity.ts:15",{"_index":558,"title":{},"body":{"classes/CategoryEntity.html":{}}}],["src/categories/category.entity.ts:6",{"_index":556,"title":{},"body":{"classes/CategoryEntity.html":{}}}],["src/categories/category.entity.ts:9",{"_index":557,"title":{},"body":{"classes/CategoryEntity.html":{}}}],["src/categories/dtos/create",{"_index":559,"title":{},"body":{"classes/CreateCategoryInput.html":{},"coverage.html":{}}}],["src/categories/dtos/update",{"_index":1107,"title":{},"body":{"classes/UpdateCategoryInput.html":{},"coverage.html":{}}}],["src/categories/providers/categories.service.ts",{"_index":538,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/categories/providers/categories.service.ts:15",{"_index":543,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/providers/categories.service.ts:19",{"_index":544,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/providers/categories.service.ts:23",{"_index":541,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/providers/categories.service.ts:29",{"_index":545,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/providers/categories.service.ts:36",{"_index":542,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/providers/categories.service.ts:9",{"_index":540,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/providers/fetch",{"_index":680,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{},"coverage.html":{}}}],["src/categories/providers/mutate",{"_index":760,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/dtos/create",{"_index":563,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/orders/entities/order",{"_index":787,"title":{},"body":{"classes/OrderItemDetailEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/orders/entities/order.entity.ts",{"_index":776,"title":{},"body":{"classes/OrderEntity.html":{},"coverage.html":{}}}],["src/orders/entities/order.entity.ts:10",{"_index":785,"title":{},"body":{"classes/OrderEntity.html":{}}}],["src/orders/entities/order.entity.ts:13",{"_index":783,"title":{},"body":{"classes/OrderEntity.html":{}}}],["src/orders/entities/order.entity.ts:16",{"_index":782,"title":{},"body":{"classes/OrderEntity.html":{}}}],["src/orders/entities/order.entity.ts:19",{"_index":778,"title":{},"body":{"classes/OrderEntity.html":{}}}],["src/orders/entities/order.entity.ts:22",{"_index":784,"title":{},"body":{"classes/OrderEntity.html":{}}}],["src/orders/entities/order.entity.ts:25",{"_index":781,"title":{},"body":{"classes/OrderEntity.html":{}}}],["src/orders/entities/order.entity.ts:7",{"_index":779,"title":{},"body":{"classes/OrderEntity.html":{}}}],["src/orders/orders.module.ts",{"_index":813,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.resolver.ts",{"_index":820,"title":{},"body":{"classes/OrdersResolver.html":{},"coverage.html":{}}}],["src/orders/orders.resolver.ts:11",{"_index":825,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["src/orders/orders.resolver.ts:16",{"_index":827,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["src/orders/orders.resolver.ts:25",{"_index":830,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["src/orders/orders.resolver.ts:31",{"_index":834,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["src/orders/orders.resolver.ts:37",{"_index":832,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["src/orders/providers/create",{"_index":569,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"coverage.html":{}}}],["src/orders/providers/fetch",{"_index":705,"title":{},"body":{"injectables/FetchOrdersProvider.html":{},"coverage.html":{}}}],["src/orders/providers/orders.service.ts",{"_index":847,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/providers/orders.service.ts:12",{"_index":850,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/providers/orders.service.ts:15",{"_index":851,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/providers/orders.service.ts:19",{"_index":852,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/providers/orders.service.ts:23",{"_index":854,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/providers/orders.service.ts:27",{"_index":853,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/providers/orders.service.ts:6",{"_index":849,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/prisma/prisma.module",{"_index":361,"title":{},"body":{"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":863,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":85,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/MutateCategoriesProvider.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":865,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":869,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/product",{"_index":891,"title":{},"body":{"classes/ProductEntity.html":{},"modules/ProductRentDetailsModule.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"modules/ProductSaleDetailsModule.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["src/products/dtos/create",{"_index":609,"title":{},"body":{"classes/CreateProductsDto.html":{},"coverage.html":{}}}],["src/products/dtos/product",{"_index":871,"title":{},"body":{"classes/ProductDetailsDto.html":{},"coverage.html":{}}}],["src/products/dtos/update",{"_index":1111,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/products/enums/availability.enum",{"_index":451,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["src/products/enums/availability.enum.ts",{"_index":1237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/products/product.entity",{"_index":351,"title":{},"body":{"classes/CartItemEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleEntity.html":{}}}],["src/products/product.entity.ts",{"_index":874,"title":{},"body":{"classes/ProductEntity.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:11",{"_index":881,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:14",{"_index":888,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:17",{"_index":880,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:20",{"_index":876,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:23",{"_index":883,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:26",{"_index":882,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:29",{"_index":877,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:32",{"_index":878,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:35",{"_index":887,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:38",{"_index":885,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:41",{"_index":879,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/product.entity.ts:44",{"_index":889,"title":{},"body":{"classes/ProductEntity.html":{}}}],["src/products/products.module.ts",{"_index":997,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.resolver.ts",{"_index":1005,"title":{},"body":{"classes/ProductsResolver.html":{},"coverage.html":{}}}],["src/products/products.resolver.ts:13",{"_index":1011,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["src/products/products.resolver.ts:21",{"_index":1014,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["src/products/products.resolver.ts:36",{"_index":1020,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["src/products/products.resolver.ts:58",{"_index":1016,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["src/products/products.resolver.ts:75",{"_index":1023,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["src/products/products.resolver.ts:88",{"_index":1021,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["src/products/providers/create",{"_index":642,"title":{},"body":{"injectables/CreateProductsProvider.html":{},"coverage.html":{}}}],["src/products/providers/delete",{"_index":668,"title":{},"body":{"injectables/DeleteProductsProvider.html":{},"coverage.html":{}}}],["src/products/providers/fetch",{"_index":692,"title":{},"body":{"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"coverage.html":{}}}],["src/products/providers/products.service.ts",{"_index":1032,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/providers/products.service.ts:13",{"_index":1034,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:22",{"_index":1036,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:28",{"_index":1038,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:31",{"_index":1039,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:34",{"_index":1040,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:45",{"_index":1037,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/update",{"_index":1127,"title":{},"body":{"injectables/UpdateProductsProvider.html":{},"coverage.html":{}}}],["src/seed/seed.module.ts",{"_index":1065,"title":{},"body":{"modules/SeedModule.html":{}}}],["src/seed/seed.service.ts",{"_index":1067,"title":{},"body":{"injectables/SeedService.html":{},"coverage.html":{}}}],["src/seed/seed.service.ts:13",{"_index":1069,"title":{},"body":{"injectables/SeedService.html":{}}}],["src/seed/seed.service.ts:17",{"_index":1070,"title":{},"body":{"injectables/SeedService.html":{}}}],["src/seed/seed.service.ts:6",{"_index":1081,"title":{},"body":{"injectables/SeedService.html":{}}}],["src/users/providers/users.service.ts",{"_index":1170,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:10",{"_index":1178,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:16",{"_index":1180,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:22",{"_index":1175,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:7",{"_index":1173,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/user.entity",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"classes/CartEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/TokenModel.html":{}}}],["src/users/user.entity.ts",{"_index":1145,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:10",{"_index":1148,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/user.entity.ts:13",{"_index":1151,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/user.entity.ts:16",{"_index":1147,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/user.entity.ts:18",{"_index":1152,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/user.entity.ts:21",{"_index":1146,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/user.entity.ts:24",{"_index":1153,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/user.entity.ts:7",{"_index":1150,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/users.module.ts",{"_index":1159,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.resolver.ts",{"_index":1163,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/users/users.resolver.ts:14",{"_index":1166,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:9",{"_index":1164,"title":{},"body":{"classes/UsersResolver.html":{}}}],["start",{"_index":489,"title":{},"body":{"guards/CartValidationGuard.html":{},"index.html":{}}}],["start:dev",{"_index":1266,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1268,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":15,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"classes/OrderItemDetailEntity.html":{}}}],["startdate.gettime",{"_index":92,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["started",{"_index":1243,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1255,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":777,"title":{},"body":{"classes/OrderEntity.html":{}}}],["stay",{"_index":1342,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1281,"title":{},"body":{"index.html":{}}}],["stock",{"_index":466,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["straightforward",{"_index":1299,"title":{},"body":{"index.html":{}}}],["string",{"_index":76,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/HashingProvider.html":{},"interfaces/JwtPayload.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"injectables/OrdersService.html":{},"classes/ProductEntity.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["structure",{"_index":1060,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["sub",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["support",{"_index":1320,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1374,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1282,"title":{},"body":{"index.html":{}}}],["test",{"_index":1271,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1274,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1273,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1269,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1356,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":870,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.addtocartprovider.addtocart(userid",{"_index":419,"title":{},"body":{"injectables/CartService.html":{}}}],["this.authservice.refreshtoken(refreshtoken",{"_index":247,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(signininput",{"_index":245,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signup(signupinput",{"_index":243,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.bcryptprovider.comparepassword",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.bcryptprovider.hashpassword",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.calculatedays(input.startdate",{"_index":118,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["this.cartservice.addtocart(jwtpayload.sub",{"_index":398,"title":{},"body":{"classes/CartResolver.html":{}}}],["this.cartservice.getcart(jwtpayload.sub",{"_index":406,"title":{},"body":{"classes/CartResolver.html":{}}}],["this.cartservice.removefromcart(user.id",{"_index":404,"title":{},"body":{"classes/CartResolver.html":{}}}],["this.categoriesservice.createcategory(createcategoryinput",{"_index":532,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["this.categoriesservice.deletecategory(id",{"_index":537,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["this.categoriesservice.fetchallcategories",{"_index":528,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["this.categoriesservice.fetchonecategory(id",{"_index":530,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["this.categoriesservice.updatecategory(id",{"_index":535,"title":{},"body":{"classes/CategoriesResolver.html":{}}}],["this.configservice.get('jwt_access_secret",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["this.configservice.get('jwt_refresh_secret",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createorderprovider.createorder(userid",{"_index":855,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.createproductsprovider.createproduct",{"_index":1041,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.defaultcategories",{"_index":1083,"title":{},"body":{"injectables/SeedService.html":{}}}],["this.deleteproductsprovider.deleteproduct(productid",{"_index":1045,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.fetchallcategoriesprovider.findall",{"_index":549,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.fetchallcategoriesprovider.findone(id",{"_index":550,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.fetchallproductsprovider.fetchallproducts",{"_index":1042,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.fetchcartprovider.fetchcart(userid",{"_index":420,"title":{},"body":{"injectables/CartService.html":{}}}],["this.fetchordersprovider.findorderbyid(orderid",{"_index":856,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.fetchordersprovider.finduserorders(userid",{"_index":857,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.fetchordersprovider.finduserrentals(userid",{"_index":859,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.fetchordersprovider.findusersales(userid",{"_index":858,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.fetchproductsbyuserprovider.fetchproductsbyuser(user",{"_index":1043,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.generatetokens(user",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(refreshtoken",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":752,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.mutatecategoriesprovider.create(createcategoryinput",{"_index":551,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.mutatecategoriesprovider.delete(id",{"_index":553,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.mutatecategoriesprovider.update(id",{"_index":552,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.orderservice.createorder(userid.sub",{"_index":839,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["this.orderservice.finduserorders(userid.sub",{"_index":842,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["this.orderservice.finduserrentals(userid.sub",{"_index":846,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["this.orderservice.findusersales(userid.sub",{"_index":844,"title":{},"body":{"classes/OrdersResolver.html":{}}}],["this.prisma.$transaction(async",{"_index":98,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/CreateOrderProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["this.prisma.cart.findfirst",{"_index":468,"title":{},"body":{"guards/CartValidationGuard.html":{},"injectables/FetchCartProvider.html":{}}}],["this.prisma.cart.findunique",{"_index":575,"title":{},"body":{"injectables/CreateOrderProvider.html":{}}}],["this.prisma.cartitem.findunique",{"_index":1047,"title":{},"body":{"injectables/RemoveFromCartProvider.html":{}}}],["this.prisma.category.create",{"_index":770,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["this.prisma.category.delete",{"_index":774,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["this.prisma.category.findmany",{"_index":688,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{}}}],["this.prisma.category.findunique",{"_index":689,"title":{},"body":{"injectables/FetchAllCategoriesProvider.html":{},"injectables/MutateCategoriesProvider.html":{}}}],["this.prisma.category.update",{"_index":772,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["this.prisma.category.upsert",{"_index":1084,"title":{},"body":{"injectables/SeedService.html":{}}}],["this.prisma.order.findmany",{"_index":726,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["this.prisma.order.findunique",{"_index":720,"title":{},"body":{"injectables/FetchOrdersProvider.html":{}}}],["this.prisma.product.create",{"_index":652,"title":{},"body":{"injectables/CreateProductsProvider.html":{}}}],["this.prisma.product.findmany",{"_index":696,"title":{},"body":{"injectables/FetchAllProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{}}}],["this.prisma.product.findunique",{"_index":462,"title":{},"body":{"guards/CartValidationGuard.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["this.prisma.product.update",{"_index":1130,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["this.prisma.productrentdetails.create",{"_index":914,"title":{},"body":{"injectables/ProductRentDetailsService.html":{}}}],["this.prisma.productrentdetails.delete",{"_index":917,"title":{},"body":{"injectables/ProductRentDetailsService.html":{}}}],["this.prisma.productrentdetails.findmany",{"_index":915,"title":{},"body":{"injectables/ProductRentDetailsService.html":{}}}],["this.prisma.productrentdetails.findunique",{"_index":916,"title":{},"body":{"injectables/ProductRentDetailsService.html":{}}}],["this.prisma.productsaledetails.create",{"_index":963,"title":{},"body":{"injectables/ProductSaleDetailsService.html":{}}}],["this.prisma.productsaledetails.delete",{"_index":966,"title":{},"body":{"injectables/ProductSaleDetailsService.html":{}}}],["this.prisma.productsaledetails.findmany",{"_index":964,"title":{},"body":{"injectables/ProductSaleDetailsService.html":{}}}],["this.prisma.productsaledetails.findunique",{"_index":965,"title":{},"body":{"injectables/ProductSaleDetailsService.html":{}}}],["this.prisma.user.create",{"_index":1182,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":400,"title":{},"body":{"classes/CartResolver.html":{},"classes/ProductsResolver.html":{},"injectables/UsersService.html":{}}}],["this.productrentservice.create(createproductrentinput",{"_index":949,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["this.productrentservice.findall",{"_index":950,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["this.productrentservice.findone(id",{"_index":952,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["this.productrentservice.remove(id",{"_index":954,"title":{},"body":{"classes/ProductRentResolver.html":{}}}],["this.productsaleservice.create(createproductsaleinput",{"_index":987,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["this.productsaleservice.findall",{"_index":988,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["this.productsaleservice.findone(id",{"_index":989,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["this.productsaleservice.remove(id",{"_index":991,"title":{},"body":{"classes/ProductSaleResolver.html":{}}}],["this.productservice.create(createproductinput",{"_index":1025,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["this.productservice.deleteproduct(productid",{"_index":1029,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["this.productservice.fetchallproducts",{"_index":1031,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["this.productservice.fetchproductsbyuser(user",{"_index":1030,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["this.productservice.updateproduct",{"_index":1028,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["this.removefromcartprovider.removefromcart(userid",{"_index":421,"title":{},"body":{"injectables/CartService.html":{}}}],["this.updateproductsprovider.updateproduct",{"_index":1044,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.userservice.create",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyemail(signininput.email",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyemail(signupinput.email",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyemail(user.email",{"_index":1169,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.userservice.findbyid(payload.sub",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateavailability(product",{"_index":460,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["this.validatedates(input",{"_index":461,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["this.validateproduct(input.productid",{"_index":456,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["this.validatequantity(product",{"_index":458,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["this.validateusercartstate(jwtpayload.sub",{"_index":457,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["throw",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/ProductsResolver.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["time",{"_index":1335,"title":{},"body":{"index.html":{}}}],["title",{"_index":613,"title":{},"body":{"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"classes/ProductEntity.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["token",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["tokenmodel",{"_index":240,"title":{"classes/TokenModel.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/TokenModel.html":{},"coverage.html":{}}}],["totalamount",{"_index":582,"title":{},"body":{"injectables/CreateOrderProvider.html":{},"classes/OrderEntity.html":{}}}],["totalprice",{"_index":106,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartEntity.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["touch",{"_index":1364,"title":{},"body":{"index.html":{}}}],["toys",{"_index":1080,"title":{},"body":{"injectables/SeedService.html":{}}}],["transformer",{"_index":635,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["true",{"_index":52,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"modules/AppModule.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"injectables/ProductRentDetailsService.html":{},"injectables/ProductSaleDetailsService.html":{},"injectables/RemoveFromCartProvider.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{}}}],["true})@isarray()@isoptional",{"_index":1114,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isenum(availability)@isoptional",{"_index":1112,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isint()@isoptional",{"_index":1119,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isstring()@isoptional",{"_index":1116,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isstring()@minlength(2)@maxlength(512)@isoptional",{"_index":1124,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@useguards(jwtauthguard",{"_index":380,"title":{},"body":{"classes/CartResolver.html":{}}}],["true})@validateif(cartitem",{"_index":21,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["true})@validateif(product",{"_index":623,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["try",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["twitter",{"_index":1370,"title":{},"body":{"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BcryptProvider.html":{},"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryInput.html":{},"classes/CreateOrderDto.html":{},"injectables/CreateOrderProvider.html":{},"classes/CreateProductsDto.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchAllCategoriesProvider.html":{},"injectables/FetchAllProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"injectables/HashingProvider.html":{},"guards/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"classes/ProductDetailsDto.html":{},"classes/ProductEntity.html":{},"injectables/ProductRentDetailsService.html":{},"classes/ProductRentDto.html":{},"classes/ProductRentEntity.html":{},"classes/ProductRentResolver.html":{},"injectables/ProductSaleDetailsService.html":{},"classes/ProductSaleDto.html":{},"classes/ProductSaleEntity.html":{},"classes/ProductSaleResolver.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TokenModel.html":{},"classes/UpdateCategoryInput.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"classes/UserEntity.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["type.entity",{"_index":808,"title":{},"body":{"classes/OrderItemDetailEntity.html":{}}}],["type.entity.ts",{"_index":1236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.enum",{"_index":47,"title":{},"body":{"classes/AddToCartDto.html":{},"injectables/AddToCartProvider.html":{},"classes/CartItemEntity.html":{},"guards/CartValidationGuard.html":{}}}],["type.enum.ts",{"_index":1234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":1254,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeleteProductsProvider.html":{},"guards/JwtAuthGuard.html":{},"injectables/UpdateProductsProvider.html":{}}}],["unauthorizedexception('email",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('invalid",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception('no",{"_index":747,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception('unauthorized",{"_index":675,"title":{},"body":{"injectables/DeleteProductsProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["undefined",{"_index":1132,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["unit",{"_index":1270,"title":{},"body":{"index.html":{}}}],["unitprice",{"_index":116,"title":{},"body":{"injectables/AddToCartProvider.html":{}}}],["unknown",{"_index":81,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartResolver.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1384,"title":{},"body":{"properties.html":{}}}],["update",{"_index":762,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/SeedService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["update(id",{"_index":768,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["updatecategory",{"_index":508,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["updatecategory(id",{"_index":519,"title":{},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{}}}],["updatecategoryinput",{"_index":520,"title":{"classes/UpdateCategoryInput.html":{}},"body":{"classes/CategoriesResolver.html":{},"injectables/CategoriesService.html":{},"injectables/MutateCategoriesProvider.html":{},"classes/UpdateCategoryInput.html":{},"coverage.html":{}}}],["updatecategoryinput.name",{"_index":773,"title":{},"body":{"injectables/MutateCategoriesProvider.html":{}}}],["updatedat",{"_index":324,"title":{},"body":{"classes/CartEntity.html":{},"classes/CartItemEntity.html":{},"classes/CategoryEntity.html":{},"classes/OrderEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/ProductRentEntity.html":{},"classes/ProductSaleEntity.html":{},"classes/UserEntity.html":{}}}],["updatedcart",{"_index":132,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/RemoveFromCartProvider.html":{}}}],["updatedproduct",{"_index":1129,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updatedproduct.categories.map((pc",{"_index":1144,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproduct",{"_index":1007,"title":{},"body":{"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["updateproduct(productid",{"_index":1017,"title":{},"body":{"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto",{"_index":1019,"title":{"classes/UpdateProductDto.html":{}},"body":{"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"injectables/UpdateProductsProvider.html":{},"coverage.html":{}}}],["updateproductdto.available",{"_index":1134,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.categories",{"_index":1136,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.categories.map((categoryid",{"_index":1138,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.description",{"_index":1133,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.quantity",{"_index":1135,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.rentdetails",{"_index":1142,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.rentdetails.price",{"_index":1143,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.saledetails",{"_index":1139,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.saledetails.price",{"_index":1141,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductdto.title",{"_index":1131,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["updateproductinput",{"_index":1018,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["updateproductsprovider",{"_index":996,"title":{"injectables/UpdateProductsProvider.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductsProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updates",{"_index":1344,"title":{},"body":{"index.html":{}}}],["upsert",{"_index":1140,"title":{},"body":{"injectables/UpdateProductsProvider.html":{}}}],["usefactory",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":387,"title":{},"body":{"classes/CartResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(jwtauthguard",{"_index":396,"title":{},"body":{"classes/CartResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{}}}],["user",{"_index":134,"title":{},"body":{"injectables/AddToCartProvider.html":{},"injectables/AuthService.html":{},"classes/CartEntity.html":{},"classes/CartResolver.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/ProductsResolver.html":{},"injectables/ProductsService.html":{},"classes/TokenModel.html":{},"classes/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":393,"title":{},"body":{"classes/CartResolver.html":{},"classes/OrdersResolver.html":{},"classes/ProductsResolver.html":{},"classes/UsersResolver.html":{}}}],["user.decorator.ts",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":1167,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateProductsProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/ProductsResolver.html":{}}}],["user.password",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.provider",{"_index":1002,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["user.provider.ts",{"_index":730,"title":{},"body":{"injectables/FetchProductsByUserProvider.html":{},"coverage.html":{}}}],["user.provider.ts:10",{"_index":734,"title":{},"body":{"injectables/FetchProductsByUserProvider.html":{}}}],["user.provider.ts:7",{"_index":732,"title":{},"body":{"injectables/FetchProductsByUserProvider.html":{}}}],["userdata",{"_index":1176,"title":{},"body":{"injectables/UsersService.html":{}}}],["userentity",{"_index":256,"title":{"classes/UserEntity.html":{}},"body":{"injectables/AuthService.html":{},"classes/CartEntity.html":{},"classes/OrderItemDetailEntity.html":{},"classes/ProductEntity.html":{},"classes/TokenModel.html":{},"classes/UserEntity.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userid",{"_index":79,"title":{},"body":{"injectables/AddToCartProvider.html":{},"classes/CartEntity.html":{},"injectables/CartService.html":{},"guards/CartValidationGuard.html":{},"injectables/CreateOrderProvider.html":{},"injectables/CreateProductsProvider.html":{},"injectables/DeleteProductsProvider.html":{},"injectables/FetchCartProvider.html":{},"injectables/FetchOrdersProvider.html":{},"injectables/FetchProductsByUserProvider.html":{},"classes/OrderEntity.html":{},"classes/OrdersResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/RemoveFromCartProvider.html":{},"injectables/UpdateProductsProvider.html":{}}}],["users.resolver",{"_index":1162,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/providers/users.service",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/users.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["userservice",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersResolver.html":{}}}],["usersmodule",{"_index":156,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersresolver",{"_index":1161,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":251,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1336,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1154,"title":{},"body":{"classes/UserEntity.html":{}}}],["v4",{"_index":1149,"title":{},"body":{"classes/UserEntity.html":{}}}],["validateavailability",{"_index":427,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validateavailability(product",{"_index":437,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validatedates",{"_index":428,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validatedates(input",{"_index":439,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validateif",{"_index":43,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["validateif((cartitem",{"_index":53,"title":{},"body":{"classes/AddToCartDto.html":{}}}],["validatenested",{"_index":633,"title":{},"body":{"classes/CreateProductsDto.html":{},"classes/UpdateProductDto.html":{}}}],["validatenested()@type(undefined)@isnotempty({message",{"_index":624,"title":{},"body":{"classes/CreateProductsDto.html":{}}}],["validatenested()@type(undefined)@isoptional",{"_index":1121,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["validateproduct",{"_index":429,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validateproduct(productid",{"_index":442,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validatequantity",{"_index":430,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validatequantity(product",{"_index":444,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validateusercartstate",{"_index":431,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validateusercartstate(userid",{"_index":446,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validation.guard",{"_index":395,"title":{},"body":{"classes/CartResolver.html":{}}}],["validation.guard.ts",{"_index":425,"title":{},"body":{"guards/CartValidationGuard.html":{},"coverage.html":{}}}],["validation.guard.ts:114",{"_index":440,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validation.guard.ts:15",{"_index":432,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validation.guard.ts:18",{"_index":435,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validation.guard.ts:36",{"_index":443,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validation.guard.ts:56",{"_index":447,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validation.guard.ts:80",{"_index":445,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validation.guard.ts:88",{"_index":438,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["validator",{"_index":44,"title":{},"body":{"classes/AddToCartDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductsDto.html":{},"classes/ProductRentDto.html":{},"classes/ProductSaleDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["value",{"_index":1072,"title":{},"body":{"injectables/SeedService.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1385,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1382,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1328,"title":{},"body":{"index.html":{}}}],["viewallproducts",{"_index":1008,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["viewproductsbyuser",{"_index":1009,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["viewproductsbyuser(jwtpayload",{"_index":1022,"title":{},"body":{"classes/ProductsResolver.html":{}}}],["visit",{"_index":1317,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1331,"title":{},"body":{"index.html":{}}}],["void",{"_index":441,"title":{},"body":{"guards/CartValidationGuard.html":{}}}],["watch",{"_index":1264,"title":{},"body":{"index.html":{}}}],["website",{"_index":1368,"title":{},"body":{"index.html":{}}}],["working",{"_index":1316,"title":{},"body":{"index.html":{}}}],["world",{"_index":192,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1346,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":1260,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1360,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1275,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/PrismaModule.html":{},"modules/ProductRentDetailsModule.html":{},"modules/ProductSaleDetailsModule.html":{},"modules/ProductsModule.html":{},"modules/SeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddToCartDto.html":{"url":"classes/AddToCartDto.html","title":"class - AddToCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddToCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dto/add-to-cart.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                    \n                                itemType\n                            \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@ValidateIf(cartItem => )@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dto/add-to-cart.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        itemType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartItemTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()@IsEnum(CartItemTypes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dto/add-to-cart.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dto/add-to-cart.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dto/add-to-cart.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@ValidateIf(cartItem => )@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dto/add-to-cart.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int } from '@nestjs/graphql';\nimport {\n  IsDate,\n  IsEnum,\n  IsInt,\n  IsString,\n  Min,\n  ValidateIf,\n} from 'class-validator';\nimport { CartItemTypes } from '../enums/cart-item-type.enum';\n\n@InputType()\nexport class AddToCartDto {\n  @Field(() => Int)\n  @IsInt()\n  productId: number;\n\n  @Field()\n  @IsString()\n  @IsEnum(CartItemTypes)\n  itemType: CartItemTypes;\n\n  @Field(() => Int)\n  @IsInt()\n  @Min(1)\n  quantity: number;\n\n  @Field({ nullable: true })\n  @ValidateIf((cartItem) => cartItem.itemType === CartItemTypes.RENT)\n  @IsDate()\n  startDate?: Date;\n\n  @Field({ nullable: true })\n  @ValidateIf((cartItem) => cartItem.itemType === CartItemTypes.RENT)\n  @IsDate()\n  endDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddToCartProvider.html":{"url":"injectables/AddToCartProvider.html","title":"injectable - AddToCartProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddToCartProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/providers/add-to-cart.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToCart\n                            \n                            \n                                    Private\n                                calculateDays\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/cart/providers/add-to-cart.provider.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addToCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToCart(userId: string, input: AddToCartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/providers/add-to-cart.provider.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            AddToCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateDays\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateDays(startDate: Date, endDate: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/providers/add-to-cart.provider.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { AddToCartDto } from '../dto/add-to-cart.dto';\nimport { CartItemTypes } from '../enums/cart-item-type.enum';\n\n@Injectable()\nexport class AddToCartProvider {\n  constructor(private prisma: PrismaService) {}\n\n  private calculateDays(startDate: Date, endDate: Date): number {\n    const diffTime = Math.abs(endDate.getTime() - startDate.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  async addToCart(userId: string, input: AddToCartDto) {\n    return this.prisma.$transaction(async (prisma) => {\n      let cart = await prisma.cart.findFirst({\n        where: { userId },\n        include: {\n          items: true,\n        },\n      });\n\n      if (!cart) {\n        cart = await prisma.cart.create({\n          data: {\n            userId,\n            totalPrice: 0,\n          },\n          include: {\n            items: true,\n          },\n        });\n      }\n\n      const product = await prisma.product.findUnique({\n        where: { id: input.productId },\n        include: {\n          saleDetails: input.itemType === CartItemTypes.BUY,\n          rentDetails: input.itemType === CartItemTypes.RENT,\n        },\n      });\n\n      let unitPrice: number;\n      if (input.itemType === CartItemTypes.RENT) {\n        const numberOfDays = this.calculateDays(input.startDate, input.endDate);\n        unitPrice = product.rentDetails.price * numberOfDays;\n      } else {\n        unitPrice = product.saleDetails.price;\n      }\n\n      const itemTotalPrice = unitPrice * input.quantity;\n      const newCartTotal = cart.totalPrice + itemTotalPrice;\n\n      const cartItem = await prisma.cartItem.create({\n        data: {\n          cartId: cart.id,\n          productId: input.productId,\n          itemType: input.itemType,\n          quantity: input.quantity,\n          price: itemTotalPrice,\n          startDate: input.startDate,\n          endDate: input.endDate,\n        },\n        include: {\n          product: {\n            include: {\n              saleDetails: input.itemType === CartItemTypes.BUY,\n              rentDetails: input.itemType === CartItemTypes.RENT,\n            },\n          },\n        },\n      });\n\n      const updatedCart = await prisma.cart.update({\n        where: { id: cart.id },\n        data: { totalPrice: newCartTotal },\n        include: {\n          items: {\n            include: {\n              product: {\n                include: {\n                  saleDetails: true,\n                  rentDetails: true,\n                },\n              },\n            },\n          },\n          user: true,\n        },\n      });\n\n      return {\n        ...cartItem,\n        cart: updatedCart,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductRentDetailsModule\n\nProductRentDetailsModule\n\nAppModule -->\n\nProductRentDetailsModule->AppModule\n\n\n\n\n\nProductSaleDetailsModule\n\nProductSaleDetailsModule\n\nAppModule -->\n\nProductSaleDetailsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nSeedModule\n\nSeedModule\n\nAppModule -->\n\nSeedModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductRentDetailsModule\n                        \n                        \n                            ProductSaleDetailsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            SeedModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { ProductsModule } from './products/products.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { ProductSaleDetailsModule } from './product-sale-details/product-sale-details.module';\nimport { ProductRentDetailsModule } from './product-rent-details/product-rent-details.module';\nimport { SeedModule } from './seed/seed.module';\nimport { CartModule } from './cart/cart.module';\nimport { OrdersModule } from './orders/orders.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      driver: ApolloDriver,\n      autoSchemaFile: true,\n      playground: true,\n    }),\n    UsersModule,\n    AuthModule,\n    PrismaModule,\n    ProductsModule,\n    CategoriesModule,\n    ProductSaleDetailsModule,\n    ProductRentDetailsModule,\n    SeedModule,\n    CartModule,\n    OrdersModule,\n  ],\n  providers: [PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nJwtAuthGuard \n\nJwtAuthGuard \n\n\n\nAuthModule\n\nAuthModule\n\nJwtAuthGuard  -->\n\nAuthModule->JwtAuthGuard \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBcryptProvider\n\nBcryptProvider\n\nAuthModule -->\n\nBcryptProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            BcryptProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtAuthGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AuthService } from './providers/auth.service';\nimport { AuthResolver } from './auth.resolver';\nimport { UsersModule } from '../users/users.module';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\nimport { BcryptProvider } from './providers/bcrypt.provider';\n\n@Module({\n  imports: [\n    ConfigModule,\n    forwardRef(() => UsersModule),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_SECRET'),\n        signOptions: {\n          expiresIn: '30m',\n        },\n      }),\n    }),\n  ],\n  providers: [AuthService, AuthResolver, JwtAuthGuard, BcryptProvider],\n  exports: [JwtAuthGuard, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    Async\n                                signIn\n                            \n                            \n                                    \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.resolver.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInInput: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.resolver.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInInput\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(signUpInput: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpInput\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Mutation, Args } from '@nestjs/graphql';\nimport { AuthService } from './providers/auth.service';\nimport { SignUpDto, SignInDto } from './dtos/auth.dto';\nimport { TokenModel } from './dtos/token.dto';\n\n@Resolver()\nexport class AuthResolver {\n  constructor(private authService: AuthService) {}\n\n  @Mutation(() => TokenModel)\n  async signUp(@Args('input') signUpInput: SignUpDto): Promise {\n    return this.authService.signUp(signUpInput);\n  }\n\n  @Mutation(() => TokenModel)\n  async signIn(@Args('input') signInInput: SignInDto): Promise {\n    return this.authService.signIn(signInInput);\n  }\n\n  @Mutation(() => TokenModel)\n  async refreshToken(\n    @Args('refreshToken') refreshToken: string,\n  ): Promise {\n    return this.authService.refreshToken(refreshToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService, bcryptProvider: BcryptProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcryptProvider\n                                                  \n                                                        \n                                                                        BcryptProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInInput: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInInput\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(signUpInput: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpInput\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { UsersService } from '../../users/providers/users.service';\nimport { SignUpDto, SignInDto } from '../dtos/auth.dto';\nimport { TokenModel } from '../dtos/token.dto';\nimport { BcryptProvider } from './bcrypt.provider';\nimport { UserEntity } from 'src/users/user.entity';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly userService: UsersService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly bcryptProvider: BcryptProvider,\n  ) {}\n\n  async signUp(signUpInput: SignUpDto): Promise {\n    const existingUser = await this.userService.findByEmail(signUpInput.email);\n    if (existingUser) {\n      throw new UnauthorizedException('Email already exists');\n    }\n\n    const hashedPassword = await this.bcryptProvider.hashPassword(\n      signUpInput.password,\n    );\n    const user = await this.userService.create({\n      ...signUpInput,\n      password: hashedPassword,\n    });\n\n    return this.generateTokens(user);\n  }\n\n  async signIn(signInInput: SignInDto): Promise {\n    const user = await this.userService.findByEmail(signInInput.email);\n    if (!user) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const isPasswordValid = await this.bcryptProvider.comparePassword(\n      signInInput.password,\n      user.password,\n    );\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    return this.generateTokens(user);\n  }\n\n  async refreshToken(refreshToken: string): Promise {\n    try {\n      const payload = await this.jwtService.verifyAsync(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_SECRET'),\n      });\n\n      const user = await this.userService.findById(payload.sub);\n      if (!user) {\n        throw new UnauthorizedException('Invalid refresh token');\n      }\n\n      return this.generateTokens(user);\n    } catch {\n      throw new UnauthorizedException('Invalid refresh token');\n    }\n  }\n\n  private async generateTokens(user: UserEntity): Promise {\n    const payload = { sub: user.id, email: user.email };\n\n    const [accessToken, refreshToken] = await Promise.all([\n      this.jwtService.signAsync(payload, {\n        secret: this.configService.get('JWT_ACCESS_SECRET'),\n        expiresIn: '30m',\n      }),\n      this.jwtService.signAsync(payload, {\n        secret: this.configService.get('JWT_REFRESH_SECRET'),\n        expiresIn: '30d',\n      }),\n    ]);\n\n    return {\n      accessToken,\n      refreshToken,\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptProvider.html":{"url":"injectables/BcryptProvider.html","title":"injectable - BcryptProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/bcrypt.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                comparePassword\n                            \n                            \n                                    Public\n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(password: string | Buffer, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/bcrypt.provider.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/bcrypt.provider.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { HashingProvider } from './hashing.provider';\n\n@Injectable()\nexport class BcryptProvider implements HashingProvider {\n  public async hashPassword(password: string | Buffer): Promise {\n    const salt = await bcrypt.genSalt();\n    return bcrypt.hash(password, salt);\n  }\n\n  public async comparePassword(\n    password: string | Buffer,\n    hashedPassword: string,\n  ): Promise {\n    return bcrypt.compare(password, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartEntity.html":{"url":"classes/CartEntity.html","title":"class - CartEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                totalPrice\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartItemEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int } from '@nestjs/graphql';\nimport { CartItemEntity } from './cart-item.entity';\nimport { UserEntity } from 'src/users/user.entity';\n\n@ObjectType()\nexport class CartEntity {\n  @Field(() => Int)\n  id: number;\n\n  @Field()\n  userId: string;\n\n  @Field(() => UserEntity, { nullable: true })\n  user?: UserEntity;\n\n  @Field(() => Int)\n  totalPrice: number;\n\n  @Field(() => [CartItemEntity])\n  items: CartItemEntity[];\n\n  @Field()\n  createdAt: Date;\n\n  @Field()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartItemEntity.html":{"url":"classes/CartItemEntity.html","title":"class - CartItemEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartItemEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart-item.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                cart\n                            \n                            \n                                    \n                                cartId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                itemType\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        itemType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartItemTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { ProductEntity } from 'src/products/product.entity';\nimport { CartEntity } from './cart.entity';\nimport { CartItemTypes } from '../enums/cart-item-type.enum';\n\n@ObjectType()\nexport class CartItemEntity {\n  @Field(() => Int)\n  id: number;\n\n  @Field(() => Int)\n  cartId: number;\n\n  @Field(() => Int)\n  productId: number;\n\n  @Field(() => Int)\n  price: number;\n\n  @Field(() => Int)\n  quantity: number;\n\n  @Field()\n  itemType: CartItemTypes;\n\n  @Field({ nullable: true })\n  startDate?: Date;\n\n  @Field({ nullable: true })\n  endDate?: Date;\n\n  @Field(() => CartEntity, { nullable: true })\n  cart?: CartEntity;\n\n  @Field(() => ProductEntity)\n  product: ProductEntity;\n\n  @Field()\n  createdAt: Date;\n\n  @Field()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CartModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nPrismaModule->CartModule\n\n\n\n\n\nAddToCartProvider\n\nAddToCartProvider\n\nCartModule -->\n\nAddToCartProvider->CartModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nFetchCartProvider\n\nFetchCartProvider\n\nCartModule -->\n\nFetchCartProvider->CartModule\n\n\n\n\n\nRemoveFromCartProvider\n\nRemoveFromCartProvider\n\nCartModule -->\n\nRemoveFromCartProvider->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddToCartProvider\n                        \n                        \n                            CartService\n                        \n                        \n                            FetchCartProvider\n                        \n                        \n                            RemoveFromCartProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartService } from './providers/cart.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { AddToCartProvider } from './providers/add-to-cart.provider';\nimport { RemoveFromCartProvider } from './providers/remove-from-cart.provider';\nimport { FetchCartProvider } from './providers/fetch-cart.provider';\nimport { CartResolver } from './cart.resolver';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [PrismaModule, JwtModule],\n  providers: [\n    CartService,\n    AddToCartProvider,\n    RemoveFromCartProvider,\n    FetchCartProvider,\n    CartResolver,\n  ],\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartResolver.html":{"url":"classes/CartResolver.html","title":"class - CartResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                addToCart\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getCart\n                            \n                            \n                                    \n                                    \n                                    Async\n                                removeFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/cart/cart.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        addToCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToCart(input: AddToCartDto, jwtPayload: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(JwtAuthGuard, CartValidationGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.resolver.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            AddToCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwtPayload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCart(jwtPayload: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.resolver.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwtPayload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFromCart(cartId: number, jwtPayload: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.resolver.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwtPayload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { CartEntity } from './entities/cart.entity';\nimport { NotFoundException, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { CartItemEntity } from './entities/cart-item.entity';\nimport { JwtPayload } from 'src/auth/interfaces/payload.interface';\nimport { CurrentUser } from 'src/auth/decorators/current-user.decorator';\nimport { AddToCartDto } from './dto/add-to-cart.dto';\nimport { CartService } from './providers/cart.service';\nimport { CartValidationGuard } from './guards/cart-validation.guard';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Resolver(() => CartEntity)\nexport class CartResolver {\n  constructor(\n    private readonly cartService: CartService,\n    private prisma: PrismaService,\n  ) {}\n\n  @Mutation(() => CartItemEntity)\n  @UseGuards(JwtAuthGuard, CartValidationGuard)\n  async addToCart(\n    @Args('input') input: AddToCartDto,\n    @CurrentUser() jwtPayload: JwtPayload,\n  ) {\n    return this.cartService.addToCart(jwtPayload.sub, input);\n  }\n\n  @Mutation(() => CartEntity)\n  @UseGuards(JwtAuthGuard)\n  async removeFromCart(\n    @Args('cartId', { type: () => Int }) cartId: number,\n    @CurrentUser() jwtPayload: JwtPayload,\n  ) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: jwtPayload.sub },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return this.cartService.removeFromCart(user.id, cartId);\n  }\n\n  @Query(() => CartEntity, { nullable: true })\n  @UseGuards(JwtAuthGuard)\n  async getCart(@CurrentUser() jwtPayload: JwtPayload) {\n    return this.cartService.getCart(jwtPayload.sub);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/providers/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToCart\n                            \n                            \n                                    Async\n                                getCart\n                            \n                            \n                                    Async\n                                removeFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addToCartProvider: AddToCartProvider, removeFromCartProvider: RemoveFromCartProvider, fetchCartProvider: FetchCartProvider)\n                    \n                \n                        \n                            \n                                Defined in src/cart/providers/cart.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addToCartProvider\n                                                  \n                                                        \n                                                                        AddToCartProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeFromCartProvider\n                                                  \n                                                        \n                                                                        RemoveFromCartProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fetchCartProvider\n                                                  \n                                                        \n                                                                        FetchCartProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addToCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToCart(userId: string, input: AddToCartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/providers/cart.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            AddToCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCart(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/providers/cart.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFromCart(userId: string, cartItemId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/providers/cart.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartItemId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AddToCartDto } from '../dto/add-to-cart.dto';\nimport { AddToCartProvider } from './add-to-cart.provider';\nimport { RemoveFromCartProvider } from './remove-from-cart.provider';\nimport { FetchCartProvider } from './fetch-cart.provider';\n\n@Injectable()\n@Injectable()\nexport class CartService {\n  constructor(\n    private addToCartProvider: AddToCartProvider,\n    private removeFromCartProvider: RemoveFromCartProvider,\n    private fetchCartProvider: FetchCartProvider,\n  ) {}\n\n  async addToCart(userId: string, input: AddToCartDto) {\n    return this.addToCartProvider.addToCart(userId, input);\n  }\n\n  async getCart(userId: string) {\n    return this.fetchCartProvider.fetchCart(userId);\n  }\n\n  async removeFromCart(userId: string, cartItemId: number) {\n    return this.removeFromCartProvider.removeFromCart(userId, cartItemId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CartValidationGuard.html":{"url":"guards/CartValidationGuard.html","title":"guard - CartValidationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CartValidationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/cart/guards/cart-validation.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                validateAvailability\n                            \n                            \n                                    Private\n                                validateDates\n                            \n                            \n                                    Private\n                                    Async\n                                validateProduct\n                            \n                            \n                                    Private\n                                    Async\n                                validateQuantity\n                            \n                            \n                                    Private\n                                    Async\n                                validateUserCartState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/cart/guards/cart-validation.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/guards/cart-validation.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateAvailability\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAvailability(product: any, itemType: CartItemTypes)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/guards/cart-validation.guard.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemType\n                                            \n                                                            CartItemTypes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateDates\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateDates(input: AddToCartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/guards/cart-validation.guard.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            AddToCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateProduct(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/guards/cart-validation.guard.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateQuantity\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateQuantity(product: any, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/guards/cart-validation.guard.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateUserCartState\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUserCartState(userId: string, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/guards/cart-validation.guard.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  BadRequestException,\n} from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CartItemTypes } from '../enums/cart-item-type.enum';\nimport { JwtPayload } from 'src/auth/interfaces/payload.interface';\nimport { Availability } from 'src/products/enums/availability.enum';\nimport { AddToCartDto } from '../dto/add-to-cart.dto';\n\n@Injectable()\nexport class CartValidationGuard implements CanActivate {\n  constructor(private prisma: PrismaService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const ctx = GqlExecutionContext.create(context);\n    const { input } = ctx.getArgs();\n    const jwtPayload = ctx.getContext().req.user as JwtPayload;\n\n    const product = await this.validateProduct(input.productId);\n\n    await this.validateUserCartState(jwtPayload.sub, input.productId);\n    await this.validateQuantity(product, input.quantity);\n    ctx.getContext().product = product;\n\n    await this.validateAvailability(product, input.itemType);\n\n    this.validateDates(input);\n\n    return true;\n  }\n\n  private async validateProduct(productId: number) {\n    const product = await this.prisma.product.findUnique({\n      where: { id: productId },\n      include: {\n        saleDetails: true,\n        rentDetails: true,\n      },\n    });\n\n    if (!product) {\n      throw new BadRequestException('Product not found');\n    }\n\n    if (product.available === Availability.OUTOFSTOCK) {\n      throw new BadRequestException('Product is out of stock');\n    }\n\n    return product;\n  }\n\n  private async validateUserCartState(userId: string, productId: number) {\n    const existingCartItem = await this.prisma.cart.findFirst({\n      where: {\n        userId,\n        items: {\n          some: {\n            productId,\n          },\n        },\n      },\n      include: {\n        items: {\n          where: {\n            productId,\n          },\n        },\n      },\n    });\n\n    if (existingCartItem?.items.length > 0) {\n      throw new BadRequestException('Product is already in your cart');\n    }\n  }\n\n  private async validateQuantity(product: any, quantity: number) {\n    if (quantity > product.quantity) {\n      throw new BadRequestException(\n        `Requested quantity exceeds available stock. Available: ${product.quantity}`,\n      );\n    }\n  }\n\n  private async validateAvailability(product: any, itemType: CartItemTypes) {\n    if (itemType === CartItemTypes.BUY) {\n      if (\n        product.available !== Availability.SALE &&\n        product.available !== Availability.BOTH\n      ) {\n        throw new BadRequestException(\n          'This product is not available for purchase',\n        );\n      }\n      if (!product.saleDetails) {\n        throw new BadRequestException('Product has no sale details');\n      }\n    } else if (itemType === CartItemTypes.RENT) {\n      if (\n        product.available !== Availability.RENT &&\n        product.available !== Availability.BOTH\n      ) {\n        throw new BadRequestException('This product is not available for rent');\n      }\n      if (!product.rentDetails) {\n        throw new BadRequestException('Product has no rental details');\n      }\n    }\n  }\n\n  private validateDates(input: AddToCartDto) {\n    if (input.itemType === CartItemTypes.RENT) {\n      if (!input.startDate || !input.endDate) {\n        throw new BadRequestException('Start date and end date are required');\n      }\n\n      const startDate = new Date(input.startDate);\n      const endDate = new Date(input.endDate);\n\n      if (startDate >= endDate) {\n        throw new BadRequestException('End date must be after start date');\n      }\n\n      if (startDate \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_CategoriesModule_imports\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nPrismaModule->CategoriesModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nFetchAllCategoriesProvider\n\nFetchAllCategoriesProvider\n\nCategoriesModule -->\n\nFetchAllCategoriesProvider->CategoriesModule\n\n\n\n\n\nMutateCategoriesProvider\n\nMutateCategoriesProvider\n\nCategoriesModule -->\n\nMutateCategoriesProvider->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                        \n                            FetchAllCategoriesProvider\n                        \n                        \n                            MutateCategoriesProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoriesService } from './providers/categories.service';\nimport { CategoriesResolver } from './categories.resolver';\nimport { FetchAllCategoriesProvider } from './providers/fetch-categories.provider';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { MutateCategoriesProvider } from './providers/mutate-categories.provider';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [\n    CategoriesService,\n    CategoriesResolver,\n    FetchAllCategoriesProvider,\n    MutateCategoriesProvider,\n  ],\n  exports: [CategoriesService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesResolver.html":{"url":"classes/CategoriesResolver.html","title":"class - CategoriesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createCategory\n                            \n                            \n                                    \n                                    Async\n                                deleteCategory\n                            \n                            \n                                    \n                                    Async\n                                fetchAllCategories\n                            \n                            \n                                    \n                                    Async\n                                fetchOneCategory\n                            \n                            \n                                    \n                                    Async\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoriesService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoriesService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory(createCategoryInput: CreateCategoryInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.resolver.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryInput\n                                            \n                                                            CreateCategoryInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteCategory(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.resolver.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        fetchAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchAllCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.resolver.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        fetchOneCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchOneCategory(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.resolver.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCategory(id: number, updateCategoryInput: UpdateCategoryInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.resolver.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryInput\n                                            \n                                                            UpdateCategoryInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql';\nimport { CategoriesService } from './providers/categories.service';\nimport { CreateCategoryInput } from './dtos/create-category.dto';\nimport { UpdateCategoryInput } from './dtos/update-category.dto';\nimport { CategoryEntity } from './category.entity';\n\n@Resolver('Category')\nexport class CategoriesResolver {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Query(() => [CategoryEntity])\n  async fetchAllCategories(): Promise {\n    return this.categoriesService.fetchAllCategories();\n  }\n\n  @Query(() => CategoryEntity)\n  async fetchOneCategory(@Args('id') id: number): Promise {\n    return this.categoriesService.fetchOneCategory(id);\n  }\n\n  @Mutation(() => CategoryEntity)\n  async createCategory(\n    @Args('createCategory') createCategoryInput: CreateCategoryInput,\n  ): Promise {\n    return this.categoriesService.createCategory(createCategoryInput);\n  }\n\n  @Mutation(() => CategoryEntity)\n  async updateCategory(\n    @Args('id', { type: () => Number }) id: number,\n    @Args('updateCategory') updateCategoryInput: UpdateCategoryInput,\n  ): Promise {\n    return this.categoriesService.updateCategory(id, updateCategoryInput);\n  }\n\n  @Mutation(() => Boolean)\n  async deleteCategory(\n    @Args('id', { type: () => Number }) id: number,\n  ): Promise {\n    return this.categoriesService.deleteCategory(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/providers/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createCategory\n                            \n                            \n                                    Public\n                                    Async\n                                deleteCategory\n                            \n                            \n                                    Public\n                                    Async\n                                fetchAllCategories\n                            \n                            \n                                    Public\n                                    Async\n                                fetchOneCategory\n                            \n                            \n                                    Public\n                                    Async\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchAllCategoriesProvider: FetchAllCategoriesProvider, MutateCategoriesProvider: MutateCategoriesProvider)\n                    \n                \n                        \n                            \n                                Defined in src/categories/providers/categories.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchAllCategoriesProvider\n                                                  \n                                                        \n                                                                        FetchAllCategoriesProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        MutateCategoriesProvider\n                                                  \n                                                        \n                                                                        MutateCategoriesProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory(createCategoryInput: CreateCategoryInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/categories.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryInput\n                                            \n                                                            CreateCategoryInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteCategory(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/categories.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fetchAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/categories.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fetchOneCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchOneCategory(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/categories.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCategory(id: number, updateCategoryInput: UpdateCategoryInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/categories.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryInput\n                                            \n                                                            UpdateCategoryInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Category } from '@prisma/client';\nimport { FetchAllCategoriesProvider } from './fetch-categories.provider';\nimport { MutateCategoriesProvider } from './mutate-categories.provider';\nimport { CreateCategoryInput } from '../dtos/create-category.dto';\nimport { UpdateCategoryInput } from '../dtos/update-category.dto';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(\n    private readonly fetchAllCategoriesProvider: FetchAllCategoriesProvider,\n    private readonly MutateCategoriesProvider: MutateCategoriesProvider,\n  ) {}\n\n  public async fetchAllCategories(): Promise {\n    return await this.fetchAllCategoriesProvider.findAll();\n  }\n\n  public async fetchOneCategory(id: number): Promise {\n    return await this.fetchAllCategoriesProvider.findOne(id);\n  }\n\n  public async createCategory(\n    createCategoryInput: CreateCategoryInput,\n  ): Promise {\n    return await this.MutateCategoriesProvider.create(createCategoryInput);\n  }\n\n  public async updateCategory(\n    id: number,\n    updateCategoryInput: UpdateCategoryInput,\n  ): Promise {\n    return await this.MutateCategoriesProvider.update(id, updateCategoryInput);\n  }\n\n  public async deleteCategory(id: number): Promise {\n    return await this.MutateCategoriesProvider.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryEntity.html":{"url":"classes/CategoryEntity.html","title":"class - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/category.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/category.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/category.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/category.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/category.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType, Int } from '@nestjs/graphql';\n\n@ObjectType()\nexport class CategoryEntity {\n  @Field(() => Int)\n  id: number;\n\n  @Field()\n  name: string;\n\n  @Field()\n  createdAt: Date;\n\n  @Field()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryInput.html":{"url":"classes/CreateCategoryInput.html","title":"class - CreateCategoryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/create-category.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\n\n@InputType()\nexport class CreateCategoryInput {\n  @Field(() => String)\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dtos/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                cartId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/create-order.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\n@InputType()\nexport class CreateOrderDto {\n  @Field()\n  @IsNotEmpty()\n  @IsInt()\n  cartId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateOrderProvider.html":{"url":"injectables/CreateOrderProvider.html","title":"injectable - CreateOrderProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateOrderProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/providers/create-order.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/orders/providers/create-order.provider.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(userId: string, cartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/create-order.provider.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class CreateOrderProvider {\n  constructor(private prisma: PrismaService) {}\n\n  async createOrder(userId: string, cartId: number) {\n    const cart = await this.prisma.cart.findUnique({\n      where: { id: cartId },\n      include: {\n        items: {\n          include: {\n            product: true,\n          },\n        },\n      },\n    });\n\n    if (!cart) {\n      throw new NotFoundException('Cart not found');\n    }\n\n    if (cart.userId !== userId) {\n      throw new Error('Unauthorized access to cart');\n    }\n\n    return this.prisma.$transaction(async (prisma) => {\n      const order = await prisma.order.create({\n        data: {\n          userId,\n          totalAmount: cart.totalPrice,\n        },\n      });\n\n      for (const item of cart.items) {\n        const { product } = item;\n\n        if (item.quantity > product.quantity) {\n          throw new Error(\n            `Insufficient quantity for product: ${product.title}`,\n          );\n        }\n\n        const orderParticipants =\n          item.itemType === 'BUY'\n            ? {\n                buyerId: userId,\n                sellerId: product.userId,\n                renterId: null,\n                lenderId: null,\n              }\n            : {\n                buyerId: null,\n                sellerId: null,\n                renterId: userId,\n                lenderId: product.userId,\n              };\n\n        await prisma.orderItemDetails.create({\n          data: {\n            orderId: order.id,\n            productId: item.productId,\n            price: item.price,\n            quantity: item.quantity,\n            orderType: item.itemType,\n            startDate: item.startDate,\n            endDate: item.endDate,\n            ...orderParticipants,\n          },\n        });\n\n        if (item.itemType === 'BUY') {\n          await prisma.product.update({\n            where: { id: product.id },\n            data: {\n              quantity: {\n                decrement: item.quantity,\n              },\n              available:\n                product.quantity - item.quantity \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductsDto.html":{"url":"classes/CreateProductsDto.html","title":"class - CreateProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                available\n                            \n                            \n                                    \n                                    \n                                categories\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                rentDetails\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                saleDetails\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Availability\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsEnum(Availability)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        rentDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductDetailsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@ValidateIf(product => )@ValidateNested()@Type(undefined)@IsNotEmpty({message: 'Rent details are required when availability is RENT or BOTH'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        saleDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductDetailsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@ValidateIf(product => )@ValidateNested()@Type(undefined)@IsNotEmpty({message: 'Sale details are required when availability is SALE or BOTH'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()@MinLength(2)@MaxLength(512)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int } from '@nestjs/graphql';\nimport {\n  IsArray,\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n  ValidateIf,\n  ValidateNested,\n} from 'class-validator';\nimport { Availability } from '../enums/availability.enum';\nimport { Type } from 'class-transformer';\nimport { ProductDetailsDto } from './product-details.dto';\n\n@InputType()\nexport class CreateProductsDto {\n  @Field()\n  @IsString()\n  @MinLength(2)\n  @MaxLength(512)\n  @IsNotEmpty()\n  title: string;\n\n  @Field()\n  @IsString()\n  description: string;\n\n  @Field()\n  @IsNotEmpty()\n  @IsEnum(Availability)\n  available: Availability;\n\n  @Field(() => Int)\n  @IsInt()\n  @IsNotEmpty()\n  quantity: number;\n\n  @Field(() => [Int])\n  @IsArray()\n  categories: number[];\n\n  @Field(() => ProductDetailsDto, { nullable: true })\n  @ValidateIf(\n    (product) =>\n      product.available === Availability.SALE ||\n      product.available === Availability.BOTH,\n  )\n  @ValidateNested()\n  @Type(() => ProductDetailsDto)\n  @IsNotEmpty({\n    message: 'Sale details are required when availability is SALE or BOTH',\n  })\n  saleDetails?: ProductDetailsDto;\n\n  @Field(() => ProductDetailsDto, { nullable: true })\n  @ValidateIf(\n    (product) =>\n      product.available === Availability.RENT ||\n      product.available === Availability.BOTH,\n  )\n  @ValidateNested()\n  @Type(() => ProductDetailsDto)\n  @IsNotEmpty({\n    message: 'Rent details are required when availability is RENT or BOTH',\n  })\n  rentDetails?: ProductDetailsDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateProductsProvider.html":{"url":"injectables/CreateProductsProvider.html","title":"injectable - CreateProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/create-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/create-products.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(input: CreateProductsDto, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/create-products.provider.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ProductEntity } from '../product.entity';\nimport { CreateProductsDto } from '../dtos/create-product.dto';\nimport { User, Availability } from '@prisma/client';\n\n@Injectable()\nexport class CreateProductsProvider {\n  constructor(private prisma: PrismaService) {}\n\n  async createProduct(\n    input: CreateProductsDto,\n    user: User,\n  ): Promise {\n    if (!user || !user.id) {\n      throw new Error('Invalid user data');\n    } else {\n      const createdProduct = await this.prisma.product.create({\n        data: {\n          title: input.title,\n          description: input.description,\n          available: input.available,\n          quantity: input.quantity,\n          userId: user.id,\n          categories: {\n            create: input.categories.map((categoryId) => ({\n              category: {\n                connect: {\n                  id: categoryId,\n                },\n              },\n            })),\n          },\n          ...((input.available === Availability.SALE || Availability.BOTH) &&\n            input.saleDetails && {\n              saleDetails: {\n                create: {\n                  price: input.saleDetails.price,\n                },\n              },\n            }),\n          ...((input.available === Availability.RENT || Availability.BOTH) &&\n            input.rentDetails && {\n              rentDetails: {\n                create: {\n                  price: input.rentDetails.price,\n                },\n              },\n            }),\n        },\n        include: {\n          owner: true,\n          categories: {\n            include: {\n              category: true,\n            },\n          },\n          saleDetails:\n            input.available === (Availability.SALE || Availability.BOTH),\n          rentDetails:\n            input.available === (Availability.RENT || Availability.BOTH),\n        },\n      });\n\n      return {\n        ...createdProduct,\n        categories: createdProduct.categories.map((pc) => pc.category),\n      } as ProductEntity;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteProductsProvider.html":{"url":"injectables/DeleteProductsProvider.html","title":"injectable - DeleteProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/delete-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                deleteProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/delete-products.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: number, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/delete-products.provider.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class DeleteProductsProvider {\n  constructor(private prisma: PrismaService) {}\n  public async deleteProduct(\n    productId: number,\n    userId: string,\n  ): Promise {\n    const existingProduct = await this.prisma.product.findUnique({\n      where: { id: productId },\n    });\n    if (!existingProduct) {\n      throw new NotFoundException('Product not found');\n    }\n    if (existingProduct.userId !== userId) {\n      throw new UnauthorizedException('Unauthorized access to product');\n    }\n    await this.prisma.$transaction(async (prisma) => {\n      await prisma.productCategory.deleteMany({\n        where: { productId },\n      });\n\n      await prisma.productSaleDetails.deleteMany({\n        where: { productId },\n      });\n\n      await prisma.productRentDetails.deleteMany({\n        where: { productId },\n      });\n\n      await prisma.product.delete({\n        where: { id: productId },\n      });\n    });\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchAllCategoriesProvider.html":{"url":"injectables/FetchAllCategoriesProvider.html","title":"injectable - FetchAllCategoriesProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FetchAllCategoriesProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/providers/fetch-categories.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/providers/fetch-categories.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/fetch-categories.provider.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/fetch-categories.provider.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Category } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class FetchAllCategoriesProvider {\n  constructor(private readonly prisma: PrismaService) {}\n\n  public async findAll(): Promise {\n    return this.prisma.category.findMany();\n  }\n\n  public async findOne(id: number): Promise {\n    const category = await this.prisma.category.findUnique({ where: { id } });\n    if (!category) {\n      throw new NotFoundException(`Category with ID ${id} not found`);\n    }\n    return category;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchAllProductsProvider.html":{"url":"injectables/FetchAllProductsProvider.html","title":"injectable - FetchAllProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FetchAllProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/fetch-all-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fetchAllProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/fetch-all-products.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fetchAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/fetch-all-products.provider.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ProductEntity } from '../product.entity';\n\n@Injectable()\nexport class FetchAllProductsProvider {\n  constructor(private prisma: PrismaService) {}\n\n  public async fetchAllProducts(): Promise {\n    const products = await this.prisma.product.findMany({\n      include: {\n        owner: true,\n        categories: {\n          include: {\n            category: true,\n          },\n        },\n        saleDetails: true,\n        rentDetails: true,\n      },\n    });\n\n    return products.map((product) => ({\n      ...product,\n      categories: product.categories.map((pc) => pc.category),\n    })) as ProductEntity[];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchCartProvider.html":{"url":"injectables/FetchCartProvider.html","title":"injectable - FetchCartProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FetchCartProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/providers/fetch-cart.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fetchCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/cart/providers/fetch-cart.provider.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fetchCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchCart(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/providers/fetch-cart.provider.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class FetchCartProvider {\n  constructor(private prisma: PrismaService) {}\n\n  public async fetchCart(userId: string) {\n    return this.prisma.cart.findFirst({\n      where: { userId },\n      include: {\n        items: {\n          include: {\n            product: {\n              include: {\n                saleDetails: true,\n                rentDetails: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchOrdersProvider.html":{"url":"injectables/FetchOrdersProvider.html","title":"injectable - FetchOrdersProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FetchOrdersProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/providers/fetch-orders.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOrderById\n                            \n                            \n                                    Async\n                                findUserOrders\n                            \n                            \n                                    Async\n                                findUserRentals\n                            \n                            \n                                    Async\n                                findUserSales\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/orders/providers/fetch-orders.provider.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(orderId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/fetch-orders.provider.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserOrders(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/fetch-orders.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserRentals\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserRentals(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/fetch-orders.provider.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserSales\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserSales(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/fetch-orders.provider.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class FetchOrdersProvider {\n  constructor(private prisma: PrismaService) {}\n\n  async findOrderById(orderId: number) {\n    const order = await this.prisma.order.findUnique({\n      where: { id: orderId },\n      include: {\n        items: {\n          include: {\n            product: true,\n            buyer: true,\n            seller: true,\n            renter: true,\n            lender: true,\n          },\n        },\n      },\n    });\n    if (!order) {\n      throw new NotFoundException(`Order with ID ${orderId} not found`);\n    }\n    return order;\n  }\n\n  async findUserOrders(userId: string) {\n    return this.prisma.order.findMany({\n      where: { userId },\n      include: {\n        items: {\n          include: {\n            product: true,\n            buyer: true,\n            seller: true,\n            renter: true,\n            lender: true,\n          },\n        },\n      },\n      orderBy: { createdAt: 'desc' },\n    });\n  }\n\n  async findUserSales(userId: string) {\n    return this.prisma.order.findMany({\n      where: {\n        items: {\n          some: {\n            sellerId: userId,\n          },\n        },\n      },\n      include: {\n        items: {\n          include: {\n            product: {\n              include: {\n                saleDetails: true,\n                rentDetails: true,\n              },\n            },\n            buyer: true,\n            seller: true,\n            lender: true,\n            renter: true,\n          },\n        },\n      },\n      orderBy: { createdAt: 'desc' },\n    });\n  }\n\n  async findUserRentals(userId: string) {\n    return this.prisma.order.findMany({\n      where: {\n        items: {\n          some: {\n            OR: [{ renterId: userId }, { lenderId: userId }],\n          },\n        },\n      },\n      include: {\n        items: {\n          include: {\n            product: true,\n            renter: true,\n            lender: true,\n          },\n        },\n      },\n      orderBy: { createdAt: 'desc' },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchProductsByUserProvider.html":{"url":"injectables/FetchProductsByUserProvider.html","title":"injectable - FetchProductsByUserProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FetchProductsByUserProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/fetch-products-by-user.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fetchProductsByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/fetch-products-by-user.provider.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fetchProductsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchProductsByUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/fetch-products-by-user.provider.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ProductEntity } from '../product.entity';\n\n@Injectable()\nexport class FetchProductsByUserProvider {\n  constructor(private prisma: PrismaService) {}\n\n  public async fetchProductsByUser(user: User): Promise {\n    if (!user || !user.id) {\n      throw new Error('Invalid user data');\n    } else {\n      const products = await this.prisma.product.findMany({\n        where: {\n          userId: user.id,\n        },\n        include: {\n          owner: true,\n          categories: {\n            include: {\n              category: true,\n            },\n          },\n          saleDetails: true,\n          rentDetails: true,\n        },\n      });\n\n      return products.map((product) => ({\n        ...product,\n        categories: product.categories.map((pc) => pc.category),\n      })) as ProductEntity[];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashingProvider.html":{"url":"injectables/HashingProvider.html","title":"injectable - HashingProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashingProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/hashing.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                comparePassword\n                            \n                            \n                                    Abstract\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(password: string | Buffer, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/hashing.provider.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/hashing.provider.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport abstract class HashingProvider {\n  abstract hashPassword(password: string | Buffer): Promise;\n\n  abstract comparePassword(\n    password: string | Buffer,\n    hashedPassword: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  UnauthorizedException,\n  ExecutionContext,\n} from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { CanActivate } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const ctx = GqlExecutionContext.create(context);\n    const { req } = ctx.getContext();\n\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n      throw new UnauthorizedException('No token provided');\n    }\n\n    const [bearer, token] = authHeader.split(' ');\n    if (bearer !== 'Bearer' || !token) {\n      throw new UnauthorizedException('Invalid token format');\n    }\n\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: this.configService.get('JWT_ACCESS_SECRET'),\n      });\n      req.user = payload;\n      return true;\n    } catch (error) {\n      console.log(error);\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  sub: string;\n  email: string;\n  iat: number;\n  exp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MutateCategoriesProvider.html":{"url":"injectables/MutateCategoriesProvider.html","title":"injectable - MutateCategoriesProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MutateCategoriesProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/providers/mutate-categories.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/providers/mutate-categories.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryInput: CreateCategoryInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/mutate-categories.provider.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryInput\n                                            \n                                                            CreateCategoryInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/mutate-categories.provider.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateCategoryInput: UpdateCategoryInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/mutate-categories.provider.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryInput\n                                            \n                                                            UpdateCategoryInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateCategoryInput } from '../dtos/create-category.dto';\nimport { Category } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateCategoryInput } from '../dtos/update-category.dto';\n\n@Injectable()\nexport class MutateCategoriesProvider {\n  constructor(private readonly prisma: PrismaService) {}\n\n  public async create(\n    createCategoryInput: CreateCategoryInput,\n  ): Promise {\n    return this.prisma.category.create({\n      data: {\n        name: createCategoryInput.name,\n      },\n    });\n  }\n\n  public async update(\n    id: number,\n    updateCategoryInput: UpdateCategoryInput,\n  ): Promise {\n    const category = await this.prisma.category.findUnique({ where: { id } });\n    if (!category) {\n      throw new NotFoundException(`Category with ID ${id} not found`);\n    }\n\n    return this.prisma.category.update({\n      where: { id },\n      data: {\n        name: updateCategoryInput.name,\n      },\n    });\n  }\n\n  async delete(id: number): Promise {\n    const category = await this.prisma.category.findUnique({ where: { id } });\n    if (!category) {\n      throw new NotFoundException(`Category with ID ${id} not found`);\n    }\n\n    await this.prisma.category.delete({ where: { id } });\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderEntity.html":{"url":"classes/OrderEntity.html","title":"class - OrderEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                totalAmount\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderItemDetailEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType, Int } from '@nestjs/graphql';\nimport { OrderItemDetailEntity } from './order-item-detail.entity';\n\n@ObjectType()\nexport class OrderEntity {\n  @Field(() => Int)\n  id: number;\n\n  @Field()\n  userId: string;\n\n  @Field(() => Int)\n  totalAmount: number;\n\n  @Field()\n  status: string;\n\n  @Field()\n  createdAt: Date;\n\n  @Field()\n  updatedAt: Date;\n\n  @Field(() => [OrderItemDetailEntity])\n  items: OrderItemDetailEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderItemDetailEntity.html":{"url":"classes/OrderItemDetailEntity.html","title":"class - OrderItemDetailEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderItemDetailEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order-item-detail.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                buyer\n                            \n                            \n                                    \n                                    Optional\n                                buyerId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lender\n                            \n                            \n                                    \n                                    Optional\n                                lenderId\n                            \n                            \n                                    \n                                orderId\n                            \n                            \n                                    \n                                orderType\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    Optional\n                                renter\n                            \n                            \n                                    \n                                    Optional\n                                renterId\n                            \n                            \n                                    \n                                    Optional\n                                seller\n                            \n                            \n                                    \n                                    Optional\n                                sellerId\n                            \n                            \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        buyer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        buyerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lenderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orderType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        renter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        renterId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        seller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sellerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item-detail.entity.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType, Int } from '@nestjs/graphql';\nimport { OrderType } from './order-type.entity';\nimport { ProductEntity } from 'src/products/product.entity';\nimport { UserEntity } from 'src/users/user.entity';\n\n@ObjectType()\nexport class OrderItemDetailEntity {\n  @Field(() => Int)\n  id: number;\n\n  @Field(() => Int)\n  orderId: number;\n\n  @Field(() => Int)\n  productId: number;\n\n  @Field(() => String, { nullable: true })\n  buyerId?: string;\n\n  @Field(() => String, { nullable: true })\n  sellerId?: string;\n\n  @Field(() => String, { nullable: true })\n  renterId?: string;\n\n  @Field(() => String, { nullable: true })\n  lenderId?: string;\n\n  @Field(() => Int)\n  price: number;\n\n  @Field(() => OrderType)\n  orderType: OrderType;\n\n  @Field(() => Int)\n  quantity: number;\n\n  @Field(() => Date, { nullable: true })\n  startDate?: Date;\n\n  @Field(() => Date, { nullable: true })\n  endDate?: Date;\n\n  @Field()\n  createdAt: Date;\n\n  @Field()\n  updatedAt: Date;\n\n  @Field(() => ProductEntity)\n  product: ProductEntity;\n\n  @Field(() => UserEntity, { nullable: true })\n  buyer?: UserEntity;\n\n  @Field(() => UserEntity, { nullable: true })\n  seller?: UserEntity;\n\n  @Field(() => UserEntity, { nullable: true })\n  renter?: UserEntity;\n\n  @Field(() => UserEntity, { nullable: true })\n  lender?: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_OrdersModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nPrismaModule->OrdersModule\n\n\n\n\n\nCreateOrderProvider\n\nCreateOrderProvider\n\nOrdersModule -->\n\nCreateOrderProvider->OrdersModule\n\n\n\n\n\nFetchOrdersProvider\n\nFetchOrdersProvider\n\nOrdersModule -->\n\nFetchOrdersProvider->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateOrderProvider\n                        \n                        \n                            FetchOrdersProvider\n                        \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersService } from './providers/orders.service';\nimport { OrdersResolver } from './orders.resolver';\nimport { JwtModule } from '@nestjs/jwt';\nimport { CreateOrderProvider } from './providers/create-order.provider';\nimport { FetchOrdersProvider } from './providers/fetch-orders.provider';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule, JwtModule],\n  providers: [\n    OrdersService,\n    OrdersResolver,\n    CreateOrderProvider,\n    FetchOrdersProvider,\n  ],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrdersResolver.html":{"url":"classes/OrdersResolver.html","title":"class - OrdersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrdersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createOrder\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserOrders\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserRentals\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserSales\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrdersService)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(userId: JwtPayload, cartId: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.resolver.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartId\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserOrders(userId: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.resolver.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserRentals\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserRentals(userId: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.resolver.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserSales\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSales(userId: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.resolver.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Mutation, Args, Query } from '@nestjs/graphql';\nimport { UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CurrentUser } from '../auth/decorators/current-user.decorator';\nimport { OrdersService } from './providers/orders.service';\nimport { OrderEntity } from './entities/order.entity';\nimport { JwtPayload } from 'src/auth/interfaces/payload.interface';\nimport { CreateOrderDto } from './dtos/create-order.dto';\n\n@Resolver(() => OrderEntity)\nexport class OrdersResolver {\n  constructor(private readonly orderService: OrdersService) {}\n\n  @Mutation(() => OrderEntity)\n  @UseGuards(JwtAuthGuard)\n  async createOrder(\n    @CurrentUser() userId: JwtPayload,\n    @Args('input') cartId: CreateOrderDto,\n  ) {\n    return this.orderService.createOrder(userId.sub, cartId.cartId);\n  }\n\n  @Query(() => [OrderEntity])\n  @UseGuards(JwtAuthGuard)\n  async getUserOrders(@CurrentUser() userId: JwtPayload) {\n    return this.orderService.findUserOrders(userId.sub);\n  }\n\n  @Query(() => [OrderEntity])\n  @UseGuards(JwtAuthGuard)\n  async getUserSales(@CurrentUser() userId: JwtPayload) {\n    return this.orderService.findUserSales(userId.sub);\n  }\n\n  @Query(() => [OrderEntity])\n  @UseGuards(JwtAuthGuard)\n  async getUserRentals(@CurrentUser() userId: JwtPayload) {\n    return this.orderService.findUserRentals(userId.sub);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/providers/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                findOrderById\n                            \n                            \n                                    Async\n                                findUserOrders\n                            \n                            \n                                    Async\n                                findUserRentals\n                            \n                            \n                                    Async\n                                findUserSales\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createOrderProvider: CreateOrderProvider, fetchOrdersProvider: FetchOrdersProvider)\n                    \n                \n                        \n                            \n                                Defined in src/orders/providers/orders.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createOrderProvider\n                                                  \n                                                        \n                                                                        CreateOrderProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fetchOrdersProvider\n                                                  \n                                                        \n                                                                        FetchOrdersProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(userId: string, cartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/orders.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(orderId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/orders.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserOrders(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/orders.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserRentals\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserRentals(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/orders.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserSales\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserSales(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/orders.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateOrderProvider } from './create-order.provider';\nimport { FetchOrdersProvider } from './fetch-orders.provider';\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    private createOrderProvider: CreateOrderProvider,\n    private fetchOrdersProvider: FetchOrdersProvider,\n  ) {}\n\n  async createOrder(userId: string, cartId: number) {\n    return this.createOrderProvider.createOrder(userId, cartId);\n  }\n  async findOrderById(orderId: number) {\n    return this.fetchOrdersProvider.findOrderById(orderId);\n  }\n\n  async findUserOrders(userId: string) {\n    return this.fetchOrdersProvider.findUserOrders(userId);\n  }\n\n  async findUserSales(userId: string) {\n    return this.fetchOrdersProvider.findUserSales(userId);\n  }\n\n  async findUserRentals(userId: string) {\n    return this.fetchOrdersProvider.findUserRentals(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDetailsDto.html":{"url":"classes/ProductDetailsDto.html","title":"class - ProductDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/product-details.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-details.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int } from '@nestjs/graphql';\n\n@InputType()\nexport class ProductDetailsDto {\n  @Field(() => Int)\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductEntity.html":{"url":"classes/ProductEntity.html","title":"class - ProductEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                available\n                            \n                            \n                                    \n                                averageRating\n                            \n                            \n                                    \n                                categories\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    Optional\n                                rentDetails\n                            \n                            \n                                    \n                                    Optional\n                                saleDetails\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Availability\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        averageRating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        rentDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductRentEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        saleDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSaleEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType, Int } from '@nestjs/graphql';\nimport { CategoryEntity } from 'src/categories/category.entity';\nimport { ProductRentEntity } from 'src/product-rent-details/product-rent.entity';\nimport { ProductSaleEntity } from 'src/product-sale-details/product-sale.entity';\nimport { Availability } from './enums/availability.enum';\nimport { UserEntity } from 'src/users/user.entity';\n\n@ObjectType()\nexport class ProductEntity {\n  @Field(() => Int)\n  id: number;\n\n  @Field()\n  title: string;\n\n  @Field()\n  description: string;\n\n  @Field()\n  available: Availability;\n\n  @Field(() => Int)\n  quantity: number;\n\n  @Field(() => UserEntity)\n  owner: UserEntity;\n\n  @Field(() => Int)\n  averageRating: number;\n\n  @Field(() => [CategoryEntity])\n  categories: CategoryEntity[];\n\n  @Field(() => ProductSaleEntity, { nullable: true })\n  saleDetails?: ProductSaleEntity;\n\n  @Field(() => ProductRentEntity, { nullable: true })\n  rentDetails?: ProductRentEntity;\n\n  @Field()\n  createdAt: Date;\n\n  @Field()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductRentDetailsModule.html":{"url":"modules/ProductRentDetailsModule.html","title":"module - ProductRentDetailsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductRentDetailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductRentDetailsModule\n\n\n\ncluster_ProductRentDetailsModule_imports\n\n\n\ncluster_ProductRentDetailsModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductRentDetailsModule\n\nProductRentDetailsModule\n\nProductRentDetailsModule -->\n\nPrismaModule->ProductRentDetailsModule\n\n\n\n\n\nProductRentDetailsService\n\nProductRentDetailsService\n\nProductRentDetailsModule -->\n\nProductRentDetailsService->ProductRentDetailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-rent-details/product-rent-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductRentDetailsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductRentDetailsService } from './providers/product-rent-details.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [ProductRentDetailsService],\n})\nexport class ProductRentDetailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductRentDetailsService.html":{"url":"injectables/ProductRentDetailsService.html","title":"injectable - ProductRentDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductRentDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-rent-details/providers/product-rent-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product-rent-details/providers/product-rent-details.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductRentInput: ProductRentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-rent-details/providers/product-rent-details.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductRentInput\n                                            \n                                                            ProductRentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-rent-details/providers/product-rent-details.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-rent-details/providers/product-rent-details.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-rent-details/providers/product-rent-details.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ProductRentDto } from '../dtos/product-rent.dto';\n\n@Injectable()\nexport class ProductRentDetailsService {\n  constructor(private prisma: PrismaService) {}\n\n  create(createProductRentInput: ProductRentDto) {\n    return this.prisma.productRentDetails.create({\n      data: createProductRentInput,\n      include: {\n        product: true,\n      },\n    });\n  }\n\n  findAll() {\n    return this.prisma.productRentDetails.findMany({\n      include: {\n        product: true,\n      },\n    });\n  }\n\n  findOne(id: number) {\n    return this.prisma.productRentDetails.findUnique({\n      where: { id },\n      include: {\n        product: true,\n      },\n    });\n  }\n\n  remove(id: number) {\n    return this.prisma.productRentDetails.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductRentDto.html":{"url":"classes/ProductRentDto.html","title":"class - ProductRentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductRentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-rent-details/dtos/product-rent.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-rent-details/dtos/product-rent.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-rent-details/dtos/product-rent.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, Int } from '@nestjs/graphql';\nimport { IsNotEmpty, IsNumber, Min } from 'class-validator';\n\n@InputType()\nexport class ProductRentDto {\n  @Field(() => Int)\n  @IsNotEmpty()\n  productId: number;\n\n  @Field(() => Int)\n  @IsNumber()\n  @Min(0)\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductRentEntity.html":{"url":"classes/ProductRentEntity.html","title":"class - ProductRentEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductRentEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-rent-details/product-rent.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                    Optional\n                                product\n                            \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-rent-details/product-rent.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-rent-details/product-rent.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-rent-details/product-rent.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-rent-details/product-rent.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-rent-details/product-rent.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-rent-details/product-rent.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int } from '@nestjs/graphql';\nimport { ProductEntity } from 'src/products/product.entity';\n\n@ObjectType()\nexport class ProductRentEntity {\n  @Field(() => Int)\n  id: number;\n\n  @Field(() => Int)\n  productId: number;\n\n  @Field(() => Int)\n  price: number;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => ProductEntity)\n  product?: ProductEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductRentResolver.html":{"url":"classes/ProductRentResolver.html","title":"class - ProductRentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductRentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-rent-details/product-rent-details.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createProductRent\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                removeProductRent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRentService: ProductRentDetailsService)\n                    \n                \n                        \n                            \n                                Defined in src/product-rent-details/product-rent-details.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRentService\n                                                  \n                                                        \n                                                                        ProductRentDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createProductRent\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProductRent(createProductRentInput: ProductRentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/product-rent-details/product-rent-details.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductRentInput\n                                            \n                                                            ProductRentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'productRents'})\n                \n            \n\n                    \n                        \n                            Defined in src/product-rent-details/product-rent-details.resolver.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'productRent'})\n                \n            \n\n                    \n                        \n                            Defined in src/product-rent-details/product-rent-details.resolver.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeProductRent\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProductRent(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/product-rent-details/product-rent-details.resolver.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args, Int } from '@nestjs/graphql';\nimport { ProductRentEntity } from './product-rent.entity';\nimport { ProductRentDetailsService } from './providers/product-rent-details.service';\nimport { ProductRentDto } from './dtos/product-rent.dto';\n\n@Resolver(() => ProductRentEntity)\nexport class ProductRentResolver {\n  constructor(private readonly productRentService: ProductRentDetailsService) {}\n\n  @Mutation(() => ProductRentEntity)\n  createProductRent(\n    @Args('createProductRentInput')\n    createProductRentInput: ProductRentDto,\n  ) {\n    return this.productRentService.create(createProductRentInput);\n  }\n\n  @Query(() => [ProductRentEntity], { name: 'productRents' })\n  findAll() {\n    return this.productRentService.findAll();\n  }\n\n  @Query(() => ProductRentEntity, { name: 'productRent' })\n  findOne(@Args('id', { type: () => Int }) id: number) {\n    return this.productRentService.findOne(id);\n  }\n\n  @Mutation(() => ProductRentEntity)\n  removeProductRent(@Args('id', { type: () => Int }) id: number) {\n    return this.productRentService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductSaleDetailsModule.html":{"url":"modules/ProductSaleDetailsModule.html","title":"module - ProductSaleDetailsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductSaleDetailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductSaleDetailsModule\n\n\n\ncluster_ProductSaleDetailsModule_imports\n\n\n\ncluster_ProductSaleDetailsModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductSaleDetailsModule\n\nProductSaleDetailsModule\n\nProductSaleDetailsModule -->\n\nPrismaModule->ProductSaleDetailsModule\n\n\n\n\n\nProductSaleDetailsService\n\nProductSaleDetailsService\n\nProductSaleDetailsModule -->\n\nProductSaleDetailsService->ProductSaleDetailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-sale-details/product-sale-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductSaleDetailsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductSaleDetailsService } from './providers/product-sale-details.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [ProductSaleDetailsService],\n})\nexport class ProductSaleDetailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductSaleDetailsService.html":{"url":"injectables/ProductSaleDetailsService.html","title":"injectable - ProductSaleDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductSaleDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-sale-details/providers/product-sale-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product-sale-details/providers/product-sale-details.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductSaleInput: ProductSaleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-sale-details/providers/product-sale-details.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductSaleInput\n                                            \n                                                            ProductSaleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-sale-details/providers/product-sale-details.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-sale-details/providers/product-sale-details.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-sale-details/providers/product-sale-details.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ProductSaleDto } from '../dtos/product-sale.dto';\n\n@Injectable()\nexport class ProductSaleDetailsService {\n  constructor(private prisma: PrismaService) {}\n\n  create(createProductSaleInput: ProductSaleDto) {\n    return this.prisma.productSaleDetails.create({\n      data: createProductSaleInput,\n      include: {\n        product: true,\n      },\n    });\n  }\n\n  findAll() {\n    return this.prisma.productSaleDetails.findMany({\n      include: {\n        product: true,\n      },\n    });\n  }\n\n  findOne(id: number) {\n    return this.prisma.productSaleDetails.findUnique({\n      where: { id },\n      include: {\n        product: true,\n      },\n    });\n  }\n\n  remove(id: number) {\n    return this.prisma.productSaleDetails.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductSaleDto.html":{"url":"classes/ProductSaleDto.html","title":"class - ProductSaleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductSaleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-sale-details/dtos/product-sale.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-sale-details/dtos/product-sale.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-sale-details/dtos/product-sale.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, Int } from '@nestjs/graphql';\nimport { IsNotEmpty, IsNumber, Min } from 'class-validator';\n\n@InputType()\nexport class ProductSaleDto {\n  @Field(() => Int)\n  @IsNotEmpty()\n  productId: number;\n\n  @Field(() => Int)\n  @IsNumber()\n  @Min(0)\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductSaleEntity.html":{"url":"classes/ProductSaleEntity.html","title":"class - ProductSaleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductSaleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-sale-details/product-sale.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                    Optional\n                                product\n                            \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-sale-details/product-sale.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-sale-details/product-sale.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-sale-details/product-sale.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-sale-details/product-sale.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-sale-details/product-sale.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-sale-details/product-sale.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int } from '@nestjs/graphql';\nimport { ProductEntity } from 'src/products/product.entity';\n\n@ObjectType()\nexport class ProductSaleEntity {\n  @Field(() => Int)\n  id: number;\n\n  @Field(() => Int)\n  productId: number;\n\n  @Field(() => Int)\n  price: number;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => ProductEntity)\n  product?: ProductEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductSaleResolver.html":{"url":"classes/ProductSaleResolver.html","title":"class - ProductSaleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductSaleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-sale-details/product-sale-details.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createProductSale\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                removeProductSale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productSaleService: ProductSaleDetailsService)\n                    \n                \n                        \n                            \n                                Defined in src/product-sale-details/product-sale-details.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productSaleService\n                                                  \n                                                        \n                                                                        ProductSaleDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createProductSale\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProductSale(createProductSaleInput: ProductSaleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/product-sale-details/product-sale-details.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductSaleInput\n                                            \n                                                            ProductSaleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'productSales'})\n                \n            \n\n                    \n                        \n                            Defined in src/product-sale-details/product-sale-details.resolver.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'productSale'})\n                \n            \n\n                    \n                        \n                            Defined in src/product-sale-details/product-sale-details.resolver.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeProductSale\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProductSale(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/product-sale-details/product-sale-details.resolver.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args, Int } from '@nestjs/graphql';\nimport { ProductSaleDto } from './dtos/product-sale.dto';\nimport { ProductSaleDetailsService } from './providers/product-sale-details.service';\nimport { ProductSaleEntity } from './product-sale.entity';\n\n@Resolver(() => ProductSaleEntity)\nexport class ProductSaleResolver {\n  constructor(private readonly productSaleService: ProductSaleDetailsService) {}\n\n  @Mutation(() => ProductSaleEntity)\n  createProductSale(\n    @Args('createProductSaleInput')\n    createProductSaleInput: ProductSaleDto,\n  ) {\n    return this.productSaleService.create(createProductSaleInput);\n  }\n\n  @Query(() => [ProductSaleEntity], { name: 'productSales' })\n  findAll() {\n    return this.productSaleService.findAll();\n  }\n\n  @Query(() => ProductSaleEntity, { name: 'productSale' })\n  findOne(@Args('id', { type: () => Int }) id: number) {\n    return this.productSaleService.findOne(id);\n  }\n\n  @Mutation(() => ProductSaleEntity)\n  removeProductSale(@Args('id', { type: () => Int }) id: number) {\n    return this.productSaleService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPrismaModule->ProductsModule\n\n\n\n\n\nProductRentDetailsModule\n\nProductRentDetailsModule\n\nProductsModule -->\n\nProductRentDetailsModule->ProductsModule\n\n\n\n\n\nProductSaleDetailsModule\n\nProductSaleDetailsModule\n\nProductsModule -->\n\nProductSaleDetailsModule->ProductsModule\n\n\n\n\n\nCreateProductsProvider\n\nCreateProductsProvider\n\nProductsModule -->\n\nCreateProductsProvider->ProductsModule\n\n\n\n\n\nDeleteProductsProvider\n\nDeleteProductsProvider\n\nProductsModule -->\n\nDeleteProductsProvider->ProductsModule\n\n\n\n\n\nFetchAllProductsProvider\n\nFetchAllProductsProvider\n\nProductsModule -->\n\nFetchAllProductsProvider->ProductsModule\n\n\n\n\n\nFetchProductsByUserProvider\n\nFetchProductsByUserProvider\n\nProductsModule -->\n\nFetchProductsByUserProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductsProvider\n\nUpdateProductsProvider\n\nProductsModule -->\n\nUpdateProductsProvider->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateProductsProvider\n                        \n                        \n                            DeleteProductsProvider\n                        \n                        \n                            FetchAllProductsProvider\n                        \n                        \n                            FetchProductsByUserProvider\n                        \n                        \n                            ProductsService\n                        \n                        \n                            UpdateProductsProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            ProductRentDetailsModule\n                        \n                        \n                            ProductSaleDetailsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsService } from './providers/products.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { CreateProductsProvider } from './providers/create-products.provider';\nimport { ProductsResolver } from './products.resolver';\nimport { JwtModule } from '@nestjs/jwt';\nimport { FetchProductsByUserProvider } from './providers/fetch-products-by-user.provider';\nimport { FetchAllProductsProvider } from './providers/fetch-all-products.provider';\nimport { ProductSaleDetailsModule } from 'src/product-sale-details/product-sale-details.module';\nimport { ProductRentDetailsModule } from 'src/product-rent-details/product-rent-details.module';\nimport { UpdateProductsProvider } from './providers/update-products.provider';\nimport { DeleteProductsProvider } from './providers/delete-products.provider';\n\n@Module({\n  imports: [\n    JwtModule,\n    PrismaModule,\n    ProductSaleDetailsModule,\n    ProductRentDetailsModule,\n  ],\n  providers: [\n    ProductsService,\n    CreateProductsProvider,\n    ProductsResolver,\n    FetchProductsByUserProvider,\n    FetchAllProductsProvider,\n    UpdateProductsProvider,\n    DeleteProductsProvider,\n  ],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsResolver.html":{"url":"classes/ProductsResolver.html","title":"class - ProductsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createProducts\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateProduct\n                            \n                            \n                                    \n                                    Async\n                                viewAllProducts\n                            \n                            \n                                    \n                                    \n                                    Async\n                                viewProductsByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductsService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProducts(createProductInput: CreateProductsDto, jwtPayload: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.resolver.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductInput\n                                            \n                                                            CreateProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwtPayload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: number, jwtPayload: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.resolver.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwtPayload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(productId: number, updateProductInput: UpdateProductDto, jwtPayload: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.resolver.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductInput\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwtPayload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        viewAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    viewAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.resolver.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        viewProductsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    viewProductsByUser(jwtPayload: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.resolver.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwtPayload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Mutation, Args, Query } from '@nestjs/graphql';\nimport { ProductEntity } from './product.entity';\nimport { CreateProductsDto } from './dtos/create-product.dto';\nimport { ProductsService } from './providers/products.service';\nimport { CurrentUser } from 'src/auth/decorators/current-user.decorator';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { NotFoundException, UseGuards } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { JwtPayload } from 'src/auth/interfaces/payload.interface';\nimport { UpdateProductDto } from './dtos/update-product.dto';\n\n@Resolver(() => ProductEntity)\nexport class ProductsResolver {\n  constructor(\n    private productService: ProductsService,\n    private prisma: PrismaService,\n  ) {}\n\n  @Mutation(() => ProductEntity)\n  @UseGuards(JwtAuthGuard)\n  async createProducts(\n    @Args('createProduct') createProductInput: CreateProductsDto,\n    @CurrentUser() jwtPayload: JwtPayload,\n  ): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id: jwtPayload.sub },\n    });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return this.productService.create(createProductInput, user);\n  }\n\n  @Mutation(() => ProductEntity)\n  @UseGuards(JwtAuthGuard)\n  async updateProduct(\n    @Args('productId') productId: number,\n    @Args('updateProduct') updateProductInput: UpdateProductDto,\n    @CurrentUser() jwtPayload: JwtPayload,\n  ): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id: jwtPayload.sub },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return this.productService.updateProduct(\n      productId,\n      updateProductInput,\n      user.id,\n    );\n  }\n\n  @Mutation(() => Boolean)\n  @UseGuards(JwtAuthGuard)\n  async deleteProduct(\n    @Args('productId') productId: number,\n    @CurrentUser() jwtPayload: JwtPayload,\n  ): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id: jwtPayload.sub },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return this.productService.deleteProduct(productId, user.id);\n  }\n\n  @Query(() => [ProductEntity])\n  @UseGuards(JwtAuthGuard)\n  async viewProductsByUser(\n    @CurrentUser() jwtPayload: JwtPayload,\n  ): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id: jwtPayload.sub },\n    });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return this.productService.fetchProductsByUser(user);\n  }\n\n  @Query(() => [ProductEntity])\n  async viewAllProducts(): Promise {\n    return this.productService.fetchAllProducts();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Public\n                                    Async\n                                fetchAllProducts\n                            \n                            \n                                    Public\n                                    Async\n                                fetchProductsByUser\n                            \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createProductsProvider: CreateProductsProvider, fetchProductsByUserProvider: FetchProductsByUserProvider, fetchAllProductsProvider: FetchAllProductsProvider, updateProductsProvider: UpdateProductsProvider, deleteProductsProvider: DeleteProductsProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/products.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createProductsProvider\n                                                  \n                                                        \n                                                                        CreateProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fetchProductsByUserProvider\n                                                  \n                                                        \n                                                                        FetchProductsByUserProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fetchAllProductsProvider\n                                                  \n                                                        \n                                                                        FetchAllProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateProductsProvider\n                                                  \n                                                        \n                                                                        UpdateProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteProductsProvider\n                                                  \n                                                        \n                                                                        DeleteProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductsDto: CreateProductsDto, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductsDto\n                                            \n                                                            CreateProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: number, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fetchAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fetchProductsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchProductsByUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(productId: number, updateProductDto: UpdateProductDto, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { CreateProductsProvider } from './create-products.provider';\nimport { CreateProductsDto } from '../dtos/create-product.dto';\nimport { FetchProductsByUserProvider } from './fetch-products-by-user.provider';\nimport { ProductEntity } from '../product.entity';\nimport { FetchAllProductsProvider } from './fetch-all-products.provider';\nimport { UpdateProductsProvider } from './update-products.provider';\nimport { UpdateProductDto } from '../dtos/update-product.dto';\nimport { DeleteProductsProvider } from './delete-products.provider';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    private createProductsProvider: CreateProductsProvider,\n    private fetchProductsByUserProvider: FetchProductsByUserProvider,\n    private fetchAllProductsProvider: FetchAllProductsProvider,\n    private updateProductsProvider: UpdateProductsProvider,\n    private deleteProductsProvider: DeleteProductsProvider,\n  ) {}\n\n  public async create(createProductsDto: CreateProductsDto, user: User) {\n    return await this.createProductsProvider.createProduct(\n      createProductsDto,\n      user,\n    );\n  }\n  public async fetchAllProducts(): Promise {\n    return await this.fetchAllProductsProvider.fetchAllProducts();\n  }\n  public async fetchProductsByUser(user: User): Promise {\n    return await this.fetchProductsByUserProvider.fetchProductsByUser(user);\n  }\n  public async updateProduct(\n    productId: number,\n    updateProductDto: UpdateProductDto,\n    userId: string,\n  ): Promise {\n    return await this.updateProductsProvider.updateProduct(\n      productId,\n      updateProductDto,\n      userId,\n    );\n  }\n  public async deleteProduct(\n    productId: number,\n    userId: string,\n  ): Promise {\n    return await this.deleteProductsProvider.deleteProduct(productId, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveFromCartProvider.html":{"url":"injectables/RemoveFromCartProvider.html","title":"injectable - RemoveFromCartProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RemoveFromCartProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/providers/remove-from-cart.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/cart/providers/remove-from-cart.provider.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFromCart(userId: string, cartItemId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/providers/remove-from-cart.provider.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartItemId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class RemoveFromCartProvider {\n  constructor(private prisma: PrismaService) {}\n\n  async removeFromCart(userId: string, cartItemId: number) {\n    const cartItem = await this.prisma.cartItem.findUnique({\n      where: { id: cartItemId },\n      include: {\n        cart: {\n          include: {\n            items: {\n              include: {\n                product: {\n                  include: {\n                    saleDetails: true,\n                    rentDetails: true,\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    });\n\n    if (!cartItem || cartItem.cart.userId !== userId) {\n      throw new NotFoundException('Cart item not found');\n    }\n\n    return this.prisma.$transaction(async (prisma) => {\n      // Delete the cart item first\n      await prisma.cartItem.delete({\n        where: { id: cartItemId },\n      });\n\n      // Check remaining items directly from the database\n      const remainingItemsCount = await prisma.cartItem.count({\n        where: {\n          cartId: cartItem.cart.id,\n        },\n      });\n\n      if (remainingItemsCount === 0) {\n        // Delete the cart if there are no remaining items\n        await prisma.cart.delete({\n          where: { id: cartItem.cart.id },\n        });\n\n        // Return empty cart structure\n        return {\n          id: cartItem.cart.id,\n          userId: userId,\n          totalPrice: 0,\n          items: [],\n        };\n      }\n\n      // If there are remaining items, update and return the cart\n      const updatedCart = await prisma.cart.update({\n        where: { id: cartItem.cart.id },\n        data: {\n          totalPrice: {\n            decrement: cartItem.price,\n          },\n        },\n        include: {\n          items: {\n            include: {\n              product: {\n                include: {\n                  saleDetails: true,\n                  rentDetails: true,\n                },\n              },\n            },\n          },\n        },\n      });\n\n      return updatedCart;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeedModule.html":{"url":"modules/SeedModule.html","title":"module - SeedModule","body":"\n                   \n\n\n\n\n    Modules\n    SeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeedModule\n\n\n\ncluster_SeedModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nSeedModule\n\nSeedModule\n\nSeedModule -->\n\nPrismaService->SeedModule\n\n\n\n\n\nSeedService\n\nSeedService\n\nSeedModule -->\n\nSeedService->SeedModule\n\n\n\nSeedModule -->\n\nSeedService->SeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seed/seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            SeedService\n                        \n                        \n                            SeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { SeedService } from './seed.service';\n\n@Module({\n  providers: [SeedService, PrismaService, SeedService],\n})\nexport class SeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeedService.html":{"url":"injectables/SeedService.html","title":"injectable - SeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seed/seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultCategories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/seed/seed.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/seed/seed.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultCategories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: 'ELECTRONICS' },\n    { name: 'FURNITURE' },\n    { name: 'HOME APPLIANCES' },\n    { name: 'SPORTING GOODS' },\n    { name: 'OUTDOOR' },\n    { name: 'TOYS' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/seed/seed.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SeedService implements OnModuleInit {\n  private defaultCategories = [\n    { name: 'ELECTRONICS' },\n    { name: 'FURNITURE' },\n    { name: 'HOME APPLIANCES' },\n    { name: 'SPORTING GOODS' },\n    { name: 'OUTDOOR' },\n    { name: 'TOYS' },\n  ];\n\n  constructor(private prisma: PrismaService) {}\n\n  async onModuleInit() {\n    console.log('Seeding default categories...');\n    for (const category of this.defaultCategories) {\n      await this.prisma.category.upsert({\n        where: { name: category.name },\n        update: {},\n        create: category,\n      });\n    }\n    console.log('Default categories seeded!');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\n@InputType()\nexport class SignUpDto {\n  @Field(() => String)\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @Field()\n  @IsString()\n  lastName: string;\n\n  @Field()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @Field()\n  @MinLength(8)\n  @IsNotEmpty()\n  password: string;\n}\n\n@InputType()\nexport class SignInDto {\n  @Field()\n  @IsEmail()\n  email: string;\n\n  @Field()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@MinLength(8)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\n@InputType()\nexport class SignUpDto {\n  @Field(() => String)\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @Field()\n  @IsString()\n  lastName: string;\n\n  @Field()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @Field()\n  @MinLength(8)\n  @IsNotEmpty()\n  password: string;\n}\n\n@InputType()\nexport class SignInDto {\n  @Field()\n  @IsEmail()\n  email: string;\n\n  @Field()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenModel.html":{"url":"classes/TokenModel.html","title":"class - TokenModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/token.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/token.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/token.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { UserEntity } from 'src/users/user.entity';\n\n@ObjectType()\nexport class TokenModel {\n  @Field()\n  accessToken: string;\n\n  @Field()\n  refreshToken: string;\n\n  @Field()\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryInput.html":{"url":"classes/UpdateCategoryInput.html","title":"class - UpdateCategoryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dtos/update-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/update-category.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, PartialType } from '@nestjs/graphql';\nimport { CreateCategoryInput } from './create-category.dto';\n\n@InputType()\nexport class UpdateCategoryInput extends PartialType(CreateCategoryInput) {\n  @Field(() => String, { nullable: true })\n  name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/update-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                available\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                categories\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                rentDetails\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                saleDetails\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Availability\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsEnum(Availability)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/update-product.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/update-product.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/update-product.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/update-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/update-product.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        rentDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductDetailsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@ValidateIf(product => )@ValidateNested()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/update-product.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        saleDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductDetailsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@ValidateIf(product => )@ValidateNested()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/update-product.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsString()@MinLength(2)@MaxLength(512)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/update-product.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int } from '@nestjs/graphql';\nimport {\n  IsArray,\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength,\n  ValidateIf,\n  ValidateNested,\n} from 'class-validator';\nimport { Availability } from '../enums/availability.enum';\nimport { ProductDetailsDto } from './product-details.dto';\nimport { Type } from 'class-transformer';\n\n@InputType()\nexport class UpdateProductDto {\n  @Field(() => Int)\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n\n  @Field({ nullable: true })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(512)\n  @IsOptional()\n  title?: string;\n\n  @Field({ nullable: true })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @Field({ nullable: true })\n  @IsEnum(Availability)\n  @IsOptional()\n  available?: Availability;\n\n  @Field(() => Int, { nullable: true })\n  @IsInt()\n  @IsOptional()\n  quantity?: number;\n\n  @Field(() => [Int], { nullable: true })\n  @IsArray()\n  @IsOptional()\n  categories?: number[];\n\n  @Field(() => ProductDetailsDto, { nullable: true })\n  @ValidateIf(\n    (product) =>\n      product.available === Availability.SALE ||\n      product.available === Availability.BOTH,\n  )\n  @ValidateNested()\n  @Type(() => ProductDetailsDto)\n  @IsOptional()\n  saleDetails?: ProductDetailsDto;\n\n  @Field(() => ProductDetailsDto, { nullable: true })\n  @ValidateIf(\n    (product) =>\n      product.available === Availability.RENT ||\n      product.available === Availability.BOTH,\n  )\n  @ValidateNested()\n  @Type(() => ProductDetailsDto)\n  @IsOptional()\n  rentDetails?: ProductDetailsDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateProductsProvider.html":{"url":"injectables/UpdateProductsProvider.html","title":"injectable - UpdateProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/update-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/update-products.provider.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(productId: number, updateProductDto: UpdateProductDto, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/update-products.provider.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ProductEntity } from '../product.entity';\nimport { UpdateProductDto } from '../dtos/update-product.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class UpdateProductsProvider {\n  constructor(private prisma: PrismaService) {}\n  public async updateProduct(\n    productId: number,\n    updateProductDto: UpdateProductDto,\n    userId: string,\n  ): Promise {\n    const existingProduct = await this.prisma.product.findUnique({\n      where: { id: productId },\n      include: {\n        categories: true,\n        saleDetails: true,\n        rentDetails: true,\n      },\n    });\n\n    if (!existingProduct) {\n      throw new NotFoundException('Product not found');\n    }\n\n    if (existingProduct.userId !== userId) {\n      throw new UnauthorizedException('Unauthorized access to product');\n    }\n\n    const updatedProduct = await this.prisma.product.update({\n      where: { id: productId },\n      data: {\n        title: updateProductDto.title ?? undefined,\n        description: updateProductDto.description ?? undefined,\n        available: updateProductDto.available ?? undefined,\n        quantity: updateProductDto.quantity ?? undefined,\n        ...(updateProductDto.categories && {\n          categories: {\n            deleteMany: {},\n            create: updateProductDto.categories.map((categoryId) => ({\n              category: {\n                connect: {\n                  id: categoryId,\n                },\n              },\n            })),\n          },\n        }),\n        ...(updateProductDto.saleDetails && {\n          saleDetails: {\n            upsert: {\n              create: { price: updateProductDto.saleDetails.price },\n              update: { price: updateProductDto.saleDetails.price },\n            },\n          },\n        }),\n        ...(updateProductDto.rentDetails && {\n          rentDetails: {\n            upsert: {\n              create: { price: updateProductDto.rentDetails.price },\n              update: { price: updateProductDto.rentDetails.price },\n            },\n          },\n        }),\n      },\n      include: {\n        owner: true,\n        categories: {\n          include: {\n            category: true,\n          },\n        },\n        saleDetails: true,\n        rentDetails: true,\n      },\n    });\n\n    return {\n      ...updatedProduct,\n      categories: updatedProduct.categories.map((pc) => pc.category),\n    } as ProductEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : v4()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { v4 } from 'uuid';\n\n@ObjectType()\nexport class UserEntity {\n  @Field()\n  id: string = v4();\n\n  @Field()\n  firstName: string;\n\n  @Field()\n  lastName: string;\n\n  @Field()\n  email: string;\n\n  password: string;\n\n  @Field()\n  createdAt: Date = new Date();\n\n  @Field()\n  updatedAt: Date = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './providers/users.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UsersResolver } from './users.resolver';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [JwtModule, PrismaModule],\n  providers: [UsersService, UsersResolver],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query } from '@nestjs/graphql';\nimport { UseGuards } from '@nestjs/common';\nimport { UsersService } from './providers/users.service';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CurrentUser } from '../auth/decorators/current-user.decorator';\nimport { UserEntity } from './user.entity';\n\n@Resolver(() => UserEntity)\nexport class UsersResolver {\n  constructor(private userService: UsersService) {}\n\n  @Query(() => UserEntity)\n  @UseGuards(JwtAuthGuard)\n  async me(@CurrentUser() user: UserEntity): Promise {\n    return this.userService.findByEmail(user.email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userData: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { SignUpDto } from 'src/auth/dtos/auth.dto';\nimport { UserEntity } from '../user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async findByEmail(email: string): Promise {\n    return this.prisma.user.findUnique({\n      where: { email },\n    });\n  }\n\n  async findById(id: string): Promise {\n    return this.prisma.user.findUnique({\n      where: { id },\n    });\n  }\n\n  async create(userData: SignUpDto): Promise {\n    return this.prisma.user.create({\n      data: userData,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dtos/token.dto.ts\n            \n            class\n            TokenModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/providers/bcrypt.provider.ts\n            \n            injectable\n            BcryptProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/hashing.provider.ts\n            \n            injectable\n            HashingProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/cart.resolver.ts\n            \n            class\n            CartResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cart/dto/add-to-cart.dto.ts\n            \n            class\n            AddToCartDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart/entities/cart-item.entity.ts\n            \n            class\n            CartItemEntity\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/cart/entities/cart.entity.ts\n            \n            class\n            CartEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cart/guards/cart-validation.guard.ts\n            \n            guard\n            CartValidationGuard\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cart/providers/add-to-cart.provider.ts\n            \n            injectable\n            AddToCartProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cart/providers/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cart/providers/fetch-cart.provider.ts\n            \n            injectable\n            FetchCartProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/providers/remove-from-cart.provider.ts\n            \n            injectable\n            RemoveFromCartProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.resolver.ts\n            \n            class\n            CategoriesResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/categories/category.entity.ts\n            \n            class\n            CategoryEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/categories/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/categories/dtos/update-category.dto.ts\n            \n            class\n            UpdateCategoryInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/categories/providers/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/categories/providers/fetch-categories.provider.ts\n            \n            injectable\n            FetchAllCategoriesProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/categories/providers/mutate-categories.provider.ts\n            \n            injectable\n            MutateCategoriesProvider\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/dtos/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/orders/entities/order-item-detail.entity.ts\n            \n            class\n            OrderItemDetailEntity\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/orders/entities/order.entity.ts\n            \n            class\n            OrderEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orders/orders.resolver.ts\n            \n            class\n            OrdersResolver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/orders/providers/create-order.provider.ts\n            \n            injectable\n            CreateOrderProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orders/providers/fetch-orders.provider.ts\n            \n            injectable\n            FetchOrdersProvider\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/orders/providers/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/product-rent-details/dtos/product-rent.dto.ts\n            \n            class\n            ProductRentDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-rent-details/product-rent-details.resolver.ts\n            \n            class\n            ProductRentResolver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product-rent-details/product-rent.entity.ts\n            \n            class\n            ProductRentEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product-rent-details/providers/product-rent-details.service.ts\n            \n            injectable\n            ProductRentDetailsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product-sale-details/dtos/product-sale.dto.ts\n            \n            class\n            ProductSaleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-sale-details/product-sale-details.resolver.ts\n            \n            class\n            ProductSaleResolver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product-sale-details/product-sale.entity.ts\n            \n            class\n            ProductSaleEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product-sale-details/providers/product-sale-details.service.ts\n            \n            injectable\n            ProductSaleDetailsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/dtos/create-product.dto.ts\n            \n            class\n            CreateProductsDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/products/dtos/product-details.dto.ts\n            \n            class\n            ProductDetailsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/dtos/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            class\n            ProductEntity\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/products/products.resolver.ts\n            \n            class\n            ProductsResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/providers/create-products.provider.ts\n            \n            injectable\n            CreateProductsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/delete-products.provider.ts\n            \n            injectable\n            DeleteProductsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/fetch-all-products.provider.ts\n            \n            injectable\n            FetchAllProductsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/fetch-products-by-user.provider.ts\n            \n            injectable\n            FetchProductsByUserProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/providers/update-products.provider.ts\n            \n            injectable\n            UpdateProductsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seed/seed.service.ts\n            \n            injectable\n            SeedService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.11.3\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^6.2.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            graphql : ^16.10.0\n        \n            prisma : ^6.2.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Availability   (src/.../availability.enum.ts)\n                        \n                        \n                            CartItemTypes   (src/.../cart-item-type.enum.ts)\n                        \n                        \n                            OrderType   (src/.../order-type.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/products/enums/availability.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Availability\n                    \n                \n                        \n                            \n                                 SALE\n                            \n                        \n                        \n                            \n                                Value : SALE\n                            \n                        \n                        \n                            \n                                 RENT\n                            \n                        \n                        \n                            \n                                Value : RENT\n                            \n                        \n                        \n                            \n                                 BOTH\n                            \n                        \n                        \n                            \n                                Value : BOTH\n                            \n                        \n                        \n                            \n                                 OUTOFSTOCK\n                            \n                        \n                        \n                            \n                                Value : OUTOFSTOCK\n                            \n                        \n            \n        \n\n    src/cart/enums/cart-item-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartItemTypes\n                    \n                \n                        \n                            \n                                 BUY\n                            \n                        \n                        \n                            \n                                Value : BUY\n                            \n                        \n                        \n                            \n                                 RENT\n                            \n                        \n                        \n                            \n                                Value : RENT\n                            \n                        \n            \n        \n\n    src/orders/entities/order-type.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 BUY\n                            \n                        \n                        \n                            \n                                Value : BUY\n                            \n                        \n                        \n                            \n                                 RENT\n                            \n                        \n                        \n                            \n                                Value : RENT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ yarn installCompile and run the project\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodRun tests\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ yarn install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductRentDetailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductSaleDetailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_ProductRentDetailsModule\n\n\n\ncluster_ProductRentDetailsModule_providers\n\n\n\ncluster_ProductSaleDetailsModule\n\n\n\ncluster_ProductSaleDetailsModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_SeedModule\n\n\n\ncluster_SeedModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtAuthGuard \n\nJwtAuthGuard \n\nJwtAuthGuard  -->\n\nAuthModule->JwtAuthGuard \n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nCartModule -->\n\nPrismaModule->CartModule\n\n\n\nCategoriesModule -->\n\nPrismaModule->CategoriesModule\n\n\n\nOrdersModule -->\n\nPrismaModule->OrdersModule\n\n\n\n\n\nProductRentDetailsModule\n\nProductRentDetailsModule\n\nProductRentDetailsModule -->\n\nPrismaModule->ProductRentDetailsModule\n\n\n\n\n\nProductSaleDetailsModule\n\nProductSaleDetailsModule\n\nProductSaleDetailsModule -->\n\nPrismaModule->ProductSaleDetailsModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPrismaModule->ProductsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nProductsModule -->\n\nProductRentDetailsModule->ProductsModule\n\n\n\nAppModule -->\n\nProductRentDetailsModule->AppModule\n\n\n\nProductsModule -->\n\nProductSaleDetailsModule->ProductsModule\n\n\n\nAppModule -->\n\nProductSaleDetailsModule->AppModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nSeedModule\n\nSeedModule\n\nAppModule -->\n\nSeedModule->AppModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nSeedModule -->\n\nPrismaService->SeedModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBcryptProvider\n\nBcryptProvider\n\nAuthModule -->\n\nBcryptProvider->AuthModule\n\n\n\n\n\nAddToCartProvider\n\nAddToCartProvider\n\nCartModule -->\n\nAddToCartProvider->CartModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nFetchCartProvider\n\nFetchCartProvider\n\nCartModule -->\n\nFetchCartProvider->CartModule\n\n\n\n\n\nRemoveFromCartProvider\n\nRemoveFromCartProvider\n\nCartModule -->\n\nRemoveFromCartProvider->CartModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nFetchAllCategoriesProvider\n\nFetchAllCategoriesProvider\n\nCategoriesModule -->\n\nFetchAllCategoriesProvider->CategoriesModule\n\n\n\n\n\nMutateCategoriesProvider\n\nMutateCategoriesProvider\n\nCategoriesModule -->\n\nMutateCategoriesProvider->CategoriesModule\n\n\n\n\n\nCreateOrderProvider\n\nCreateOrderProvider\n\nOrdersModule -->\n\nCreateOrderProvider->OrdersModule\n\n\n\n\n\nFetchOrdersProvider\n\nFetchOrdersProvider\n\nOrdersModule -->\n\nFetchOrdersProvider->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nProductRentDetailsService\n\nProductRentDetailsService\n\nProductRentDetailsModule -->\n\nProductRentDetailsService->ProductRentDetailsModule\n\n\n\n\n\nProductSaleDetailsService\n\nProductSaleDetailsService\n\nProductSaleDetailsModule -->\n\nProductSaleDetailsService->ProductSaleDetailsModule\n\n\n\n\n\nCreateProductsProvider\n\nCreateProductsProvider\n\nProductsModule -->\n\nCreateProductsProvider->ProductsModule\n\n\n\n\n\nDeleteProductsProvider\n\nDeleteProductsProvider\n\nProductsModule -->\n\nDeleteProductsProvider->ProductsModule\n\n\n\n\n\nFetchAllProductsProvider\n\nFetchAllProductsProvider\n\nProductsModule -->\n\nFetchAllProductsProvider->ProductsModule\n\n\n\n\n\nFetchProductsByUserProvider\n\nFetchProductsByUserProvider\n\nProductsModule -->\n\nFetchProductsByUserProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductsProvider\n\nUpdateProductsProvider\n\nProductsModule -->\n\nUpdateProductsProvider->ProductsModule\n\n\n\n\n\nSeedService\n\nSeedService\n\nSeedModule -->\n\nSeedService->SeedModule\n\n\n\nSeedModule -->\n\nSeedService->SeedModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, context: ExecutionContext): JwtPayload => {\n    const ctx = GqlExecutionContext.create(context);\n    const user = ctx.getContext().req.user;\n    return user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
